//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50401.0
// 
namespace AiciWeb.AiciServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AiciMesage", Namespace="http://schemas.datacontract.org/2004/07/AiciWeb.Web")]
    public partial class AiciMesage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ChannelField;
        
        private string InputMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputMessage {
            get {
                return this.InputMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.InputMessageField, value) != true)) {
                    this.InputMessageField = value;
                    this.RaisePropertyChanged("InputMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AiciServiceReference.IAiciService", CallbackContract=typeof(AiciWeb.AiciServiceReference.IAiciServiceCallback))]
    public interface IAiciService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAiciService/RequestChannel", ReplyAction="http://tempuri.org/IAiciService/RequestChannelResponse")]
        System.IAsyncResult BeginRequestChannel(System.AsyncCallback callback, object asyncState);
        
        string EndRequestChannel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAiciService/ReleaseChannel", ReplyAction="http://tempuri.org/IAiciService/ReleaseChannelResponse")]
        System.IAsyncResult BeginReleaseChannel(string id, System.AsyncCallback callback, object asyncState);
        
        void EndReleaseChannel(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAiciService/SendMessage", ReplyAction="http://tempuri.org/IAiciService/SendMessageResponse")]
        System.IAsyncResult BeginSendMessage(AiciWeb.AiciServiceReference.AiciMesage composite, System.AsyncCallback callback, object asyncState);
        
        void EndSendMessage(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAiciServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAiciService/Output")]
        void Output(string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAiciServiceChannel : AiciWeb.AiciServiceReference.IAiciService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RequestChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AiciServiceClient : System.ServiceModel.DuplexClientBase<AiciWeb.AiciServiceReference.IAiciService>, AiciWeb.AiciServiceReference.IAiciService {
        
        private BeginOperationDelegate onBeginRequestChannelDelegate;
        
        private EndOperationDelegate onEndRequestChannelDelegate;
        
        private System.Threading.SendOrPostCallback onRequestChannelCompletedDelegate;
        
        private BeginOperationDelegate onBeginReleaseChannelDelegate;
        
        private EndOperationDelegate onEndReleaseChannelDelegate;
        
        private System.Threading.SendOrPostCallback onReleaseChannelCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMessageDelegate;
        
        private EndOperationDelegate onEndSendMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendMessageCompletedDelegate;
        
        private bool useGeneratedCallback;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AiciServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AiciServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AiciServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AiciServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AiciServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public AiciServiceClient(string endpointConfigurationName) : 
                this(new AiciServiceClientCallback(), endpointConfigurationName) {
        }
        
        private AiciServiceClient(AiciServiceClientCallback callbackImpl, string endpointConfigurationName) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfigurationName) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public AiciServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new AiciServiceClientCallback(), binding, remoteAddress) {
        }
        
        private AiciServiceClient(AiciServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public AiciServiceClient() : 
                this(new AiciServiceClientCallback()) {
        }
        
        private AiciServiceClient(AiciServiceClientCallback callbackImpl) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl)) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RequestChannelCompletedEventArgs> RequestChannelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReleaseChannelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendMessageCompleted;
        
        public event System.EventHandler<OutputReceivedEventArgs> OutputReceived;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AiciWeb.AiciServiceReference.IAiciService.BeginRequestChannel(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRequestChannel(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AiciWeb.AiciServiceReference.IAiciService.EndRequestChannel(System.IAsyncResult result) {
            return base.Channel.EndRequestChannel(result);
        }
        
        private System.IAsyncResult OnBeginRequestChannel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((AiciWeb.AiciServiceReference.IAiciService)(this)).BeginRequestChannel(callback, asyncState);
        }
        
        private object[] OnEndRequestChannel(System.IAsyncResult result) {
            string retVal = ((AiciWeb.AiciServiceReference.IAiciService)(this)).EndRequestChannel(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRequestChannelCompleted(object state) {
            if ((this.RequestChannelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RequestChannelCompleted(this, new RequestChannelCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RequestChannelAsync() {
            this.RequestChannelAsync(null);
        }
        
        public void RequestChannelAsync(object userState) {
            if ((this.onBeginRequestChannelDelegate == null)) {
                this.onBeginRequestChannelDelegate = new BeginOperationDelegate(this.OnBeginRequestChannel);
            }
            if ((this.onEndRequestChannelDelegate == null)) {
                this.onEndRequestChannelDelegate = new EndOperationDelegate(this.OnEndRequestChannel);
            }
            if ((this.onRequestChannelCompletedDelegate == null)) {
                this.onRequestChannelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRequestChannelCompleted);
            }
            base.InvokeAsync(this.onBeginRequestChannelDelegate, null, this.onEndRequestChannelDelegate, this.onRequestChannelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AiciWeb.AiciServiceReference.IAiciService.BeginReleaseChannel(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReleaseChannel(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void AiciWeb.AiciServiceReference.IAiciService.EndReleaseChannel(System.IAsyncResult result) {
            base.Channel.EndReleaseChannel(result);
        }
        
        private System.IAsyncResult OnBeginReleaseChannel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string id = ((string)(inValues[0]));
            return ((AiciWeb.AiciServiceReference.IAiciService)(this)).BeginReleaseChannel(id, callback, asyncState);
        }
        
        private object[] OnEndReleaseChannel(System.IAsyncResult result) {
            ((AiciWeb.AiciServiceReference.IAiciService)(this)).EndReleaseChannel(result);
            return null;
        }
        
        private void OnReleaseChannelCompleted(object state) {
            if ((this.ReleaseChannelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReleaseChannelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReleaseChannelAsync(string id) {
            this.ReleaseChannelAsync(id, null);
        }
        
        public void ReleaseChannelAsync(string id, object userState) {
            if ((this.onBeginReleaseChannelDelegate == null)) {
                this.onBeginReleaseChannelDelegate = new BeginOperationDelegate(this.OnBeginReleaseChannel);
            }
            if ((this.onEndReleaseChannelDelegate == null)) {
                this.onEndReleaseChannelDelegate = new EndOperationDelegate(this.OnEndReleaseChannel);
            }
            if ((this.onReleaseChannelCompletedDelegate == null)) {
                this.onReleaseChannelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReleaseChannelCompleted);
            }
            base.InvokeAsync(this.onBeginReleaseChannelDelegate, new object[] {
                        id}, this.onEndReleaseChannelDelegate, this.onReleaseChannelCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AiciWeb.AiciServiceReference.IAiciService.BeginSendMessage(AiciWeb.AiciServiceReference.AiciMesage composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMessage(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void AiciWeb.AiciServiceReference.IAiciService.EndSendMessage(System.IAsyncResult result) {
            base.Channel.EndSendMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            AiciWeb.AiciServiceReference.AiciMesage composite = ((AiciWeb.AiciServiceReference.AiciMesage)(inValues[0]));
            return ((AiciWeb.AiciServiceReference.IAiciService)(this)).BeginSendMessage(composite, callback, asyncState);
        }
        
        private object[] OnEndSendMessage(System.IAsyncResult result) {
            ((AiciWeb.AiciServiceReference.IAiciService)(this)).EndSendMessage(result);
            return null;
        }
        
        private void OnSendMessageCompleted(object state) {
            if ((this.SendMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMessageAsync(AiciWeb.AiciServiceReference.AiciMesage composite) {
            this.SendMessageAsync(composite, null);
        }
        
        public void SendMessageAsync(AiciWeb.AiciServiceReference.AiciMesage composite, object userState) {
            if ((this.onBeginSendMessageDelegate == null)) {
                this.onBeginSendMessageDelegate = new BeginOperationDelegate(this.OnBeginSendMessage);
            }
            if ((this.onEndSendMessageDelegate == null)) {
                this.onEndSendMessageDelegate = new EndOperationDelegate(this.OnEndSendMessage);
            }
            if ((this.onSendMessageCompletedDelegate == null)) {
                this.onSendMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendMessageDelegate, new object[] {
                        composite}, this.onEndSendMessageDelegate, this.onSendMessageCompletedDelegate, userState);
        }
        
        private void OnOutputReceived(object state) {
            if ((this.OutputReceived != null)) {
                object[] results = ((object[])(state));
                this.OutputReceived(this, new OutputReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void VerifyCallbackEvents() {
            if (((this.useGeneratedCallback != true) 
                        && (this.OutputReceived != null))) {
                throw new System.InvalidOperationException("Callback events cannot be used when the callback InstanceContext is specified. Pl" +
                        "ease choose between specifying the callback InstanceContext or subscribing to th" +
                        "e callback events.");
            }
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AiciWeb.AiciServiceReference.IAiciService CreateChannel() {
            return new AiciServiceClientChannel(this);
        }
        
        private class AiciServiceClientCallback : object, IAiciServiceCallback {
            
            private AiciServiceClient proxy;
            
            public void Initialize(AiciServiceClient proxy) {
                this.proxy = proxy;
            }
            
            public void Output(string value) {
                this.proxy.OnOutputReceived(new object[] {
                            value});
            }
        }
        
        private class AiciServiceClientChannel : ChannelBase<AiciWeb.AiciServiceReference.IAiciService>, AiciWeb.AiciServiceReference.IAiciService {
            
            public AiciServiceClientChannel(System.ServiceModel.DuplexClientBase<AiciWeb.AiciServiceReference.IAiciService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRequestChannel(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RequestChannel", _args, callback, asyncState);
                return _result;
            }
            
            public string EndRequestChannel(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("RequestChannel", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReleaseChannel(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("ReleaseChannel", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReleaseChannel(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ReleaseChannel", _args, result);
            }
            
            public System.IAsyncResult BeginSendMessage(AiciWeb.AiciServiceReference.AiciMesage composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("SendMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendMessage", _args, result);
            }
        }
    }
    
    public class OutputReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OutputReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string value {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

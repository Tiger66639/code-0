<?xml version="1.0" encoding="utf-8"?>

<xs:schema id="wordnetDataSet" targetNamespace="http://tempuri.org/wordnetDataSet.xsd"
           xmlns:mstns="http://tempuri.org/wordnetDataSet.xsd" xmlns="http://tempuri.org/wordnetDataSet.xsd"
           xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"
           xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified"
           elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter"
                  Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="ExcludeSchema"
                  xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="wordnetConnectionString"
                      ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly"
                      Name="wordnetConnectionString (Settings)" ParameterPrefix="@"
                      PropertyReference="ApplicationSettings.JaStDev.HAB.Properties.Settings.GlobalReference.Default.wordnetConnectionString"
                      Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="WordInfoTableAdapter" GeneratorDataComponentClassName="WordInfoTableAdapter"
                        Name="WordInfo" UserDataComponentName="WordInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      SELECT        word.lemma AS Word, sense.rank AS Sense, synset.synsetid, categorydef.pos, synset.definition, categorydef.SubType, xwnwsd.wsd
                      FROM            xwnwsd RIGHT OUTER JOIN
                      synset ON xwnwsd.synsetid = synset.synsetid LEFT OUTER JOIN
                      categorydef ON synset.categoryid = categorydef.categoryid RIGHT OUTER JOIN
                      sense RIGHT OUTER JOIN
                      word ON sense.wordid = word.wordid ON synset.synsetid = sense.synsetid
                      WHERE        (word.lemma = @word)
                      ORDER BY categorydef.pos, Sense
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="word" ColumnName="lemma"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.word"
                                 DataTypeServer="varchar(80)" DbType="AnsiString" Direction="Input"
                                 ParameterName="@word" Precision="0" ProviderType="VarChar" Scale="0" Size="80"
                                 SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="synsetid" DataSetColumn="synsetid" />
              <Mapping SourceColumn="pos" DataSetColumn="pos" />
              <Mapping SourceColumn="definition" DataSetColumn="definition" />
              <Mapping SourceColumn="Word" DataSetColumn="Word" />
              <Mapping SourceColumn="Sense" DataSetColumn="Sense" />
              <Mapping SourceColumn="SubType" DataSetColumn="SubType" />
              <Mapping SourceColumn="wsd" DataSetColumn="wsd" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="FillFor" GenerateMethods="Both"
                        GenerateShortCommands="true" GeneratorGetMethodName="GetFor" GeneratorSourceName="FillFor"
                        GetMethodModifier="Public" GetMethodName="GetFor" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetFor" UserSourceName="FillFor">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        word.lemma AS Word, sense.rank AS Sense, synset.synsetid, categorydef.pos, synset.definition, categorydef.SubType, xwnwsd.wsd
                      FROM            xwnwsd RIGHT OUTER JOIN
                      synset ON xwnwsd.synsetid = synset.synsetid LEFT OUTER JOIN
                      categorydef ON synset.categoryid = categorydef.categoryid RIGHT OUTER JOIN
                      sense RIGHT OUTER JOIN
                      word ON sense.wordid = word.wordid ON synset.synsetid = sense.synsetid
                      WHERE        (word.lemma = @word AND synset.synsetid =@id)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="word" ColumnName="lemma"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.word"
                                 DataTypeServer="varchar(80)" DbType="AnsiString" Direction="Input"
                                 ParameterName="@word" Precision="0" ProviderType="VarChar" Scale="0" Size="80"
                                 SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="synsetid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.synset"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synsetid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="FillForPOS" GenerateMethods="Both"
                        GenerateShortCommands="true" GeneratorGetMethodName="GetDataForPOS"
                        GeneratorSourceName="FillForPOS" GetMethodModifier="Public" GetMethodName="GetDataForPOS"
                        QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataForPOS" UserSourceName="FillForPOS">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        word.lemma AS Word, sense.rank AS Sense, synset.synsetid, categorydef.pos, synset.definition, categorydef.SubType, xwnwsd.wsd
                      FROM            xwnwsd RIGHT OUTER JOIN
                      synset ON xwnwsd.synsetid = synset.synsetid LEFT OUTER JOIN
                      categorydef ON synset.categoryid = categorydef.categoryid RIGHT OUTER JOIN
                      sense RIGHT OUTER JOIN
                      word ON sense.wordid = word.wordid ON synset.synsetid = sense.synsetid
                      WHERE        (word.lemma = @word) AND (categorydef.pos = @pos)
                      ORDER BY categorydef.pos, Sense
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="word" ColumnName="lemma"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.word"
                                 DataTypeServer="varchar(80)" DbType="AnsiString" Direction="Input"
                                 ParameterName="@word" Precision="0" ProviderType="VarChar" Scale="0" Size="80"
                                 SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="pos" ColumnName="pos"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.categorydef"
                                 DataTypeServer="varchar(3)" DbType="AnsiString" Direction="Input" ParameterName="@pos"
                                 Precision="0" ProviderType="VarChar" Scale="0" Size="3" SourceColumn="pos"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="RelationshipsTableAdapter"
                        GeneratorDataComponentClassName="RelationshipsTableAdapter" Name="Relationships"
                        UserDataComponentName="RelationshipsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectName="dbo.linkdef"
                        DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [linkdef] WHERE (([linkid] = @Original_linkid) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ([recurses] = @Original_recurses))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@Original_linkid" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="linkid" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@Original_recurses" Precision="0"
                                 ProviderType="VarChar" Scale="0" Size="0" SourceColumn="recurses"
                                 SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      INSERT INTO [linkdef] ([linkid], [name], [recurses]) VALUES (@linkid, @name, @recurses);
                      SELECT linkid, name, recurses FROM linkdef WHERE (linkid = @linkid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@linkid" Precision="0" ProviderType="Int" Scale="0"
                                 Size="0" SourceColumn="linkid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0"
                                 Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@recurses" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="recurses" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      SELECT        linkid, name, recurses
                      FROM            linkdef
                    </CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      UPDATE [linkdef] SET [linkid] = @linkid, [name] = @name, [recurses] = @recurses WHERE (([linkid] = @Original_linkid) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ([recurses] = @Original_recurses));
                      SELECT linkid, name, recurses FROM linkdef WHERE (linkid = @linkid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@linkid" Precision="0" ProviderType="Int" Scale="0"
                                 Size="0" SourceColumn="linkid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0"
                                 Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@recurses" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="recurses" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@Original_linkid" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="linkid" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@Original_recurses" Precision="0"
                                 ProviderType="VarChar" Scale="0" Size="0" SourceColumn="recurses"
                                 SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="linkid" DataSetColumn="linkid" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="recurses" DataSetColumn="recurses" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectName="dbo.linkdef"
                        DbObjectType="Table" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy"
                        GeneratorSourceName="IsRecursive" Modifier="Public" Name="IsRecursive" QueryType="Scalar"
                        ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="IsRecursive">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        recurses
                      FROM            linkdef
                      WHERE        (linkid = @id)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.linkdef"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="SynonymsTableAdapter" GeneratorDataComponentClassName="SynonymsTableAdapter"
                        Name="Synonyms" UserDataComponentName="SynonymsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        sense.synsetid, word.lemma AS word
                      FROM            word INNER JOIN
                      sense ON word.wordid = sense.wordid
                      WHERE        (sense.synsetid = @synset)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="synset" ColumnName="synsetid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.sense"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@synset"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synsetid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="synsetid" DataSetColumn="synsetid" />
              <Mapping SourceColumn="word" DataSetColumn="word" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="LemmaDescTableAdapter"
                        GeneratorDataComponentClassName="LemmaDescTableAdapter" Name="LemmaDesc"
                        UserDataComponentName="LemmaDescTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        word.lemma AS Word, synset.synsetid, synset.definition
                      FROM            synset RIGHT OUTER JOIN
                      sense RIGHT OUTER JOIN
                      word ON sense.wordid = word.wordid ON synset.synsetid = sense.synsetid
                      WHERE        (word.lemma = @word) AND (synset.synsetid = @id)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="word" ColumnName="lemma"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.word"
                                 DataTypeServer="varchar(80)" DbType="AnsiString" Direction="Input"
                                 ParameterName="@word" Precision="0" ProviderType="VarChar" Scale="0" Size="80"
                                 SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="synsetid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.synset"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synsetid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Word" DataSetColumn="Word" />
              <Mapping SourceColumn="synsetid" DataSetColumn="synsetid" />
              <Mapping SourceColumn="definition" DataSetColumn="definition" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="CompundWordsTableAdapter"
                        GeneratorDataComponentClassName="CompundWordsTableAdapter" Name="CompundWords"
                        UserDataComponentName="CompundWordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      SELECT        word.lemma AS Word, sense.rank AS Sense, synset.synsetid, categorydef.pos, synset.definition, categorydef.SubType, xwnwsd.wsd, xwnwsd.text
                      FROM            xwnwsd RIGHT OUTER JOIN
                      synset ON xwnwsd.synsetid = synset.synsetid LEFT OUTER JOIN
                      categorydef ON synset.categoryid = categorydef.categoryid RIGHT OUTER JOIN
                      sense RIGHT OUTER JOIN
                      word ON sense.wordid = word.wordid ON synset.synsetid = sense.synsetid
                      WHERE        (word.lemma LIKE '% ' + @word + ' %') OR
                      (word.lemma LIKE '% ' + @word) OR
                      (word.lemma LIKE @word + ' %')
                      ORDER BY categorydef.pos, Sense
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="word" ColumnName="lemma"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.word"
                                 DataTypeServer="varchar(80)" DbType="AnsiString" Direction="Input"
                                 ParameterName="@word" Precision="0" ProviderType="VarChar" Scale="0" Size="80"
                                 SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Word" DataSetColumn="Word" />
              <Mapping SourceColumn="Sense" DataSetColumn="Sense" />
              <Mapping SourceColumn="synsetid" DataSetColumn="synsetid" />
              <Mapping SourceColumn="pos" DataSetColumn="pos" />
              <Mapping SourceColumn="definition" DataSetColumn="definition" />
              <Mapping SourceColumn="SubType" DataSetColumn="SubType" />
              <Mapping SourceColumn="wsd" DataSetColumn="wsd" />
              <Mapping SourceColumn="text" DataSetColumn="text" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="MorphsTableAdapter" GeneratorDataComponentClassName="MorphsTableAdapter"
                        Name="Morphs" UserDataComponentName="MorphsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        morphdef.lemma AS word, morphref.pos, word.lemma AS MorphOf
                      FROM            morphref INNER JOIN
                      morphdef ON morphref.morphid = morphdef.morphid INNER JOIN
                      word ON morphref.wordid = word.wordid
                      WHERE        (morphdef.lemma = @word) AND (word.lemma &lt;&gt; @word)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="word" ColumnName="lemma"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.morphdef"
                                 DataTypeServer="varchar(70)" DbType="AnsiString" Direction="Input"
                                 ParameterName="@word" Precision="0" ProviderType="VarChar" Scale="0" Size="70"
                                 SourceColumn="word" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="word" DataSetColumn="word" />
              <Mapping SourceColumn="pos" DataSetColumn="pos" />
              <Mapping SourceColumn="MorphOf" DataSetColumn="MorphOf" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="RelatedWordsTableAdapter"
                        GeneratorDataComponentClassName="RelatedWordsTableAdapter" Name="RelatedWords"
                        UserDataComponentName="RelatedWordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        semlinkref.linkid, linkdef.name, semlinkref.synset2id AS synsetid
                      FROM            linkdef INNER JOIN
                      semlinkref ON linkdef.linkid = semlinkref.linkid
                      WHERE        (semlinkref.linkid = @linkid) AND (semlinkref.synset1id = @synsetid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="linkid" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@linkid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="synsetid" ColumnName="synset1id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@synsetid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset1id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="linkid" DataSetColumn="linkid" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="synsetid" DataSetColumn="synsetid" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="FillLexBy" GenerateMethods="Both"
                        GenerateShortCommands="true" GeneratorGetMethodName="GetLexDataBy"
                        GeneratorSourceName="FillLexBy" GetMethodModifier="Public" GetMethodName="GetLexDataBy"
                        QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetLexDataBy" UserSourceName="FillLexBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        lexlinkref.linkid, linkdef.name, lexlinkref.synset2id AS synsetid
                      FROM            lexlinkref INNER JOIN
                      linkdef ON lexlinkref.linkid = linkdef.linkid
                      WHERE        (lexlinkref.synset1id = @synsetid)
                      GROUP BY lexlinkref.linkid, linkdef.name, lexlinkref.synset2id
                      HAVING        (lexlinkref.linkid = @linkid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="synsetid" ColumnName="synset1id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.lexlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@synsetid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset1id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="linkid" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.lexlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@linkid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        GenerateShortCommands="true" GeneratorSourceName="GetNrOfLexRelatedWordsFor" Modifier="Public"
                        Name="GetNrOfLexRelatedWordsFor" QueryType="Scalar"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy"
                        UserSourceName="GetNrOfLexRelatedWordsFor">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        COUNT(*) AS Expr1
                      FROM            (SELECT        lexlinkref.linkid, linkdef.name, lexlinkref.synset2id AS synsetid
                      FROM            lexlinkref INNER JOIN
                      linkdef ON lexlinkref.linkid = linkdef.linkid
                      WHERE        (lexlinkref.synset1id = @synsetid)
                      GROUP BY lexlinkref.linkid, linkdef.name, lexlinkref.synset2id
                      HAVING         (lexlinkref.linkid = @linkid)) AS derivedtbl_1
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="synsetid" ColumnName="" DataSourceName=""
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@synsetid"
                                 Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="linkid" ColumnName="linkid"
                                 DataSourceName="SELECT lexlinkref.linkid, linkdef.name, lexlinkref.synset2id AS synsetid FROM lexlinkref INNER JOIN linkdef ON lexlinkref.linkid = linkdef.linkid WHERE (lexlinkref.synset1id = @synsetid) GROUP BY lexlinkref.linkid, linkdef.name, lexlinkref.synset2id HAVING (lexlinkref.linkid = @linkid)"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@linkid"
                                 Precision="0" Scale="0" Size="4" SourceColumn="linkid" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        GenerateShortCommands="true" GeneratorSourceName="GetNrOfRelatedWordsFor" Modifier="Public"
                        Name="GetNrOfRelatedWordsFor" QueryType="Scalar"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1"
                        UserSourceName="GetNrOfRelatedWordsFor">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        COUNT(*) AS Expr1
                      FROM            semlinkref
                      WHERE        (linkid = @linkid) AND (synset1id = @synsetid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="linkid" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@linkid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="synsetid" ColumnName="synset1id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@synsetid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset1id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="ReverseFillBy" GenerateMethods="Both"
                        GenerateShortCommands="true" GeneratorGetMethodName="ReverseGetDataBy"
                        GeneratorSourceName="ReverseFillBy" GetMethodModifier="Public" GetMethodName="ReverseGetDataBy"
                        QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="ReverseGetDataBy"
                        UserSourceName="ReverseFillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        semlinkref.linkid, linkdef.name, semlinkref.synset1id AS synsetid
                      FROM            linkdef INNER JOIN
                      semlinkref ON linkdef.linkid = semlinkref.linkid
                      WHERE        (semlinkref.linkid = @linkid) AND (semlinkref.synset2id = @synsetid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="linkid" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@linkid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="synsetid" ColumnName="synset2id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@synsetid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset2id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="ReverseFillLexBy" GenerateMethods="Both"
                        GenerateShortCommands="true" GeneratorGetMethodName="ReverseGetLexDataBy"
                        GeneratorSourceName="ReverseFillLexBy" GetMethodModifier="Public"
                        GetMethodName="ReverseGetLexDataBy" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="ReverseGetLexDataBy"
                        UserSourceName="ReverseFillLexBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        lexlinkref.linkid, linkdef.name, lexlinkref.synset1id AS synsetid
                      FROM            lexlinkref INNER JOIN
                      linkdef ON lexlinkref.linkid = linkdef.linkid
                      WHERE        (lexlinkref.linkid = @linkid) AND (lexlinkref.synset2id = @synsetid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="linkid" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.lexlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@linkid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="synsetid" ColumnName="synset2id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.lexlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@synsetid"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset2id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="synsetInfoTableAdapter"
                        GeneratorDataComponentClassName="synsetInfoTableAdapter" Name="synsetInfo"
                        UserDataComponentName="synsetInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectName="dbo.synset"
                        DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [synset] WHERE (([synsetid] = @Original_synsetid) AND ((@IsNull_pos = 1 AND [pos] IS NULL) OR ([pos] = @Original_pos)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@Original_synsetid" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="synsetid" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@IsNull_pos" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="pos" SourceColumnNullMapping="true"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@Original_pos" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="pos" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      INSERT INTO [synset] ([synsetid], [pos], [definition]) VALUES (@synsetid, @pos, @definition);
                      SELECT synsetid, pos, definition FROM synset WHERE (synsetid = @synsetid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@synsetid" Precision="0" ProviderType="Int" Scale="0"
                                 Size="0" SourceColumn="synsetid" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@pos" Precision="0" ProviderType="VarChar" Scale="0"
                                 Size="0" SourceColumn="pos" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@definition" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="definition" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        synsetid, pos, definition
                      FROM            synset
                      WHERE        (synsetid = @filter)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="filter" ColumnName="synsetid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.synset"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@filter"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synsetid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      UPDATE [synset] SET [synsetid] = @synsetid, [pos] = @pos, [definition] = @definition WHERE (([synsetid] = @Original_synsetid) AND ((@IsNull_pos = 1 AND [pos] IS NULL) OR ([pos] = @Original_pos)));
                      SELECT synsetid, pos, definition FROM synset WHERE (synsetid = @synsetid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@synsetid" Precision="0" ProviderType="Int" Scale="0"
                                 Size="0" SourceColumn="synsetid" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@pos" Precision="0" ProviderType="VarChar" Scale="0"
                                 Size="0" SourceColumn="pos" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@definition" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="definition" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@Original_synsetid" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="synsetid" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@IsNull_pos" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="pos" SourceColumnNullMapping="true"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@Original_pos" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="pos" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="synsetid" DataSetColumn="synsetid" />
              <Mapping SourceColumn="pos" DataSetColumn="pos" />
              <Mapping SourceColumn="definition" DataSetColumn="definition" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="AllWordsTableAdapter" GeneratorDataComponentClassName="AllWordsTableAdapter"
                        Name="AllWords" UserDataComponentName="AllWordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectName="dbo.word" DbObjectType="Table"
                        FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [word] WHERE (([wordid] = @Original_wordid) AND ([lemma] = @Original_lemma))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@Original_wordid" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="wordid" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@Original_lemma" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="lemma" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      INSERT INTO [word] ([wordid], [lemma]) VALUES (@wordid, @lemma);
                      SELECT wordid, lemma FROM word WHERE (wordid = @wordid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@wordid" Precision="0" ProviderType="Int" Scale="0"
                                 Size="0" SourceColumn="wordid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@lemma" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="lemma" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        word.*
                      FROM            word
                    </CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>
                      UPDATE [word] SET [wordid] = @wordid, [lemma] = @lemma WHERE (([wordid] = @Original_wordid) AND ([lemma] = @Original_lemma));
                      SELECT wordid, lemma FROM word WHERE (wordid = @wordid)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@wordid" Precision="0" ProviderType="Int" Scale="0"
                                 Size="0" SourceColumn="wordid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@lemma" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="lemma" SourceColumnNullMapping="false"
                                 SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32"
                                 Direction="Input" ParameterName="@Original_wordid" Precision="0" ProviderType="Int"
                                 Scale="0" Size="0" SourceColumn="wordid" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString"
                                 Direction="Input" ParameterName="@Original_lemma" Precision="0" ProviderType="VarChar"
                                 Scale="0" Size="0" SourceColumn="lemma" SourceColumnNullMapping="false"
                                 SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="wordid" DataSetColumn="wordid" />
              <Mapping SourceColumn="lemma" DataSetColumn="lemma" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="CheckRootTableAdapter"
                        GeneratorDataComponentClassName="CheckRootTableAdapter" Name="CheckRoot"
                        UserDataComponentName="CheckRootTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="FillSem" GenerateMethods="Both"
                        GenerateShortCommands="false" GeneratorGetMethodName="GetSemData" GeneratorSourceName="FillSem"
                        GetMethodModifier="Public" GetMethodName="GetSemData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="false" UserGetMethodName="GetSemData" UserSourceName="FillSem">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        COUNT(synset2id) AS count
                      FROM            semlinkref
                      GROUP BY synset1id, linkid
                      HAVING        (synset1id = @id) AND (linkid = @link)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="synset1id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset1id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="link" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@link"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="count" DataSetColumn="count" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        GenerateShortCommands="true" GeneratorSourceName="GetNrRelationshipsFor" Modifier="Public"
                        Name="GetNrRelationshipsFor" QueryType="Scalar"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy"
                        UserSourceName="GetNrRelationshipsFor">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        COUNT(semlinkref.synset1id) AS count
                      FROM            semlinkref INNER JOIN
                      linkdef ON semlinkref.linkid = linkdef.linkid
                      WHERE        (semlinkref.synset2id = @id) AND (linkdef.recurses = 'y')
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="synset2id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset2id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy"
                        GeneratorSourceName="ReverseSemCount" Modifier="Public" Name="ReverseSemCount"
                        QueryType="Scalar"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ReverseSemCount">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        COUNT(synset1id) AS count
                      FROM            semlinkref
                      GROUP BY synset2id, linkid
                      HAVING        (linkid = @link) AND (synset2id = @id)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="link" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@link"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="synset2id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset2id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        GenerateShortCommands="true" GeneratorSourceName="ReverseSyntaxCount" Modifier="Public"
                        Name="ReverseSyntaxCount" QueryType="Scalar"
                        ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2"
                        UserSourceName="ReverseSyntaxCount">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        COUNT(lexlinkref.synset1id) AS count
                      FROM            semlinkref INNER JOIN
                      lexlinkref ON semlinkref.synset1id = lexlinkref.synset1id
                      GROUP BY lexlinkref.synset2id, lexlinkref.linkid
                      HAVING        (lexlinkref.linkid = @link) AND (lexlinkref.synset2id = @id)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="link" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.lexlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@link"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="synset2id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.lexlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset2id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="SemCount"
                        Modifier="Public" Name="SemCount" QueryType="Scalar"
                        ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="SemCount">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        COUNT(synset2id) AS count
                      FROM            semlinkref
                      GROUP BY synset1id, linkid
                      HAVING        (linkid = @link) AND (synset1id = @id)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="link" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@link"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="synset1id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.semlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset1id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        GenerateShortCommands="true" GeneratorSourceName="SyntaxCount" Modifier="Public"
                        Name="SyntaxCount" QueryType="Scalar"
                        ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="SyntaxCount">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        COUNT(lexlinkref.synset2id) AS count
                      FROM            semlinkref INNER JOIN
                      lexlinkref ON semlinkref.synset1id = lexlinkref.synset1id
                      GROUP BY lexlinkref.synset1id, lexlinkref.linkid
                      HAVING        (lexlinkref.synset1id = @id) AND (lexlinkref.linkid = @link)
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="synset1id"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.lexlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="synset1id"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="link" ColumnName="linkid"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.lexlinkref"
                                 DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@link"
                                 Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="linkid"
                                 SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component"
                        DataAccessorModifier="AutoLayout, AnsiClass, Class, Public"
                        DataAccessorName="PosValuesTableAdapter"
                        GeneratorDataComponentClassName="PosValuesTableAdapter" Name="PosValues"
                        UserDataComponentName="PosValuesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="wordnetConnectionString (Settings)" DbObjectType="Unknown"
                        FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both"
                        GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill"
                        GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset"
                        ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                        UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT        word.lemma AS Word, categorydef.pos
                      FROM            synset LEFT OUTER JOIN
                      categorydef ON synset.categoryid = categorydef.categoryid RIGHT OUTER JOIN
                      sense RIGHT OUTER JOIN
                      word ON sense.wordid = word.wordid ON synset.synsetid = sense.synsetid
                      WHERE        (word.lemma = @word)
                      GROUP BY word.lemma, categorydef.pos
                    </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="word" ColumnName="lemma"
                                 DataSourceName="[C:\USERS\ESUS\DOCUMENTS\DEV\VS\PROJECTS\AI\WORDNETSIN\WORDNET.MDF].dbo.word"
                                 DataTypeServer="varchar(80)" DbType="AnsiString" Direction="Input"
                                 ParameterName="@word" Precision="0" ProviderType="VarChar" Scale="0" Size="80"
                                 SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Word" DataSetColumn="Word" />
              <Mapping SourceColumn="pos" DataSetColumn="pos" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="wordnetDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true"
              msdata:EnforceConstraints="False" msprop:EnableTableAdapterManager="False"
              msprop:Generator_DataSetName="wordnetDataSet" msprop:Generator_UserDSName="wordnetDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="WordInfo" msprop:Generator_UserTableName="WordInfo"
                    msprop:Generator_RowEvArgName="WordInfoRowChangeEvent"
                    msprop:Generator_TableVarName="tableWordInfo" msprop:Generator_TablePropName="WordInfo"
                    msprop:Generator_RowDeletingName="WordInfoRowDeleting"
                    msprop:Generator_RowChangingName="WordInfoRowChanging"
                    msprop:Generator_RowDeletedName="WordInfoRowDeleted"
                    msprop:Generator_TableClassName="WordInfoDataTable"
                    msprop:Generator_RowChangedName="WordInfoRowChanged"
                    msprop:Generator_RowEvHandlerName="WordInfoRowChangeEventHandler"
                    msprop:Generator_RowClassName="WordInfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="synsetid" msprop:Generator_ColumnVarNameInTable="columnsynsetid"
                          msprop:Generator_ColumnPropNameInRow="synsetid"
                          msprop:Generator_ColumnPropNameInTable="synsetidColumn"
                          msprop:Generator_UserColumnName="synsetid" type="xs:int" minOccurs="0" />
              <xs:element name="pos" msprop:Generator_ColumnVarNameInTable="columnpos"
                          msprop:Generator_ColumnPropNameInRow="pos" msprop:Generator_ColumnPropNameInTable="posColumn"
                          msprop:Generator_UserColumnName="pos" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="definition" msprop:Generator_ColumnVarNameInTable="columndefinition"
                          msprop:Generator_ColumnPropNameInRow="definition"
                          msprop:Generator_ColumnPropNameInTable="definitionColumn"
                          msprop:Generator_UserColumnName="definition" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Word" msprop:Generator_ColumnVarNameInTable="columnWord"
                          msprop:Generator_ColumnPropNameInRow="Word"
                          msprop:Generator_ColumnPropNameInTable="WordColumn" msprop:Generator_UserColumnName="Word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Sense" msprop:Generator_ColumnVarNameInTable="columnSense"
                          msprop:Generator_ColumnPropNameInRow="Sense"
                          msprop:Generator_ColumnPropNameInTable="SenseColumn" msprop:Generator_UserColumnName="Sense"
                          type="xs:int" minOccurs="0" />
              <xs:element name="SubType" msprop:Generator_ColumnVarNameInTable="columnSubType"
                          msprop:Generator_ColumnPropNameInRow="SubType"
                          msprop:Generator_ColumnPropNameInTable="SubTypeColumn"
                          msprop:Generator_UserColumnName="SubType" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="wsd" msprop:nullValue="_null" msprop:Generator_ColumnPropNameInRow="wsd"
                          msprop:Generator_ColumnVarNameInTable="columnwsd"
                          msprop:Generator_ColumnPropNameInTable="wsdColumn" msprop:Generator_UserColumnName="wsd"
                          minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Relationships" msprop:Generator_UserTableName="Relationships"
                    msprop:Generator_RowEvArgName="RelationshipsRowChangeEvent"
                    msprop:Generator_TableVarName="tableRelationships" msprop:Generator_TablePropName="Relationships"
                    msprop:Generator_RowDeletingName="RelationshipsRowDeleting"
                    msprop:Generator_RowChangingName="RelationshipsRowChanging"
                    msprop:Generator_RowDeletedName="RelationshipsRowDeleted"
                    msprop:Generator_TableClassName="RelationshipsDataTable"
                    msprop:Generator_RowChangedName="RelationshipsRowChanged"
                    msprop:Generator_RowEvHandlerName="RelationshipsRowChangeEventHandler"
                    msprop:Generator_RowClassName="RelationshipsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="linkid" msprop:Generator_ColumnVarNameInTable="columnlinkid"
                          msprop:Generator_ColumnPropNameInRow="linkid"
                          msprop:Generator_ColumnPropNameInTable="linkidColumn"
                          msprop:Generator_UserColumnName="linkid" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname"
                          msprop:Generator_ColumnPropNameInRow="name"
                          msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name"
                          minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="recurses" msprop:Generator_ColumnVarNameInTable="columnrecurses"
                          msprop:Generator_ColumnPropNameInRow="recurses"
                          msprop:Generator_ColumnPropNameInTable="recursesColumn"
                          msprop:Generator_UserColumnName="recurses">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Synonyms" msprop:Generator_UserTableName="Synonyms"
                    msprop:Generator_RowEvArgName="SynonymsRowChangeEvent"
                    msprop:Generator_TableVarName="tableSynonyms" msprop:Generator_TablePropName="Synonyms"
                    msprop:Generator_RowDeletingName="SynonymsRowDeleting"
                    msprop:Generator_RowChangingName="SynonymsRowChanging"
                    msprop:Generator_RowDeletedName="SynonymsRowDeleted"
                    msprop:Generator_TableClassName="SynonymsDataTable"
                    msprop:Generator_RowChangedName="SynonymsRowChanged"
                    msprop:Generator_RowEvHandlerName="SynonymsRowChangeEventHandler"
                    msprop:Generator_RowClassName="SynonymsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="synsetid" msprop:Generator_ColumnVarNameInTable="columnsynsetid"
                          msprop:Generator_ColumnPropNameInRow="synsetid"
                          msprop:Generator_ColumnPropNameInTable="synsetidColumn"
                          msprop:Generator_UserColumnName="synsetid" type="xs:int" />
              <xs:element name="word" msprop:Generator_ColumnVarNameInTable="columnword"
                          msprop:Generator_ColumnPropNameInRow="word"
                          msprop:Generator_ColumnPropNameInTable="wordColumn" msprop:Generator_UserColumnName="word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="LemmaDesc" msprop:Generator_UserTableName="LemmaDesc"
                    msprop:Generator_RowEvArgName="LemmaDescRowChangeEvent"
                    msprop:Generator_TableVarName="tableLemmaDesc" msprop:Generator_TablePropName="LemmaDesc"
                    msprop:Generator_RowDeletingName="LemmaDescRowDeleting"
                    msprop:Generator_RowChangingName="LemmaDescRowChanging"
                    msprop:Generator_RowDeletedName="LemmaDescRowDeleted"
                    msprop:Generator_TableClassName="LemmaDescDataTable"
                    msprop:Generator_RowChangedName="LemmaDescRowChanged"
                    msprop:Generator_RowEvHandlerName="LemmaDescRowChangeEventHandler"
                    msprop:Generator_RowClassName="LemmaDescRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Word" msprop:Generator_ColumnVarNameInTable="columnWord"
                          msprop:Generator_ColumnPropNameInRow="Word"
                          msprop:Generator_ColumnPropNameInTable="WordColumn" msprop:Generator_UserColumnName="Word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="synsetid" msprop:Generator_ColumnVarNameInTable="columnsynsetid"
                          msprop:Generator_ColumnPropNameInRow="synsetid"
                          msprop:Generator_ColumnPropNameInTable="synsetidColumn"
                          msprop:Generator_UserColumnName="synsetid" type="xs:int" minOccurs="0" />
              <xs:element name="definition" msprop:Generator_ColumnVarNameInTable="columndefinition"
                          msprop:Generator_ColumnPropNameInRow="definition"
                          msprop:Generator_ColumnPropNameInTable="definitionColumn"
                          msprop:Generator_UserColumnName="definition" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CompundWords" msprop:Generator_UserTableName="CompundWords"
                    msprop:Generator_RowEvArgName="CompundWordsRowChangeEvent"
                    msprop:Generator_TableVarName="tableCompundWords" msprop:Generator_TablePropName="CompundWords"
                    msprop:Generator_RowDeletingName="CompundWordsRowDeleting"
                    msprop:Generator_RowChangingName="CompundWordsRowChanging"
                    msprop:Generator_RowDeletedName="CompundWordsRowDeleted"
                    msprop:Generator_TableClassName="CompundWordsDataTable"
                    msprop:Generator_RowChangedName="CompundWordsRowChanged"
                    msprop:Generator_RowEvHandlerName="CompundWordsRowChangeEventHandler"
                    msprop:Generator_RowClassName="CompundWordsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Word" msprop:nullValue="_null" msprop:Generator_ColumnPropNameInRow="Word"
                          msprop:Generator_ColumnVarNameInTable="columnWord"
                          msprop:Generator_ColumnPropNameInTable="WordColumn" msprop:Generator_UserColumnName="Word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Sense" msprop:Generator_ColumnVarNameInTable="columnSense"
                          msprop:Generator_ColumnPropNameInRow="Sense"
                          msprop:Generator_ColumnPropNameInTable="SenseColumn" msprop:Generator_UserColumnName="Sense"
                          type="xs:int" minOccurs="0" />
              <xs:element name="synsetid" msprop:Generator_ColumnVarNameInTable="columnsynsetid"
                          msprop:Generator_ColumnPropNameInRow="synsetid"
                          msprop:Generator_ColumnPropNameInTable="synsetidColumn"
                          msprop:Generator_UserColumnName="synsetid" type="xs:int" minOccurs="0" />
              <xs:element name="pos" msprop:nullValue="_null" msprop:Generator_ColumnPropNameInRow="pos"
                          msprop:Generator_ColumnVarNameInTable="columnpos"
                          msprop:Generator_ColumnPropNameInTable="posColumn" msprop:Generator_UserColumnName="pos"
                          minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="definition" msprop:nullValue="_null" msprop:Generator_ColumnPropNameInRow="definition"
                          msprop:Generator_ColumnVarNameInTable="columndefinition"
                          msprop:Generator_ColumnPropNameInTable="definitionColumn"
                          msprop:Generator_UserColumnName="definition" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SubType" msprop:nullValue="_empty" msprop:Generator_ColumnPropNameInRow="SubType"
                          msprop:Generator_ColumnVarNameInTable="columnSubType"
                          msprop:Generator_ColumnPropNameInTable="SubTypeColumn"
                          msprop:Generator_UserColumnName="SubType" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="wsd" msprop:nullValue="_null" msprop:Generator_ColumnPropNameInRow="wsd"
                          msprop:Generator_ColumnVarNameInTable="columnwsd"
                          msprop:Generator_ColumnPropNameInTable="wsdColumn" msprop:Generator_UserColumnName="wsd"
                          minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="text" msprop:nullValue="_null" msprop:Generator_ColumnPropNameInRow="text"
                          msprop:Generator_ColumnVarNameInTable="columntext"
                          msprop:Generator_ColumnPropNameInTable="textColumn" msprop:Generator_UserColumnName="text"
                          minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Morphs" msprop:Generator_UserTableName="Morphs"
                    msprop:Generator_RowEvArgName="MorphsRowChangeEvent" msprop:Generator_TableVarName="tableMorphs"
                    msprop:Generator_TablePropName="Morphs" msprop:Generator_RowDeletingName="MorphsRowDeleting"
                    msprop:Generator_RowChangingName="MorphsRowChanging"
                    msprop:Generator_RowDeletedName="MorphsRowDeleted"
                    msprop:Generator_TableClassName="MorphsDataTable"
                    msprop:Generator_RowChangedName="MorphsRowChanged"
                    msprop:Generator_RowEvHandlerName="MorphsRowChangeEventHandler"
                    msprop:Generator_RowClassName="MorphsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="word" msprop:Generator_ColumnVarNameInTable="columnword"
                          msprop:Generator_ColumnPropNameInRow="word"
                          msprop:Generator_ColumnPropNameInTable="wordColumn" msprop:Generator_UserColumnName="word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="70" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pos" msprop:Generator_ColumnVarNameInTable="columnpos"
                          msprop:Generator_ColumnPropNameInRow="pos" msprop:Generator_ColumnPropNameInTable="posColumn"
                          msprop:Generator_UserColumnName="pos">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MorphOf" msprop:Generator_ColumnVarNameInTable="columnMorphOf"
                          msprop:Generator_ColumnPropNameInRow="MorphOf"
                          msprop:Generator_ColumnPropNameInTable="MorphOfColumn"
                          msprop:Generator_UserColumnName="MorphOf">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RelatedWords" msprop:Generator_UserTableName="RelatedWords"
                    msprop:Generator_RowEvArgName="RelatedWordsRowChangeEvent"
                    msprop:Generator_TableVarName="tableRelatedWords" msprop:Generator_TablePropName="RelatedWords"
                    msprop:Generator_RowDeletingName="RelatedWordsRowDeleting"
                    msprop:Generator_RowChangingName="RelatedWordsRowChanging"
                    msprop:Generator_RowDeletedName="RelatedWordsRowDeleted"
                    msprop:Generator_TableClassName="RelatedWordsDataTable"
                    msprop:Generator_RowChangedName="RelatedWordsRowChanged"
                    msprop:Generator_RowEvHandlerName="RelatedWordsRowChangeEventHandler"
                    msprop:Generator_RowClassName="RelatedWordsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="linkid" msprop:Generator_ColumnVarNameInTable="columnlinkid"
                          msprop:Generator_ColumnPropNameInRow="linkid"
                          msprop:Generator_ColumnPropNameInTable="linkidColumn"
                          msprop:Generator_UserColumnName="linkid" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname"
                          msprop:Generator_ColumnPropNameInRow="name"
                          msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name"
                          minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="synsetid" msprop:Generator_ColumnVarNameInTable="columnsynsetid"
                          msprop:Generator_ColumnPropNameInRow="synsetid"
                          msprop:Generator_ColumnPropNameInTable="synsetidColumn"
                          msprop:Generator_UserColumnName="synsetid" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="synsetInfo" msprop:Generator_UserTableName="synsetInfo"
                    msprop:Generator_RowEvArgName="synsetInfoRowChangeEvent"
                    msprop:Generator_TableVarName="tablesynsetInfo" msprop:Generator_TablePropName="synsetInfo"
                    msprop:Generator_RowDeletingName="synsetInfoRowDeleting"
                    msprop:Generator_RowChangingName="synsetInfoRowChanging"
                    msprop:Generator_RowDeletedName="synsetInfoRowDeleted"
                    msprop:Generator_TableClassName="synsetInfoDataTable"
                    msprop:Generator_RowChangedName="synsetInfoRowChanged"
                    msprop:Generator_RowEvHandlerName="synsetInfoRowChangeEventHandler"
                    msprop:Generator_RowClassName="synsetInfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="synsetid" msprop:Generator_ColumnVarNameInTable="columnsynsetid"
                          msprop:Generator_ColumnPropNameInRow="synsetid"
                          msprop:Generator_ColumnPropNameInTable="synsetidColumn"
                          msprop:Generator_UserColumnName="synsetid" type="xs:int" />
              <xs:element name="pos" msprop:Generator_ColumnVarNameInTable="columnpos"
                          msprop:Generator_ColumnPropNameInRow="pos" msprop:Generator_ColumnPropNameInTable="posColumn"
                          msprop:Generator_UserColumnName="pos" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="definition" msprop:Generator_ColumnVarNameInTable="columndefinition"
                          msprop:Generator_ColumnPropNameInRow="definition"
                          msprop:Generator_ColumnPropNameInTable="definitionColumn"
                          msprop:Generator_UserColumnName="definition" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AllWords" msprop:Generator_UserTableName="AllWords"
                    msprop:Generator_RowEvArgName="AllWordsRowChangeEvent"
                    msprop:Generator_TableVarName="tableAllWords" msprop:Generator_TablePropName="AllWords"
                    msprop:Generator_RowDeletingName="AllWordsRowDeleting"
                    msprop:Generator_RowChangingName="AllWordsRowChanging"
                    msprop:Generator_RowDeletedName="AllWordsRowDeleted"
                    msprop:Generator_TableClassName="AllWordsDataTable"
                    msprop:Generator_RowChangedName="AllWordsRowChanged"
                    msprop:Generator_RowEvHandlerName="AllWordsRowChangeEventHandler"
                    msprop:Generator_RowClassName="AllWordsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="wordid" msprop:Generator_ColumnVarNameInTable="columnwordid"
                          msprop:Generator_ColumnPropNameInRow="wordid"
                          msprop:Generator_ColumnPropNameInTable="wordidColumn"
                          msprop:Generator_UserColumnName="wordid" type="xs:int" />
              <xs:element name="lemma" msprop:Generator_ColumnVarNameInTable="columnlemma"
                          msprop:Generator_ColumnPropNameInRow="lemma"
                          msprop:Generator_ColumnPropNameInTable="lemmaColumn" msprop:Generator_UserColumnName="lemma">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CheckRoot" msprop:Generator_UserTableName="CheckRoot"
                    msprop:Generator_RowEvArgName="CheckRootRowChangeEvent"
                    msprop:Generator_TableVarName="tableCheckRoot" msprop:Generator_TablePropName="CheckRoot"
                    msprop:Generator_RowDeletingName="CheckRootRowDeleting"
                    msprop:Generator_RowChangingName="CheckRootRowChanging"
                    msprop:Generator_RowDeletedName="CheckRootRowDeleted"
                    msprop:Generator_TableClassName="CheckRootDataTable"
                    msprop:Generator_RowChangedName="CheckRootRowChanged"
                    msprop:Generator_RowEvHandlerName="CheckRootRowChangeEventHandler"
                    msprop:Generator_RowClassName="CheckRootRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="count" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columncount"
                          msprop:Generator_ColumnPropNameInRow="count"
                          msprop:Generator_ColumnPropNameInTable="countColumn" msprop:Generator_UserColumnName="count"
                          type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PosValues" msprop:Generator_TableClassName="PosValuesDataTable"
                    msprop:Generator_TableVarName="tablePosValues" msprop:Generator_TablePropName="PosValues"
                    msprop:Generator_RowDeletingName="PosValuesRowDeleting" msprop:Generator_UserTableName="PosValues"
                    msprop:Generator_RowChangingName="PosValuesRowChanging"
                    msprop:Generator_RowEvHandlerName="PosValuesRowChangeEventHandler"
                    msprop:Generator_RowDeletedName="PosValuesRowDeleted"
                    msprop:Generator_RowEvArgName="PosValuesRowChangeEvent"
                    msprop:Generator_RowChangedName="PosValuesRowChanged" msprop:Generator_RowClassName="PosValuesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Word" msprop:Generator_ColumnVarNameInTable="columnWord"
                          msprop:Generator_ColumnPropNameInRow="Word"
                          msprop:Generator_ColumnPropNameInTable="WordColumn" msprop:Generator_UserColumnName="Word">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pos" msprop:Generator_ColumnVarNameInTable="columnpos"
                          msprop:Generator_ColumnPropNameInRow="pos" msprop:Generator_ColumnPropNameInTable="posColumn"
                          msprop:Generator_UserColumnName="pos" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1">
      <xs:selector xpath=".//mstns:WordInfo" />
      <xs:field xpath="mstns:synsetid" />
    </xs:unique>
    <xs:unique name="Relationships_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Relationships" />
      <xs:field xpath="mstns:linkid" />
    </xs:unique>
    <xs:unique name="LemmaDesc_Constraint1" msdata:ConstraintName="Constraint1">
      <xs:selector xpath=".//mstns:LemmaDesc" />
      <xs:field xpath="mstns:synsetid" />
    </xs:unique>
    <xs:unique name="RelatedWords_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RelatedWords" />
      <xs:field xpath="mstns:linkid" />
      <xs:field xpath="mstns:synsetid" />
    </xs:unique>
    <xs:unique name="synsetInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:synsetInfo" />
      <xs:field xpath="mstns:synsetid" />
    </xs:unique>
    <xs:unique name="AllWords_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AllWords" />
      <xs:field xpath="mstns:wordid" />
    </xs:unique>
  </xs:element>
</xs:schema>
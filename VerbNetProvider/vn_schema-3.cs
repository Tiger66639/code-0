// --------------------------------------------------------------------------------------------------------------------
// <copyright file="vn_schema-3.cs" company="">
//   
// </copyright>
// <summary>
//   The vnclass.
// </summary>
// --------------------------------------------------------------------------------------------------------------------

// This source code was auto-generated by xsd, Version=2.0.50727.3038.

namespace VerbNetProvider
{
    /// <summary>The vnclass.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class VNCLASS : System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>The f is selected.</summary>
        private bool fIsSelected;

        /// <summary>The f needs import.</summary>
        private bool fNeedsImport;

        /// <summary>The f rames field.</summary>
        private FRAMESFRAME[] fRAMESField;

        /// <summary>The id field.</summary>
        private string idField;

        /// <summary>The m embers field.</summary>
        private MEMBERSMEMBER[] mEMBERSField;

        /// <summary>The s ubclasses field.</summary>
        private VNSUBCLASS[] sUBCLASSESField;

        /// <summary>The t hemroles field.</summary>
        private THEMROLESTHEMROLE[] tHEMROLESField;

        /// <summary>The members.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArrayItem("MEMBER", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, 
            IsNullable = false)]
        public MEMBERSMEMBER[] MEMBERS
        {
            get
            {
                return mEMBERSField;
            }

            set
            {
                mEMBERSField = value;
            }
        }

        /// <summary>The themroles.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArrayItem("THEMROLE", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, 
            IsNullable = false)]
        public THEMROLESTHEMROLE[] THEMROLES
        {
            get
            {
                return tHEMROLESField;
            }

            set
            {
                tHEMROLESField = value;
            }
        }

        /// <summary>The frames.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArrayItem("FRAME", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, 
            IsNullable = false)]
        public FRAMESFRAME[] FRAMES
        {
            get
            {
                return fRAMESField;
            }

            set
            {
                fRAMESField = value;
            }
        }

        /// <summary>The subclasses.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArrayItem("VNSUBCLASS", IsNullable = false)]
        public VNSUBCLASS[] SUBCLASSES
        {
            get
            {
                return sUBCLASSESField;
            }

            set
            {
                sUBCLASSESField = value;
            }
        }

        /// <summary>The id.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute(DataType = "ID")]
        public string ID
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
            }
        }

        #region IsSelected

        /// <summary>
        ///     Gets/sets the wether the item is selected or not.
        /// </summary>
        public bool IsSelected
        {
            get
            {
                return fIsSelected;
            }

            set
            {
                fIsSelected = value;
                OnPropertyChanged("IsSelected");
            }
        }

        #endregion

        #region NeedsImport

        /// <summary>
        ///     Gets/sets wether this item needs to be imported or not.
        /// </summary>
        public bool NeedsImport
        {
            get
            {
                return fNeedsImport;
            }

            set
            {
                fNeedsImport = value;
                OnPropertyChanged("NeedsImport");
            }
        }

        #endregion

        #region INotifyPropertyChanged Members

        /// <summary>The property changed.</summary>
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        /// <summary>The on property changed.</summary>
        /// <param name="prop">The prop.</param>
        protected void OnPropertyChanged(string prop)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(prop));
            }
        }

        #endregion
    }

    /// <summary>The membersmember.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class MEMBERSMEMBER : System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>The f is selected.</summary>
        private bool fIsSelected;

        /// <summary>The name field.</summary>
        private string nameField;

        /// <summary>The wn field.</summary>
        private string[] wnField;

        /// <summary>The name.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
            }
        }

        /// <summary>The wn.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string[] wn
        {
            get
            {
                return wnField;
            }

            set
            {
                wnField = value;
            }
        }

        #region IsSelected

        /// <summary>
        ///     Gets/sets the <see cref="name" /> of the object
        /// </summary>
        public bool IsSelected
        {
            get
            {
                return fIsSelected;
            }

            set
            {
                fIsSelected = value;
                OnPropertyChanged("IsSelected");
            }
        }

        #endregion

        #region INotifyPropertyChanged Members

        /// <summary>The property changed.</summary>
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        /// <summary>The on property changed.</summary>
        /// <param name="prop">The prop.</param>
        protected void OnPropertyChanged(string prop)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(prop));
            }
        }

        #endregion
    }

    /// <summary>The themrolesthemrole.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class THEMROLESTHEMROLE
    {
        /// <summary>The s elrestrs field.</summary>
        private SELRESTRS sELRESTRSField;

        /// <summary>The type field.</summary>
        private themRoleType typeField;

        /// <summary>The selrestrs.</summary>
        /// <remarks></remarks>
        public SELRESTRS SELRESTRS
        {
            get
            {
                return sELRESTRSField;
            }

            set
            {
                sELRESTRSField = value;
            }
        }

        /// <summary>The type.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public themRoleType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
            }
        }
    }

    /// <summary>The selrestrs.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class SELRESTRS
    {
        /// <summary>The items field.</summary>
        private object[] itemsField;

        /// <summary>The logic field.</summary>
        private string logicField;

        /// <summary>The items.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("SELRESTR", typeof(SELRESTRSSELRESTR), 
            Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElement("SELRESTRS", typeof(SELRESTRS))]
        public object[] Items
        {
            get
            {
                return itemsField;
            }

            set
            {
                itemsField = value;
            }
        }

        /// <summary>The logic.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string logic
        {
            get
            {
                return logicField;
            }

            set
            {
                logicField = value;
            }
        }
    }

    /// <summary>The selrestrsselrestr.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class SELRESTRSSELRESTR
    {
        /// <summary>The type field.</summary>
        private selrestrType typeField;

        /// <summary>The value field.</summary>
        private string valueField;

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string Value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
            }
        }

        /// <summary>The type.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public selrestrType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
            }
        }
    }

    /// <summary>The selrestr type.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    public enum selrestrType
    {
        /// <summary>The scalar.</summary>
        /// <remarks></remarks>
        scalar, 

        /// <summary>The concrete.</summary>
        /// <remarks></remarks>
        concrete, 

        /// <summary>The abstract.</summary>
        /// <remarks></remarks>
        @abstract, 

        /// <summary>The location.</summary>
        /// <remarks></remarks>
        location, 

        /// <summary>The organization.</summary>
        /// <remarks></remarks>
        organization, 

        /// <summary>The currency.</summary>
        /// <remarks></remarks>
        currency, 

        /// <summary>The idea.</summary>
        /// <remarks></remarks>
        idea, 

        /// <summary>The sound.</summary>
        /// <remarks></remarks>
        sound, 

        /// <summary>The communication.</summary>
        /// <remarks></remarks>
        communication, 

        /// <summary>The quotation.</summary>
        /// <remarks></remarks>
        quotation, 

        /// <summary>The region.</summary>
        /// <remarks></remarks>
        region, 

        /// <summary>The place.</summary>
        /// <remarks></remarks>
        place, 

        /// <summary>The concrete 1.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlEnum("concrete")]
        concrete1, 

        /// <summary>The company.</summary>
        /// <remarks></remarks>
        company, 

        /// <summary>The natural.</summary>
        /// <remarks></remarks>
        natural, 

        /// <summary>The phys_obj.</summary>
        /// <remarks></remarks>
        phys_obj, 

        /// <summary>The plant.</summary>
        /// <remarks></remarks>
        plant, 

        /// <summary>The animal.</summary>
        /// <remarks></remarks>
        animal, 

        /// <summary>The human.</summary>
        /// <remarks></remarks>
        human, 

        /// <summary>The animate.</summary>
        /// <remarks></remarks>
        animate, 

        /// <summary>The body_part.</summary>
        /// <remarks></remarks>
        body_part, 

        /// <summary>The comestible.</summary>
        /// <remarks></remarks>
        comestible, 

        /// <summary>The artifact.</summary>
        /// <remarks></remarks>
        artifact, 

        /// <summary>The tool.</summary>
        /// <remarks></remarks>
        tool, 

        /// <summary>The garment.</summary>
        /// <remarks></remarks>
        garment, 

        /// <summary>The machine.</summary>
        /// <remarks></remarks>
        machine, 

        /// <summary>The int_control.</summary>
        /// <remarks></remarks>
        int_control, 

        /// <summary>The force.</summary>
        /// <remarks></remarks>
        force, 

        /// <summary>The vehicle.</summary>
        /// <remarks></remarks>
        vehicle, 

        /// <summary>The substance.</summary>
        /// <remarks></remarks>
        substance, 

        /// <summary>The solid.</summary>
        /// <remarks></remarks>
        solid, 

        /// <summary>The elongated.</summary>
        /// <remarks></remarks>
        elongated, 

        /// <summary>The pointy.</summary>
        /// <remarks></remarks>
        pointy, 

        /// <summary>The refl.</summary>
        /// <remarks></remarks>
        refl, 

        /// <summary>The rigid.</summary>
        /// <remarks></remarks>
        rigid, 

        /// <summary>The nonrigid.</summary>
        /// <remarks></remarks>
        nonrigid, 

        /// <summary>The state.</summary>
        /// <remarks></remarks>
        state, 

        /// <summary>The plural.</summary>
        /// <remarks></remarks>
        plural, 

        /// <summary>The time.</summary>
        /// <remarks></remarks>
        time
    }

    /// <summary>The them role type.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    public enum themRoleType
    {
        /// <summary>The topic.</summary>
        /// <remarks></remarks>
        Topic, 

        /// <summary>The experiencer.</summary>
        /// <remarks></remarks>
        Experiencer, 

        /// <summary>The stimulus.</summary>
        /// <remarks></remarks>
        Stimulus, 

        /// <summary>The cause.</summary>
        /// <remarks></remarks>
        Cause, 

        /// <summary>The actor.</summary>
        /// <remarks></remarks>
        Actor, 

        /// <summary>The actor 1.</summary>
        /// <remarks></remarks>
        Actor1, 

        /// <summary>The actor 2.</summary>
        /// <remarks></remarks>
        Actor2, 

        /// <summary>The agent.</summary>
        /// <remarks></remarks>
        Agent, 

        /// <summary>The asset.</summary>
        /// <remarks></remarks>
        Asset, 

        /// <summary>The attribute.</summary>
        /// <remarks></remarks>
        Attribute, 

        /// <summary>The benefactor.</summary>
        /// <remarks></remarks>
        Benefactor, 

        /// <summary>The beneficiary.</summary>
        /// <remarks></remarks>
        Beneficiary, 

        /// <summary>The content.</summary>
        /// <remarks></remarks>
        Content, 

        /// <summary>The destination.</summary>
        /// <remarks></remarks>
        Destination, 

        /// <summary>The instrument.</summary>
        /// <remarks></remarks>
        Instrument, 

        /// <summary>The location.</summary>
        /// <remarks></remarks>
        Location, 

        /// <summary>The material.</summary>
        /// <remarks></remarks>
        Material, 

        /// <summary>The patient.</summary>
        /// <remarks></remarks>
        Patient, 

        /// <summary>The patient 1.</summary>
        /// <remarks></remarks>
        Patient1, 

        /// <summary>The patient 2.</summary>
        /// <remarks></remarks>
        Patient2, 

        /// <summary>The predicate.</summary>
        /// <remarks></remarks>
        Predicate, 

        /// <summary>The proposition.</summary>
        /// <remarks></remarks>
        Proposition, 

        /// <summary>The product.</summary>
        /// <remarks></remarks>
        Product, 

        /// <summary>The recipient.</summary>
        /// <remarks></remarks>
        Recipient, 

        /// <summary>The source.</summary>
        /// <remarks></remarks>
        Source, 

        /// <summary>The theme.</summary>
        /// <remarks></remarks>
        Theme, 

        /// <summary>The theme 1.</summary>
        /// <remarks></remarks>
        Theme1, 

        /// <summary>The theme 2.</summary>
        /// <remarks></remarks>
        Theme2, 

        /// <summary>The time.</summary>
        /// <remarks></remarks>
        Time, 

        /// <summary>The extent.</summary>
        /// <remarks></remarks>
        Extent, 

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        Value, 

        /// <summary>The oblique.</summary>
        Oblique, 

        /// <summary>
        ///     This is a custom type that I added so that we can properly import the
        ///     members.
        /// </summary>
        Verb
    }

    /// <summary>The framesframe.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class FRAMESFRAME
    {
        /// <summary>The d escription field.</summary>
        private FRAMESFRAMEDESCRIPTION dESCRIPTIONField;

        /// <summary>The e xamples field.</summary>
        private object[] eXAMPLESField;

        /// <summary>The s emantics field.</summary>
        private SEMANTICS sEMANTICSField;

        /// <summary>The s yntax field.</summary>
        private SYNTAX sYNTAXField;

        /// <summary>The description.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FRAMESFRAMEDESCRIPTION DESCRIPTION
        {
            get
            {
                return dESCRIPTIONField;
            }

            set
            {
                dESCRIPTIONField = value;
            }
        }

        /// <summary>The examples.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArray(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItem("EXAMPLE", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, 
            IsNullable = false)]
        public object[] EXAMPLES
        {
            get
            {
                return eXAMPLESField;
            }

            set
            {
                eXAMPLESField = value;
            }
        }

        /// <summary>The syntax.</summary>
        /// <remarks></remarks>
        public SYNTAX SYNTAX
        {
            get
            {
                return sYNTAXField;
            }

            set
            {
                sYNTAXField = value;
            }
        }

        /// <summary>The semantics.</summary>
        /// <remarks></remarks>
        public SEMANTICS SEMANTICS
        {
            get
            {
                return sEMANTICSField;
            }

            set
            {
                sEMANTICSField = value;
            }
        }
    }

    /// <summary>The framesframedescription.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class FRAMESFRAMEDESCRIPTION
    {
        /// <summary>The description number field.</summary>
        private string descriptionNumberField;

        /// <summary>The primary field.</summary>
        private string primaryField;

        /// <summary>The secondary field.</summary>
        private string secondaryField;

        /// <summary>The xtag field.</summary>
        private string xtagField;

        /// <summary>The description number.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string descriptionNumber
        {
            get
            {
                return descriptionNumberField;
            }

            set
            {
                descriptionNumberField = value;
            }
        }

        /// <summary>The primary.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string primary
        {
            get
            {
                return primaryField;
            }

            set
            {
                primaryField = value;
            }
        }

        /// <summary>The secondary.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string secondary
        {
            get
            {
                return secondaryField;
            }

            set
            {
                secondaryField = value;
            }
        }

        /// <summary>The xtag.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string xtag
        {
            get
            {
                return xtagField;
            }

            set
            {
                xtagField = value;
            }
        }
    }

    /*
   /// <remarks/>
   [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
   [System.SerializableAttribute()]
   public enum primaryDescriptionType
   {

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Apart Reciprocal Alternation Transitive")]
      ApartReciprocalAlternationTransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Apart Reciprocal Alternation Intransitive")]
      ApartReciprocalAlternationIntransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("As Alternation")]
      AsAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Attribute Object Possessor-Attribute Factoring Alternation")]
      AttributeObjectPossessorAttributeFactoringAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Basic Intransitive")]
      BasicIntransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Basic Transitive")]
      BasicTransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Benefactive Alternation")]
      BenefactiveAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Body-Part Possessor Ascension Alternation")]
      BodyPartPossessorAscensionAlternation,

      /// <remarks/>
      Causative,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Causative/Inchoative Alternation")]
      CausativeInchoativeAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Characteristic Property of Instrument")]
      CharacteristicPropertyofInstrument,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Collective NP Subject")]
      CollectiveNPSubject,

      /// <remarks/>
      Conative,

      /// <remarks/>
      Dative,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Direct Speech")]
      DirectSpeech,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Expletive Construction")]
      ExpletiveConstruction,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Fulfilling Alternation")]
      FulfillingAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Image Impression Alternation")]
      ImageImpressionAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Induced Action")]
      InducedAction,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Infinitival Copular Clause")]
      InfinitivalCopularClause,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Instrument Subject Alternation")]
      InstrumentSubjectAlternation,

      /// <remarks/>
      Intransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Location Subject Alternation")]
      LocationSubjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Locative Alternation")]
      LocativeAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Locative Inversion")]
      LocativeInversion,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Locative Preposition Drop")]
      LocativePrepositionDrop,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Locatum Subject Alternation")]
      LocatumSubjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Material/Product Alternation Transitive")]
      MaterialProductAlternationTransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Material/Product Alternation Intransitive")]
      MaterialProductAlternationIntransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Middle Construction")]
      MiddleConstruction,

      /// <remarks/>
      Passive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Possessor Subject Possessor-Attribute Factoring Alternation")]
      PossessorSubjectPossessorAttributeFactoringAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PRO-Arb Object Alternation")]
      PROArbObjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Raw Material Subject Alternation")]
      RawMaterialSubjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Reflexive of Appearance Alternation")]
      ReflexiveofAppearanceAlternation,

      /// <remarks/>
      Resultative,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Sentential Complement")]
      SententialComplement,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Simple Reciprocal Alternation Transitive")]
      SimpleReciprocalAlternationTransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Simple Reciprocal Alternation Intransitive")]
      SimpleReciprocalAlternationIntransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Substance/Source Alternation")]
      SubstanceSourceAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Sum of Money Subject Alternation")]
      SumofMoneySubjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("There-insertion")]
      Thereinsertion,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Through/With Alternation")]
      ThroughWithAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Together Reciprocal Alternation Transitive")]
      TogetherReciprocalAlternationTransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Together Reciprocal Alternation Intransitive")]
      TogetherReciprocalAlternationIntransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Total Transformation Alternation Transitive")]
      TotalTransformationAlternationTransitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Total Transformation Alternation Intransitive")]
      TotalTransformationAlternationIntransitive,

      /// <remarks/>
      Transitive,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Understood Body-Part Object Alternation")]
      UnderstoodBodyPartObjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Understood Reciprocal Object Alternation")]
      UnderstoodReciprocalObjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Understood Reflexive Object Alternation")]
      UnderstoodReflexiveObjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Unintentional Interpretation of Object")]
      UnintentionalInterpretationofObject,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Unspecified Object Alternation")]
      UnspecifiedObjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Unspecified Reflexive Object Alternation")]
      UnspecifiedReflexiveObjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("Way Object Alternation")]
      WayObjectAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("With/against Alternation")]
      WithagainstAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("With Preposition Drop Alternation")]
      WithPrepositionDropAlternation,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("AS-NP")]
      ASNP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("EXTRAP-NP-S")]
      EXTRAPNPS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("S-SUBJ-NP-OBJ")]
      SSUBJNPOBJ,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("TO-INF-SUBJ-NP-OBJ")]
      TOINFSUBJNPOBJ,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("EXTRAP-TO-INF")]
      EXTRAPTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("EXTRAP-FOR-TO-INF")]
      EXTRAPFORTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("EXTRAP-NP-TO-INF")]
      EXTRAPNPTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("EXTRAP-TO-NP")]
      EXTRAPTONP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("EXTRAP-TO-NP-TO-INF")]
      EXTRAPTONPTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("S-SUBJ-TO-NP")]
      SSUBJTONP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("FOR-TO-INF")]
      FORTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("HOW-S")]
      HOWS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("HOW-TO-INF")]
      HOWTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("INF-AC")]
      INFAC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("ING-NP-OMIT")]
      INGNPOMIT,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("ING-SC/BE-ING-SC")]
      INGSCBEINGSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("ING-AC")]
      INGAC,

      /// <remarks/>
      INTRANS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("INTRANS-RECIP(SUBJ-PL/COORD)")]
      INTRANSRECIPSUBJPLCOORD,

      /// <remarks/>
      NP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-ADJP")]
      NPADJP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-ADJP-PRED")]
      NPADJPPRED,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-ADVP")]
      NPADVP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-AVDP-PRED")]
      NPAVDPPRED,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-AS-NP")]
      NPASNP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-AS-NP-SC")]
      NPASNPSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-FOR-NP")]
      NPFORNP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-INF")]
      NPINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-INF-OC")]
      NPINFOC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-ING")]
      NPING,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-ING-OC")]
      NPINGOC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-ING-SC")]
      NPINGSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-NP")]
      NPNP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-NP-PRED")]
      NPNPPRED,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-ING")]
      NPPING,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-ING-OC")]
      NPPINGOC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-ING-SC")]
      NPPINGSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-ING-AC")]
      NPPINGAC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-NP-ING")]
      NPPNPING,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-POSSING")]
      NPPPOSSING,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-WH-S")]
      NPPWHS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-WHAT-S")]
      NPPWHATS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-WHAT-TO-INF")]
      NPPWHATTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-P-WH-TO-INF")]
      NPPWHTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-PP")]
      NPPP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-PP-PRED")]
      NPPPPRED,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-PRED-RS")]
      NPPREDRS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-S")]
      NPS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-TO-INF-OC")]
      NPTOINFOC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-TO-INF-SC")]
      NPTOINFSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-TO-INF-VC")]
      NPTOINFVC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-TO-NP")]
      NPTONP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-TOBE")]
      NPTOBE,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-VEN-NP-OMIT")]
      NPVENNPOMIT,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-WH-S")]
      NPWHS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-WHAT-S")]
      NPWHATS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-WH-TO-INF")]
      NPWHTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-WHAT-TO-INF")]
      NPWHATTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-ING-SC")]
      PINGSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-ING-AC")]
      PINGAC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-NP-ING")]
      PNPING,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-NP-TO-INF(-SC)")]
      PNPTOINFSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-NP-TO-INF-OC")]
      PNPTOINFOC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-NP-TO-INF-VC")]
      PNPTOINFVC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-POSSING")]
      PPOSSING,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-WH-S")]
      PWHS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-WHAT-S")]
      PWHATS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-WH-TO-INF")]
      PWHTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("P-WHAT-TO-INF")]
      PWHATTOINF,

      /// <remarks/>
      PART,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-ING-SC")]
      PARTINGSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-NP/NP-PART")]
      PARTNPNPPART,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-NP-PP")]
      PARTNPPP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-PP")]
      PARTPP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-WH-S")]
      PARTWHS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-WH-S")]
      PARTWHS1,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-WH-TO-INF")]
      PARTWHTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-WHAT-TO-INF")]
      PARTWHATTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-THAT-S")]
      PARTTHATS,

      /// <remarks/>
      POSSING,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("POSSING-PP")]
      POSSINGPP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("ING-PP")]
      INGPP,

      /// <remarks/>
      PP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-FOR-TO-INF")]
      PPFORTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-HOW-S")]
      PPHOWS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-HOW-TO-INF")]
      PPHOWTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-P-WH-S")]
      PPPWHS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-P-WHAT-S")]
      PPPWHATS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-P-WHAT-TO-INF")]
      PPPWHATTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-P-WH-TO-INF")]
      PPPWHTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-PP")]
      PPPP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-PRED-RS")]
      PPPREDRS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-THAT-S")]
      PPTHATS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-THAT-S-SUBJUNCT")]
      PPTHATSSUBJUNCT,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-TO-INF-RS")]
      PPTOINFRS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-WH-S")]
      PPWHS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-WHAT-S")]
      PPWHATS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-WH-TO-INF")]
      PPWHTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PP-WHAT-TO-INF")]
      PPWHATTOINF,

      /// <remarks/>
      S,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("S-SUBJ-S-OBJ")]
      SSUBJSOBJ,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("S-SUBJUNCT")]
      SSUBJUNCT,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("SEEM-S")]
      SEEMS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("SEEM-TO-NP-S")]
      SEEMTONPS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("THAT-S")]
      THATS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("TO-INF-AC")]
      TOINFAC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("TO-INF-RS")]
      TOINFRS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("TO-INF-SC")]
      TOINFSC,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("WH-S")]
      WHS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("WHAT-S")]
      WHATS,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("WH-TO-INF")]
      WHTOINF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("WHAT-TO_INF")]
      WHATTO_INF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-PART-PP")]
      NPPARTPP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("PART-PP-PP")]
      PARTPPPP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-PP-PP")]
      NPPPPP,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP")]
      NP1,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-NP")]
      NPNP1,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("S-SUBJ")]
      SSUBJ,

      /// <remarks/>
      INF,

      /// <remarks/>
      [System.Xml.Serialization.XmlEnumAttribute("NP-as-NP")]
      NPasNP,
   }
   */

    /// <summary>The verb.</summary>
    public class VERB
    {
        /// <summary>The to string.</summary>
        /// <returns>The <see cref="string"/>.</returns>
        public override string ToString()
        {
            return "Verb";
        }
    }

    /// <summary>The adj.</summary>
    public class ADJ
    {
        /// <summary>The to string.</summary>
        /// <returns>The <see cref="string"/>.</returns>
        public override string ToString()
        {
            return "ADJ";
        }
    }

    /// <summary>The adv.</summary>
    public class ADV
    {
        /// <summary>The to string.</summary>
        /// <returns>The <see cref="string"/>.</returns>
        public override string ToString()
        {
            return "ADV";
        }
    }

    /// <summary>The syntax.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class SYNTAX
    {
        /// <summary>The items element name field.</summary>
        private ItemsChoiceType[] itemsElementNameField;

        /// <summary>The items field.</summary>
        private object[] itemsField;

        /// <summary>The items.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("ADJ", typeof(ADJ), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElement("ADV", typeof(ADV), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElement("VERB", typeof(VERB), Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElement("LEX", typeof(LEX))]
        [System.Xml.Serialization.XmlElement("NP", typeof(NP))]
        [System.Xml.Serialization.XmlElement("PREP", typeof(PREP))]
        [System.Xml.Serialization.XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items
        {
            get
            {
                return itemsField;
            }

            set
            {
                itemsField = value;
            }
        }

        /// <summary>The items element name.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnore]
        public ItemsChoiceType[] ItemsElementName
        {
            get
            {
                return itemsElementNameField;
            }

            set
            {
                itemsElementNameField = value;
            }
        }
    }

    /// <summary>The lex.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class LEX
    {
        /// <summary>The value field.</summary>
        private string valueField;

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
            }
        }
    }

    /// <summary>The np.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class NP
    {
        /// <summary>The item field.</summary>
        private object itemField;

        /// <summary>The value field.</summary>
        private string valueField;

        /// <summary>The item.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("SELRESTRS", typeof(SELRESTRS))]
        [System.Xml.Serialization.XmlElement("SYNRESTRS", typeof(SYNRESTRS))]
        public object Item
        {
            get
            {
                return itemField;
            }

            set
            {
                itemField = value;
            }
        }

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
            }
        }
    }

    /// <summary>The synrestrs.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class SYNRESTRS
    {
        /// <summary>The items field.</summary>
        private object[] itemsField;

        /// <summary>The logic field.</summary>
        private string logicField;

        /// <summary>The items.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("SYNRESTR", typeof(SYNRESTRSSYNRESTR), 
            Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElement("SYNRESTRS", typeof(SYNRESTRS))]
        public object[] Items
        {
            get
            {
                return itemsField;
            }

            set
            {
                itemsField = value;
            }
        }

        /// <summary>The logic.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string logic
        {
            get
            {
                return logicField;
            }

            set
            {
                logicField = value;
            }
        }
    }

    /// <summary>The synrestrssynrestr.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class SYNRESTRSSYNRESTR
    {
        /// <summary>The type field.</summary>
        private string typeField;

        /// <summary>The value field.</summary>
        private string valueField;

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string Value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
            }
        }

        /// <summary>The type.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
            }
        }
    }

    /*
   /// <remarks/>
   [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
   [System.SerializableAttribute()]
   public enum synrestrType
   {

      /// <remarks/>
      sentential,

      /// <remarks/>
      indicative,

      /// <remarks/>
      that_comp,

      /// <remarks/>
      tensed_that,

      /// <remarks/>
      null_comp,

      /// <remarks/>
      wh_comp,

      /// <remarks/>
      wheth_comp,

      /// <remarks/>
      if_comp,

      /// <remarks/>
      extracted,

      /// <remarks/>
      what_extract,

      /// <remarks/>
      why_extract,

      /// <remarks/>
      who_extract,

      /// <remarks/>
      how_extract,

      /// <remarks/>
      where_extract,

      /// <remarks/>
      when_extract,

      /// <remarks/>
      infinitival,

      /// <remarks/>
      to_inf,

      to_be,

      np_p_ing,

      /// <remarks/>
      control_to_inf,

      /// <remarks/>
      sc_to_inf,

      /// <remarks/>
      oc_to_inf,

      /// <remarks/>
      ac_to_inf,

      /// <remarks/>
      vc_to_inf,

      /// <remarks/>
      rs_to_inf,

      /// <remarks/>
      bare_inf,

      /// <remarks/>
      control_bare_inf,

      /// <remarks/>
      ac_bare_inf,

      /// <remarks/>
      oc_bare_inf,

      /// <remarks/>
      rs_bare_inf,

      /// <remarks/>
      wh_inf,

      /// <remarks/>
      how_inf,

      /// <remarks/>
      when_inf,

      /// <remarks/>
      where_inf,

      /// <remarks/>
      what_inf,

      /// <remarks/>
      wheth_inf,

      /// <remarks/>
      for_comp,

      /// <remarks/>
      small_clause,

      /// <remarks/>
      gerund,

      /// <remarks/>
      control_ing,

      /// <remarks/>
      sc_ing,

      /// <remarks/>
      be_sc_ing,

      /// <remarks/>
      poss_ing_sc,

      /// <remarks/>
      oc_ing,

      /// <remarks/>
      ac_ing,

      /// <remarks/>
      poss_ing,

      /// <remarks/>
      np_omit_ing,

      /// <remarks/>
      ppart,

      np_ppart,

      /// <remarks/>
      quotation,

      /// <remarks/>
      plural,

      /// <remarks/>
      poss,

      /// <remarks/>
      definite,

      /// <remarks/>
      adv_loc,

      /// <remarks/>
      genitive,

      /// <remarks/>
      refl,

      np_tobe
   }

   */

    /// <summary>The prep.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class PREP
    {
        /// <summary>The s elrestrs field.</summary>
        private PREPSELRESTRS sELRESTRSField;

        /// <summary>The value field.</summary>
        private string valueField;

        /// <summary>The selrestrs.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PREPSELRESTRS SELRESTRS
        {
            get
            {
                return sELRESTRSField;
            }

            set
            {
                sELRESTRSField = value;
            }
        }

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
            }
        }
    }

    /// <summary>The prepselrestrs.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class PREPSELRESTRS
    {
        /// <summary>The items field.</summary>
        private object[] itemsField;

        /// <summary>The logic field.</summary>
        private string logicField;

        /// <summary>The items.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("SELRESTR", typeof(PREPSELRESTRSSELRESTR), 
            Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElement("SELRESTRS", typeof(SELRESTRS))]
        public object[] Items
        {
            get
            {
                return itemsField;
            }

            set
            {
                itemsField = value;
            }
        }

        /// <summary>The logic.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string logic
        {
            get
            {
                return logicField;
            }

            set
            {
                logicField = value;
            }
        }
    }

    /// <summary>The prepselrestrsselrestr.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class PREPSELRESTRSSELRESTR
    {
        /// <summary>The type field.</summary>
        private preprestrType typeField;

        /// <summary>The value field.</summary>
        private string valueField;

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string Value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
            }
        }

        /// <summary>The type.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public preprestrType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
            }
        }
    }

    /// <summary>The preprestr type.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    public enum preprestrType
    {
        /// <summary>The path.</summary>
        /// <remarks></remarks>
        path, 

        /// <summary>The src.</summary>
        /// <remarks></remarks>
        src, 

        /// <summary>The dest_dir.</summary>
        /// <remarks></remarks>
        dest_dir, 

        /// <summary>The dest_conf.</summary>
        /// <remarks></remarks>
        dest_conf, 

        /// <summary>The loc.</summary>
        /// <remarks></remarks>
        loc, 

        /// <summary>The plural.</summary>
        /// <remarks></remarks>
        plural, 

        /// <summary>The spatial.</summary>
        /// <remarks></remarks>
        spatial, 

        /// <summary>The dir.</summary>
        /// <remarks></remarks>
        dir, 

        /// <summary>The dest.</summary>
        /// <remarks></remarks>
        dest
    }

    /// <summary>The items choice type.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Xml.Serialization.XmlType(IncludeInSchema = false)]
    public enum ItemsChoiceType
    {
        /// <summary>The adj.</summary>
        /// <remarks></remarks>
        ADJ, 

        /// <summary>The adv.</summary>
        /// <remarks></remarks>
        ADV, 

        /// <summary>The lex.</summary>
        /// <remarks></remarks>
        LEX, 

        /// <summary>The np.</summary>
        /// <remarks></remarks>
        NP, 

        /// <summary>The prep.</summary>
        /// <remarks></remarks>
        PREP, 

        /// <summary>The verb.</summary>
        VERB
    }

    /// <summary>The items 1 choice type.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Xml.Serialization.XmlType(IncludeInSchema = false)]
    public enum Items1ChoiceType
    {
        /// <summary>The adj.</summary>
        /// <remarks></remarks>
        ADJ, 

        /// <summary>The adv.</summary>
        /// <remarks></remarks>
        ADV, 

        /// <summary>The lex.</summary>
        /// <remarks></remarks>
        LEX, 

        /// <summary>The np.</summary>
        /// <remarks></remarks>
        NP, 

        /// <summary>The prep.</summary>
        /// <remarks></remarks>
        PREP, 

        /// <summary>The verb.</summary>
        VERB
    }

    /// <summary>The semantics.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class SEMANTICS
    {
        /// <summary>The p red field.</summary>
        private SEMANTICSPRED[] pREDField;

        /// <summary>The pred.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("PRED", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SEMANTICSPRED[] PRED
        {
            get
            {
                return pREDField;
            }

            set
            {
                pREDField = value;
            }
        }
    }

    /// <summary>The semanticspred.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class SEMANTICSPRED
    {
        /// <summary>The a rgs field.</summary>
        private SEMANTICSPREDARGS aRGSField;

        /// <summary>The bool field.</summary>
        private string boolField;

        /// <summary>The value field.</summary>
        private string valueField;

        /// <summary>The args.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SEMANTICSPREDARGS ARGS
        {
            get
            {
                return aRGSField;
            }

            set
            {
                aRGSField = value;
            }
        }

        /// <summary>The bool.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string @bool
        {
            get
            {
                return boolField;
            }

            set
            {
                boolField = value;
            }
        }

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
            }
        }
    }

    /// <summary>The semanticspredargs.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    public class SEMANTICSPREDARGS
    {
        /// <summary>The a rg field.</summary>
        private ARG[] aRGField;

        /// <summary>The arg.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("ARG")]
        public ARG[] ARG
        {
            get
            {
                return aRGField;
            }

            set
            {
                aRGField = value;
            }
        }
    }

    /// <summary>The arg.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class ARG
    {
        /// <summary>The type field.</summary>
        private argType typeField;

        /// <summary>The value field.</summary>
        private string valueField;

        /// <summary>The type.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public argType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
            }
        }

        /// <summary>The value.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
            }
        }
    }

    /// <summary>The arg type.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    public enum argType
    {
        /// <summary>The constant.</summary>
        /// <remarks></remarks>
        Constant, 

        /// <summary>The event.</summary>
        /// <remarks></remarks>
        Event, 

        /// <summary>The them role.</summary>
        /// <remarks></remarks>
        ThemRole, 

        /// <summary>The verb specific.</summary>
        /// <remarks></remarks>
        VerbSpecific
    }

    /*
   /// <remarks/>
   [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
   [System.SerializableAttribute()]
   public enum predType
   {

      /// <remarks/>
      abstain,

      /// <remarks/>
      admit,

      /// <remarks/>
      Adv,

      /// <remarks/>
      alive,

      /// <remarks/>
      allow,

      /// <remarks/>
      apart,

      /// <remarks/>
      apply_heat,

      /// <remarks/>
      apply_material,

      /// <remarks/>
      associate,

      /// <remarks/>
      attached,

      /// <remarks/>
      attempt,

      /// <remarks/>
      benefit,

      /// <remarks/>
      body_motion,

      /// <remarks/>
      body_process,

      /// <remarks/>
      body_reflex,

      /// <remarks/>
      capacity,

      /// <remarks/>
      cause,

      /// <remarks/>
      change_value,

      /// <remarks/>
      command,

      /// <remarks/>
      conspire,

      /// <remarks/>
      contact,

      /// <remarks/>
      cooked,

      /// <remarks/>
      cooperate,

      /// <remarks/>
      cost,

      /// <remarks/>
      covered,

      /// <remarks/>
      created_image,

      /// <remarks/>
      dedicate,

      /// <remarks/>
      degradation_material_integrity,

      /// <remarks/>
      delay,

      /// <remarks/>
      depend,

      /// <remarks/>
      designated,

      /// <remarks/>
      desire,

      /// <remarks/>
      destroyed,

      /// <remarks/>
      different,

      /// <remarks/>
      direction,

      /// <remarks/>
      disappear,

      /// <remarks/>
      discomfort,

      /// <remarks/>
      emit,

      /// <remarks/>
      emotional_state,

      /// <remarks/>
      end,

      /// <remarks/>
      equals,

      /// <remarks/>
      exert_force,

      /// <remarks/>
      exist,

      /// <remarks/>
      experience,

      /// <remarks/>
      express,

      /// <remarks/>
      filled_with,

      /// <remarks/>
      flinch,

      /// <remarks/>
      forbid,

      /// <remarks/>
      force,

      /// <remarks/>
      free,

      /// <remarks/>
      future_possession,

      /// <remarks/>
      give_birth,

      /// <remarks/>
      harmed,

      /// <remarks/>
      has_possession,

      /// <remarks/>
      have_opinion,

      /// <remarks/>
      help,

      /// <remarks/>
      hold,

      /// <remarks/>
      @in,

      /// <remarks/>
      indicate,

      /// <remarks/>
      in_reaction_to,

      /// <remarks/>
      involuntary,

      /// <remarks/>
      linger,

      /// <remarks/>
      location,

      /// <remarks/>
      made_of,

      /// <remarks/>
      manner,

      /// <remarks/>
      masquerade,

      /// <remarks/>
      meets,

      /// <remarks/>
      mingled,

      /// <remarks/>
      motion,

      /// <remarks/>
      nonagentive_cause,

      /// <remarks/>
      occur,

      /// <remarks/>
      occurred,

      /// <remarks/>
      perform,

      /// <remarks/>
      perceive,

      /// <remarks/>
      physical_form,

      /// <remarks/>
      position,

      /// <remarks/>
      property,

      /// <remarks/>
      Prep,

      /// <remarks/>
      Prop,

      /// <remarks/>
      Pred,

      /// <remarks/>
      rotational_motion,

      /// <remarks/>
      rushed,

      /// <remarks/>
      search,

      /// <remarks/>
      sleep,

      /// <remarks/>
      spend,

      /// <remarks/>
      state,

      /// <remarks/>
      suffocate,

      /// <remarks/>
      take_care_of,

      /// <remarks/>
      take_in,

      /// <remarks/>
      together,

      /// <remarks/>
      transfer,

      /// <remarks/>
      transfer_info,

      /// <remarks/>
      urge,

      /// <remarks/>
      use,

      /// <remarks/>
      value,

      /// <remarks/>
      visible,

      /// <remarks/>
      via,

      /// <remarks/>
      amount_changed,

      /// <remarks/>
      wear,

      /// <remarks/>
      @continue,

      /// <remarks/>
      avoid,

      /// <remarks/>
      begin,

      /// <remarks/>
      assess,

      /// <remarks/>
      appear,

      /// <remarks/>
      weather,

      /// <remarks/>
      social_interaction,

      /// <remarks/>
      believe,

      /// <remarks/>
      financial_relationship,

      /// <remarks/>
      describe,

      /// <remarks/>
      hide,

      /// <remarks/>
      declare,

      /// <remarks/>
      conflict,

      /// <remarks/>
      about,
   }
   */

    /// <summary>The vnsubclass.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class VNSUBCLASS
    {
        /// <summary>The f rames field.</summary>
        private FRAMESFRAME[] fRAMESField;

        /// <summary>The id field.</summary>
        private string idField;

        /// <summary>The m embers field.</summary>
        private MEMBERSMEMBER[] mEMBERSField;

        /// <summary>The s ubclasses field.</summary>
        private VNSUBCLASS[] sUBCLASSESField;

        /// <summary>The t hemroles field.</summary>
        private THEMROLESTHEMROLE[] tHEMROLESField;

        /// <summary>The members.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArrayItem("MEMBER", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, 
            IsNullable = false)]
        public MEMBERSMEMBER[] MEMBERS
        {
            get
            {
                return mEMBERSField;
            }

            set
            {
                mEMBERSField = value;
            }
        }

        /// <summary>The themroles.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArrayItem("THEMROLE", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, 
            IsNullable = false)]
        public THEMROLESTHEMROLE[] THEMROLES
        {
            get
            {
                return tHEMROLESField;
            }

            set
            {
                tHEMROLESField = value;
            }
        }

        /// <summary>The frames.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArrayItem("FRAME", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, 
            IsNullable = false)]
        public FRAMESFRAME[] FRAMES
        {
            get
            {
                return fRAMESField;
            }

            set
            {
                fRAMESField = value;
            }
        }

        /// <summary>The subclasses.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlArrayItem("VNSUBCLASS", IsNullable = false)]
        public VNSUBCLASS[] SUBCLASSES
        {
            get
            {
                return sUBCLASSESField;
            }

            set
            {
                sUBCLASSESField = value;
            }
        }

        /// <summary>The id.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlAttribute(DataType = "ID")]
        public string ID
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
            }
        }
    }

    /// <summary>The members.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class MEMBERS
    {
        /// <summary>The m ember field.</summary>
        private MEMBERSMEMBER[] mEMBERField;

        /// <summary>The member.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("MEMBER", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MEMBERSMEMBER[] MEMBER
        {
            get
            {
                return mEMBERField;
            }

            set
            {
                mEMBERField = value;
            }
        }
    }

    /// <summary>The themroles.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class THEMROLES
    {
        /// <summary>The t hemrole field.</summary>
        private THEMROLESTHEMROLE[] tHEMROLEField;

        /// <summary>The themrole.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("THEMROLE", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public THEMROLESTHEMROLE[] THEMROLE
        {
            get
            {
                return tHEMROLEField;
            }

            set
            {
                tHEMROLEField = value;
            }
        }
    }

    /// <summary>The frames.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class FRAMES
    {
        /// <summary>The f rame field.</summary>
        private FRAMESFRAME[] fRAMEField;

        /// <summary>The frame.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("FRAME", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FRAMESFRAME[] FRAME
        {
            get
            {
                return fRAMEField;
            }

            set
            {
                fRAMEField = value;
            }
        }
    }

    /// <summary>The subclasses.</summary>
    /// <remarks></remarks>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "2.0.50727.3038")]
    [System.Serializable]
    [System.Diagnostics.DebuggerStepThrough]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true)]
    [System.Xml.Serialization.XmlRoot(Namespace = "", IsNullable = false)]
    public class SUBCLASSES
    {
        /// <summary>The v nsubclass field.</summary>
        private VNSUBCLASS[] vNSUBCLASSField;

        /// <summary>The vnsubclass.</summary>
        /// <remarks></remarks>
        [System.Xml.Serialization.XmlElement("VNSUBCLASS")]
        public VNSUBCLASS[] VNSUBCLASS
        {
            get
            {
                return vNSUBCLASSField;
            }

            set
            {
                vNSUBCLASSField = value;
            }
        }
    }
}
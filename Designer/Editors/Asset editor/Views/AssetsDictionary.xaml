<ResourceDictionary x:Class="JaStDev.HAB.Designer.AssetsDictionary"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:JaStDev.HAB.Designer.WPF.Controls"
                    xmlns:self="clr-namespace:JaStDev.HAB.Designer"
                    xmlns:dd="clr-namespace:DnD">


    <ctrls:LeftMarginConverter x:Key="LMarginConv" />
    <self:AssetDragAdvisor x:Key="AssetDragAdvisor" />
    <self:AssetDropAdvisor x:Key="AssetDropAdvisor" />
    <self:AssetColDragAdvisor x:Key="AssetColDragAdvisor" />
    <self:AssetColDropAdvisor x:Key="AssetColDropAdvisor" />
    <self:FirstAssetColWidthConverter x:Key="AssetColWidthConverter" />

    <!--context menu for the treeview-->
    <ContextMenu x:Key="AssetsContextMenu">
        <MenuItem Header="New record"
                  ToolTip="Add a new record (Shft+Ctrl+R)"
                  Command="self:App.AddAssetRecordCmd"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}" />
        <MenuItem Header="new sub record"
                  ToolTip="Add a new sub record (Shft+Ctrl+c)"
                  Command="self:App.AddAssetSubRecordCmd"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}" />
        <Separator />
        <MenuItem Header="Show in project"
                  IsCheckable="True"
                  IsChecked="{Binding Mode=TwoWay,RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.ShowInProject}" />
    </ContextMenu>

    <!--context menu for the tree item-->
    <ContextMenu x:Key="AssetItemContextMenu">
        <MenuItem Header="New record"
                  ToolTip="Add a new record (Shft+Ctrl+R)"
                  Command="self:App.AddAssetRecordCmd"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}">
            <MenuItem.Icon>
                <Image Source="/Images/Asset/NewAssetRecord_Enabled.png"
                       Style="{StaticResource TlbCodeItemsImageStyle}" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="child record"
                  ToolTip="Add a new child record (Shft+Ctrl+c)"
                  Command="self:App.AddAssetSubRecordCmd"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}">
            <MenuItem.Icon>
                <Image Source="/Images/Asset/NewAssetRecordWS_Enabled.png"
                       Style="{StaticResource TlbCodeItemsImageStyle}" />
            </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Header="Create sub asset"
                  ToolTip="Create a new sub asset for the selected record (Shft+Ctrl+A)"
                  Command="self:App.CreateSubAssetCmd"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}">
            <MenuItem.Icon>
                <Image Source="/Images/Asset/AddSubAsset_Enabled.png" Style="{StaticResource TlbCodeItemsImageStyle}" />
            </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Command="Cut"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}">
            <MenuItem.Icon>
                <Image Source="/Images/Edit/Cut_Enabled.png" Style="{StaticResource TlbCodeItemsImageStyle}" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="Copy"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}">
            <MenuItem.Icon>
                <Image Source="/Images/Edit/Copy_Enabled.png" Style="{StaticResource TlbCodeItemsImageStyle}" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="Paste"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}">
            <MenuItem.Icon>
                <Image Source="/Images/Edit/Paste_Enabled.png" Style="{StaticResource TlbCodeItemsImageStyle}" />
            </MenuItem.Icon>
        </MenuItem>
        <Separator />
        <MenuItem Command="Delete"
                  InputGestureText="Del"
                  ToolTip="Delete the selected objects.">
            <MenuItem.Icon>
                <Image Source="/Images/Delete_Enabled.png" Style="{StaticResource TlbCodeItemsImageStyle}" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Delete special"
                  InputGestureText="Ctrl+Del"
                  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"
                  Command="self:App.DeleteSpecialCmd"
                  ToolTip="Select how the ojbects needs to be deleted." />
    </ContextMenu>


    <!--Header Text-->
    <Style x:Key="AssetHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--Header border-->
    <Style x:Key="AssetHeaderBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="BorderBrush" Value="{StaticResource GridViewColumnHeaderBorderBackground}" />
        <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBackground}" />
    </Style>

    <!--Header thumb, for resizing columns-->
    <Style x:Key="AssetHeaderColThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="10" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DropDownNNSelector template for folders that contains assets)-->
    <HierarchicalDataTemplate DataType="{x:Type self:BrowsableAssetsEnumerator}"
                              ItemsSource="{Binding}">
        <TextBlock Text="{Binding Path=Owner.Owner.Name}" />
    </HierarchicalDataTemplate>

    <!-- DropDownNNSelector template. general purpose template for all children of an aset: it's always referencing a title property-->
    <HierarchicalDataTemplate x:Key="GeneralPurposeAssetItemBrowserTemplate"
                              ItemsSource="{Binding}">
        <TextBlock Text="{Binding Path=Title}" />
    </HierarchicalDataTemplate>

    <!-- DropDownNNSelector template for asset enumerator (lists all asset items)-->
    <HierarchicalDataTemplate DataType="{x:Type self:AssetItemEnumerator}"
                              ItemsSource="{Binding}"
                              ItemTemplate="{StaticResource GeneralPurposeAssetItemBrowserTemplate}">
        <TextBlock Text="{Binding Path=Title}" />
    </HierarchicalDataTemplate>


    <ctrls:NeuronBrowserPopup x:Key="NeuronBrowserPopup">
        <ctrls:NeuronBrowserPopup.ItemsSources>
            <ctrls:BrowserDataSource PageHeader="Thesaurus"
                                     PageToolTip="All the thesaurus items"
                                     ItemsSource="{Binding Source={x:Static self:BrainData.Current}, Path=Thesaurus.BrowsableItems, Mode=OneWay}"
                                     AsTree="True" />
            <ctrls:BrowserDataSource PageHeader="Topics"
                                     PageToolTip="All the topics, rules, outputs, conditions and do patterns in the project."
                                     ItemsSource="{Binding Source={x:Static self:BrainData.Current}, Path=Editors.BrowsableTopics, Mode=OneWay}"
                                     AsTree="True" />
            <ctrls:BrowserDataSource PageHeader="assets"
                                     PageToolTip="All the asset data in the project."
                                     ItemsSource="{Binding Source={x:Static self:BrainData.Current}, Path=Editors.BrowsableAssets, Mode=OneWay}"
                                     AsTree="True" />
            <ctrls:BrowserDataSource PageHeader="Date"
                                     PageToolTip="Select a date."
                                     AsDate="True" />
        </ctrls:NeuronBrowserPopup.ItemsSources>
    </ctrls:NeuronBrowserPopup>


    <DataTemplate x:Key="GroupAssetValueItemTemplate">
        <ctrls:NeuronDataEditor SelectedNeuron="{Binding Path=Value, Mode=TwoWay}"
                                ShowDropDownOnMouseOver="true"
                                Popup="{StaticResource NeuronBrowserPopup}"
                                CanClearValue="True"
                                IconVisibility="{Binding Path=Owner.Root.IconVisibility}"
                                dd:DragDropManager.DropTarget="{StaticResource NDEditorDropAdvisor}" />
    </DataTemplate>

    <!--Template for value groups-->
    <DataTemplate x:Key="GroupAssetValueTemplate">
        <Border BorderBrush="DarkGray"
                BorderThickness="1"
                CornerRadius="3">
            <StackPanel>
                <ctrls:DropDownNSSelector SelectedNeuron="{Binding Path=GroupMode, Mode=TwoWay}"
                                          dd:DragDropManager.DropTarget="{StaticResource DDNeuronSelectorDropAdvisor}"
                                          ShowDropDownOnMouseOver="true"
                                          CanClearValue="False"
                                          HorizontalAlignment="Center">
                    <ctrls:DropDownNSSelector.ItemsSources>
                        <ctrls:BrowserDataSource PageHeader="List"
                                                 PageToolTip="the available logical and list operators"
                                                 ItemsSource="{Binding Source={x:Static self:BrainData.Current}, Path=ListOpsData}"
                                                 AsTree="False" />
                    </ctrls:DropDownNSSelector.ItemsSources>
                </ctrls:DropDownNSSelector>
                <ListBox ItemsSource="{Binding Path=AsGroup}"
                         MaxHeight="130"
                         BorderThickness="0"
                         Background="Transparent"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ItemTemplate="{StaticResource GroupAssetValueItemTemplate}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <Button HorizontalAlignment="Center"
                        x:Name="BtnAddExisting"
                        MinWidth="30"
                        ToolTip="Add value/drop neuron here."
                        Click="BtnAddExisting_Click">
                    +
                </Button>
            </StackPanel>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="NormalAssetValueTemplate">
        <ctrls:FastNeuronDataEditor SelectedNeuron="{Binding Path=Value, Mode=TwoWay}"
                                    ShowDropDownOnMouseOver="true"
                                    Popup="{StaticResource NeuronBrowserPopup}"
                                    VerticalAlignment="Top"
                                    CanClearValue="False"
                                    IconVisibility="{Binding Path=Owner.Root.IconVisibility}"
                                    KeyboardNavigation.TabIndex="{Binding Path=Column.Index, Mode=OneWay}"
                                    dd:DragDropManager.DropTarget="{StaticResource NDEditorDropAdvisor}" />
    </DataTemplate>

    <DataTemplate x:Key="SubAssetTemplate">
        <ctrls:NeuronDataEditor SelectedNeuron="{Binding Path=Value, Mode=TwoWay}"
                                ShowDropDownOnMouseOver="true"
                                Popup="{StaticResource NeuronBrowserPopup}"
                                VerticalAlignment="Top"
                                CanClearValue="True"
                                EditMode="DisplayTitle"
                                IconVisibility="{Binding Path=Owner.Root.IconVisibility}"
                                dd:DragDropManager.DropTarget="{StaticResource NDEditorDropAdvisor}" />
    </DataTemplate>

    <!--template selector for asset values-->
    <DataTemplate x:Key="AssetItemValueDataTemplate">
        <ContentPresenter Content="{Binding}"
                          x:Name="ContentValue" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Presentation}" Value="normal">
                <Setter TargetName="ContentValue" Property="ContentTemplate"
                        Value="{StaticResource NormalAssetValueTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Presentation}" Value="{x:Null}">
                <Setter TargetName="ContentValue" Property="ContentTemplate"
                        Value="{StaticResource NormalAssetValueTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Presentation}" Value="asset">
                <Setter TargetName="ContentValue" Property="ContentTemplate" Value="{StaticResource SubAssetTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Presentation}" Value="group">
                <Setter TargetName="ContentValue" Property="ContentTemplate"
                        Value="{StaticResource GroupAssetValueTemplate}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <Style x:Key="TrvPanelItemAssetItemStyle"
           TargetType="{x:Type ctrls:AssetPanelItem}"
           BasedOn="{StaticResource {x:Type ctrls:TreeViewPanelItem}}">
        <Setter Property="ContextMenu" Value="{StaticResource AssetItemContextMenu}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type self:AssetItem}">
                    <ctrls:AssetPanelRow CellTemplate="{StaticResource AssetItemValueDataTemplate}"
                                         x:Name="PART_ROW"
                                         Level="{Binding RelativeSource={RelativeSource AncestorType={x:Type ctrls:TreeViewPanelItem}}, Path=Level, Mode=OneTime}">
                        <ctrls:AssetPanelRow.AttributeTemplate>
                            <DataTemplate>
                                <ctrls:FastNeuronDataEditor SelectedNeuron="{Binding Path=Attribute, Mode=TwoWay}"
                                                            ShowDropDownOnMouseOver="true"
                                                            Popup="{StaticResource NeuronBrowserPopup}"
                                                            VerticalAlignment="Top"
                                                            IconVisibility="{Binding Path=Owner.Root.IconVisibility}"
                                                            dd:DragDropManager.DropTarget="{StaticResource NDEditorDropAdvisor}" />
                            </DataTemplate>
                        </ctrls:AssetPanelRow.AttributeTemplate>
                    </ctrls:AssetPanelRow>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
<self:CtrlEditorBase x:Class="JaStDev.HAB.Designer.FrameEditorView"
                     xmlns:self="clr-namespace:JaStDev.HAB.Designer"
                     xmlns:hab="clr-namespace:JaStDev.HAB;assembly=JaStDev.HabCore"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:dd="clr-namespace:DnD"
                     xmlns:Ctrls="clr-namespace:JaStDev.HAB.Designer.WPF.Controls"
                     xmlns:cf="http://schemas.jastdev.ControlFramework/winfx/2007/xaml/presentation"
                     cf:Help.Topic="frameeditors.html"
                     Background="Transparent"
                     Focusable="True"
                     IsHitTestVisible="True">
    <self:CtrlEditorBase.CommandBindings>

        <CommandBinding Command="self:App.AddFrameCmd" Executed="AddFrame_Executed" CanExecute="AddFrame_CanExecute" />
        <CommandBinding Command="self:App.AddFrameElementCmd" CanExecute="AddToSelected_CanExecute"
                        Executed="AddFrameElement_Executed" />
        <CommandBinding Command="self:App.AddFrameSequenceCmd" CanExecute="AddToSelected_CanExecute"
                        Executed="AddFrameSequence_Executed" />

        <CommandBinding Command="self:App.AddFrameElementFilterCmd" CanExecute="AddToSelectedElement_CanExecute"
                        Executed="AddFrameElementFilter_Executed" />
        <CommandBinding Command="self:App.AddFEFilterSegmentCmd" CanExecute="AddFEFilterSegmentCmd_CanExecute"
                        Executed="AddFEFilterSegmentCmd_Executed" />
        <CommandBinding Command="self:App.AddFrameElementFilterGroupCmd" CanExecute="AddToSelectedElement_CanExecute"
                        Executed="AddFrameElementFilterGroup_Executed" />
        <CommandBinding Command="self:App.AddFECustomFilterCmd" CanExecute="AddToSelectedElement_CanExecute"
                        Executed="AddFECustomFilter_Executed" />
        <CommandBinding Command="self:App.AddFEBoolFilterCmd" CanExecute="AddToSelectedElement_CanExecute"
                        Executed="AddFEBoolFilter_Executed" />

        <CommandBinding Command="self:App.MoveElementUpCmd" CanExecute="MoveElementUp_CanExecute"
                        Executed="MoveElementUp_Executed" />
        <CommandBinding Command="self:App.MoveElementDownCmd" CanExecute="MoveElementDown_CanExecute"
                        Executed="MoveElementDown_Executed" />
        <CommandBinding Command="self:App.AddElementToSequenceCmd" CanExecute="AddElementToSequence_CanExecute"
                        Executed="AddElementToSequence_Executed" />
        <CommandBinding Command="self:App.RemoveElementFromSequenceCmd"
                        CanExecute="RemoveElementFromSequence_CanExecute" Executed="RemoveElementFromSequence_Executed" />

        <CommandBinding Command="self:App.RenameCmd" CanExecute="Rename_CanExecute" Executed="Rename_Executed" />
    </self:CtrlEditorBase.CommandBindings>

    <self:CtrlEditorBase.InputBindings>
        <KeyBinding Key="F"
                    Modifiers="Ctrl+Shift"
                    Command="self:App.AddFrameCmd" />
        <KeyBinding Key="E"
                    Modifiers="Ctrl+Shift"
                    Command="self:App.AddFrameElementCmd" />
        <KeyBinding Key="S"
                    Modifiers="Ctrl+Shift"
                    Command="self:App.AddFrameSequenceCmd" />
        <KeyBinding Key="I"
                    Modifiers="Ctrl+Shift"
                    Command="self:App.AddFrameElementFilterCmd" />
        <KeyBinding Key="G"
                    Modifiers="Ctrl+Shift"
                    Command="self:App.AddFrameElementFilterGroupCmd" />
        <KeyBinding Key="C"
                    Modifiers="Ctrl+Shift"
                    Command="self:App.AddFECustomFilterCmd" />
        <KeyBinding Key="B"
                    Modifiers="Ctrl+Shift"
                    Command="self:App.AddFEBoolFilterCmd" />

    </self:CtrlEditorBase.InputBindings>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <ListBox ItemsSource="{Binding Path=Frames}"
                 Loaded="LstFrames_Loaded"
                 x:Name="LstFrames"
                 ItemTemplate="{StaticResource NeuronDataTextBlockWithOverlays}"
                 ItemContainerStyle="{StaticResource FrameStyle}"
                 SelectedItem="{Binding Path=SelectedFrame, Mode=OneWay}"
                 dd:DragDropManager.DropTarget="{StaticResource FrameListDropAdvisor}">
            <ListBox.InputBindings>
                <!--the rename must be local, cause the datagrid also uses f2 to start editing cells.-->
                <KeyBinding Key="F2" Command="self:App.RenameCmd" />
            </ListBox.InputBindings>
        </ListBox>
        <GridSplitter Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      ShowsPreview="True"
                      Width="6" />
        <TabControl Grid.Column="2"
                    SelectedIndex="{Binding Path=SelectedTabIndex}"
                    x:Name="TabContent">
            <TabItem Header="Frame elements"
                     ToolTip="Contains all the roles that make up the frame.">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <!--we make this focused so that we can immediatly start to edit-->
                    <ListView x:Name="DataElements"
                              cf:FocusManager.IsFocused="True"
                              ItemsSource="{Binding Path=SelectedFrame.Elements}"
                              ItemContainerStyle="{StaticResource FrameElementDataGridRow}"
                              dd:DragDropManager.DropTarget="{StaticResource FrameElementListDropAdvisor}"
                              MouseDown="DataElements_MouseDown">
                        <ListView.CommandBindings>
                            <CommandBinding Command="Delete" CanExecute="DeleteSelectedElement_CanExecute"
                                            Executed="DeleteSelectedElement_Executed" />
                            <CommandBinding Command="Copy" CanExecute="CopySelectedElement_CanExecute"
                                            Executed="CopySelectedElement_Executed" />
                            <CommandBinding Command="Paste" CanExecute="PasteToSelectedElement_CanExecute"
                                            Executed="PasteToSelectedElement_Executed" />
                            <CommandBinding Command="Cut" CanExecute="CutSelectedElement_CanExecute"
                                            Executed="CutSelectedElement_Executed" />
                        </ListView.CommandBindings>
                        <ListView.InputBindings>
                            <KeyBinding Command="Delete" Key="Del" />
                        </ListView.InputBindings>
                        <ListView.View>
                            <GridView>
                                <GridView.Columns>
                                    <GridViewColumn Width="150">
                                        <GridViewColumn.Header>
                                            <TextBlock
                                                ToolTip="The flow (or other neuron) that relates to this frame element">
                                                Role
                                            </TextBlock>
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Ctrls:DropDownNSSelector
                                                    SelectedNeuron="{Binding Path=VerbNetRole, Mode=TwoWay}"
                                                    VerticalAlignment="Stretch"
                                                    dd:DragDropManager.DropTarget="{StaticResource DDNeuronSelectorDropAdvisor}"
                                                    ToolTip="{Binding Path=VerbNetRole.ID}">
                                                    <Ctrls:DropDownNSSelector.ItemsSources>
                                                        <Ctrls:BrowserDataSource PageHeader="Thesaurus"
                                                                                 PageToolTip="All the outputs declared in the topics attached to thesaurus items"
                                                                                 ItemsSource="{Binding Source={x:Static self:BrainData.Current}, Path=Thesaurus.BrowsableItems, Mode=OneWay}"
                                                                                 AsTree="True" />
                                                    </Ctrls:DropDownNSSelector.ItemsSources>
                                                </Ctrls:DropDownNSSelector>


                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="150">
                                        <GridViewColumn.Header>
                                            <TextBlock ToolTip="The name of the frame element">Name</TextBlock>
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox
                                                    Text="{Binding Path=NeuronInfo.DisplayTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    GotFocus="TxtElementName_GotFocus"
                                                    HorizontalAlignment="Stretch" />
                                                <!---->
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumn.Header>
                                            <TextBlock
                                                ToolTip="When checked, this frame element evokes (can trigger) the frame">
                                                Evoker
                                            </TextBlock>
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsChecked="{Binding Path=IsEvoker}"
                                                          VerticalAlignment="Center" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn>
                                        <GridViewColumn.Header>
                                            <TextBlock
                                                ToolTip="Core elements need to be present in the input (when included in the sequence), others aren't">
                                                Importance
                                            </TextBlock>
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox
                                                    ItemsSource="{Binding Source={x:Static self:BrainData.Current}, Path=FrameElementImportances}"
                                                    SelectedItem="{Binding Path=Importance}"
                                                    HorizontalAlignment="Stretch" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn>
                                        <GridViewColumn.Header>
                                            <TextBlock
                                                ToolTip="When checked, this frame element can have multiple result values in the flow result, in sequence.">
                                                Allow multi
                                            </TextBlock>
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsChecked="{Binding Path=AllowMulti}"
                                                          VerticalAlignment="Center" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>

                                    <GridViewColumn Width="150">
                                        <GridViewColumn.Header>
                                            <TextBlock
                                                ToolTip="The meaning that will be assigned to the result of this frame element when the result of one or more of this frame's sequences is auto generated.">
                                                Result type
                                            </TextBlock>
                                        </GridViewColumn.Header>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Ctrls:DropDownNSSelector
                                                    SelectedNeuron="{Binding Path=ElementResultType, Mode=TwoWay}"
                                                    VerticalAlignment="Stretch"
                                                    dd:DragDropManager.DropTarget="{StaticResource DDNeuronSelectorDropAdvisor}"
                                                    ToolTip="{Binding Path=ElementResultType.ID}">
                                                    <Ctrls:DropDownNSSelector.ItemsSources>
                                                        <Ctrls:BrowserDataSource PageHeader="Thesaurus"
                                                                                 PageToolTip="All the outputs declared in the topics attached to thesaurus items"
                                                                                 ItemsSource="{Binding Source={x:Static self:BrainData.Current}, Path=Thesaurus.BrowsableItems, Mode=OneWay}"
                                                                                 AsTree="True" />
                                                    </Ctrls:DropDownNSSelector.ItemsSources>
                                                </Ctrls:DropDownNSSelector>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <GridSplitter Grid.Row="1"
                                  Height="6"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  ShowsPreview="True" />
                    <!--The restrictions editor for the selected element-->
                    <self:FERestrictionsView DataContext="{Binding ElementName=DataElements, Path=SelectedItem}"
                                             Grid.Row="2">
                        <self:FERestrictionsView.CommandBindings>
                            <CommandBinding Command="Delete" CanExecute="DeleteSelectedRestriction_CanExecute"
                                            Executed="DeleteSelectedRestriction_Executed" />
                            <CommandBinding Command="Copy" CanExecute="CopySelectedRestriction_CanExecute"
                                            Executed="CopySelectedRestriction_Executed" />
                            <CommandBinding Command="Paste" CanExecute="PasteToSelectedRestriction_CanExecute"
                                            Executed="PasteToSelectedRestriction_Executed" />
                            <CommandBinding Command="Cut" CanExecute="CutSelectedRestriction_CanExecute"
                                            Executed="CutSelectedRestriction_Executed" />
                        </self:FERestrictionsView.CommandBindings>
                    </self:FERestrictionsView>
                </Grid>
            </TabItem>
            <TabItem Header="Sequences"
                     ToolTip="Contains all the known sequences of frame elements.">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ListBox ItemsSource="{Binding Path=SelectedFrame.Sequences}"
                             SelectedItem="{Binding Path=SelectedFrame.SelectedSequence}"
                             IsSynchronizedWithCurrentItem="True"
                             ItemTemplate="{StaticResource NeuronDataTextBlockWithOverlays}"
                             x:Name="LstSequences"
                             ItemContainerStyle="{StaticResource FrameSequenceListBoxItem}"
                             dd:DragDropManager.DropTarget="{StaticResource FrameSequenceListDropAdvisor}">
                        <ListBox.CommandBindings>
                            <CommandBinding Command="Delete" CanExecute="DeleteSelectedSequence_CanExecute"
                                            Executed="DeleteSelectedSequence_Executed" />
                            <CommandBinding Command="Copy" CanExecute="CopySelectedSequence_CanExecute"
                                            Executed="CopySelectedSequence_Executed" />
                            <CommandBinding Command="Paste" CanExecute="PasteToSelectedSequence_CanExecute"
                                            Executed="PasteToSelectedSequence_Executed" />
                            <CommandBinding Command="Cut" CanExecute="CutSelectedSequence_CanExecute"
                                            Executed="CutSelectedSequence_Executed" />
                        </ListBox.CommandBindings>
                        <ListBox.InputBindings>
                            <!--the rename must be local, cause the datagrid also uses f2 to start editing cells.-->
                            <KeyBinding Key="F2" Command="self:App.RenameCmd" />
                        </ListBox.InputBindings>
                    </ListBox>
                    <GridSplitter Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Stretch"
                                  ShowsPreview="True"
                                  Width="6" />
                    <!--This grid contains all the frame elements in a sequence on the left, to the right all the elements
                      that are not yet used in the sequence and in the centre the buttons to control order and content.-->
                    <Grid Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ListBox ItemsSource="{Binding ElementName=LstSequences, Path=SelectedItem.NotUsedItems}"
                                 x:Name="LstNotUsed"
                                 DisplayMemberPath="NeuronInfo.DisplayTitle"
                                 SelectionMode="Extended" />
                        <StackPanel Grid.Column="1"
                                    FocusManager.IsFocusScope="True">
                            <Button Margin="8,8,8,4"
                                    Name="BtnAdd"
                                    Command="self:App.AddElementToSequenceCmd">
                                <Image
                                    Source="{Binding ElementName=BtnAdd, Path=IsEnabled, Converter={StaticResource BtnImgConv}, ConverterParameter=/Images/Arrows/Right1.png, Mode=OneWay}"
                                    Style="{StaticResource TlbImageStyle}" />
                            </Button>
                            <Button Margin="8,4,8,4"
                                    Name="BtnRemove"
                                    Command="self:App.RemoveElementFromSequenceCmd">
                                <Image
                                    Source="{Binding ElementName=BtnRemove, Path=IsEnabled, Converter={StaticResource BtnImgConv}, ConverterParameter=/Images/Arrows/Left1.png, Mode=OneWay}"
                                    Style="{StaticResource TlbImageStyle}" />
                            </Button>
                            <Button Margin="8,4,8,4"
                                    Name="BtnUp"
                                    Command="self:App.MoveElementUpCmd">
                                <Image
                                    Source="{Binding ElementName=BtnUp, Path=IsEnabled, Converter={StaticResource BtnImgConv}, ConverterParameter=/Images/Arrows/Up1.png, Mode=OneWay}"
                                    Style="{StaticResource TlbImageStyle}" />
                            </Button>
                            <Button Margin="8,4,8,4"
                                    Name="BtnDown"
                                    Command="self:App.MoveElementDownCmd">
                                <Image
                                    Source="{Binding ElementName=BtnDown, Path=IsEnabled, Converter={StaticResource BtnImgConv}, ConverterParameter=/Images/Arrows/Down1.png, Mode=OneWay}"
                                    Style="{StaticResource TlbImageStyle}" />
                            </Button>
                        </StackPanel>
                        <ListBox Grid.Column="2"
                                 ItemTemplate="{StaticResource SequenceItemTemplate}"
                                 x:Name="LstSequenceContent"
                                 SelectionMode="Extended"
                                 ItemsSource="{Binding ElementName=LstSequences, Path=SelectedItem.Items}" />
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</self:CtrlEditorBase>
<self:CtrlEditorItem x:Class="JaStDev.HAB.Designer.WPF.Controls.CtrlCondStatement"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:self="clr-namespace:JaStDev.HAB.Designer"
                     xmlns:hab="clr-namespace:JaStDev.HAB;assembly=JaStDev.HabCore"
                     xmlns:dd="clr-namespace:DnD"
                     xmlns:Ctrls="clr-namespace:JaStDev.HAB.Designer.WPF.Controls"
                     Ctrls:CodePagePanel.IsNextStatement="{Binding Path=IsNextStatement}"
                     Ctrls:CodePagePanel.IsSelected="{Binding Path=IsSelected}">
    <Grid>
        <Path Data="{Binding Source={StaticResource ImgConditionalStatementPath}}"
              Visibility="{Binding Path=IsMultiUsed, Converter={StaticResource BoolToVisConv}}"
              Stretch="Fill"
              Stroke="Black"
              StrokeThickness="1"
              Fill="{StaticResource ImgConditionalStatementBrush}">
            <Path.RenderTransform>
                <TranslateTransform X="4" Y="-4" />
            </Path.RenderTransform>
        </Path>
        <Path Data="{Binding Source={StaticResource ImgConditionalStatementPath}}"
              Stretch="Fill"
              Stroke="Black"
              StrokeThickness="1"
              Fill="{StaticResource ImgConditionalStatementBrush}" />
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Margin="8,0,8,0">
            <!--The header of the loop-->
            <Grid>
                <!--visualizer of selected value-->
                <Grid Style="{StaticResource CodeItemDropTargetGrid}"
                      Margin="0,0,20,0"
                      Tag="{Binding ElementName=LoopStylePart}"
                      dd:DragDropManager.DropTarget="{StaticResource ResultCodeItemDropAdvisor}"
                      dd:DragDropManager.DragSource="{StaticResource CodeItemDragAdvisor}">
                    <Border Style="{StaticResource CodeItemDropTargetBorder}"
                            Visibility="{Binding Path=NotHasLoopStyle, Converter={StaticResource BoolToVisConv}, Mode=OneWay}">
                        <TextBlock Style="{StaticResource CodeItemDropTargetText}">
                            <Italic>Type</Italic>
                        </TextBlock>
                    </Border>
                    <ContentPresenter Content="{Binding Path=LoopStyle, Mode=TwoWay}"
                                      x:Name="LoopStylePart" />
                </Grid>
                <!--Possible default values.-->
                <ComboBox Style="{StaticResource CodeItemFixedItemsSelectorStyle}"
                          DisplayMemberPath="Info.DisplayTitle"
                          HorizontalAlignment="Right"
                          SelectionChanged="LoopStyle_SelectionChanged">
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.Normal}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.Case}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.Looped}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.Until}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.CaseLooped}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.ForEach}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.QueryLoop}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.QueryLoopIn}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.QueryLoopOut}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.QueryLoopChildren}" />
                    <self:NeuronInfo ID="{x:Static hab:PredefinedNeurons.QueryLoopClusters}" />
                </ComboBox>
            </Grid>

            <!--Case item drop target-->
            <Grid Style="{StaticResource CodeItemDropTargetGrid}"
                  Visibility="{Binding Path=CaseItemVisibility}"
                  Tag="{Binding ElementName=CaseItemPart}"
                  dd:DragDropManager.DropTarget="{StaticResource ResultCodeItemDropAdvisor}"
                  dd:DragDropManager.DragSource="{StaticResource CodeItemDragAdvisor}">
                <Border Style="{StaticResource CodeItemDropTargetBorder}"
                        Visibility="{Binding Path=NotHasCaseItem, Converter={StaticResource BoolToVisConv}, Mode=OneWay}">
                    <TextBlock Style="{StaticResource CodeItemDropTargetText}">
                        <Italic>Case item</Italic>
                    </TextBlock>
                </Border>
                <ContentPresenter Content="{Binding Path=CaseItem, Mode=TwoWay}"
                                  x:Name="CaseItemPart" />
            </Grid>

            <!--Loop item drop target-->
            <Grid Style="{StaticResource CodeItemDropTargetGrid}"
                  Visibility="{Binding Path=LoopItemVisibility, Mode=OneWay}"
                  Tag="{Binding ElementName=LoopItemPart}"
                  dd:DragDropManager.DropTarget="{StaticResource VarCodeItemDropAdvisor}"
                  dd:DragDropManager.DragSource="{StaticResource CodeItemDragAdvisor}">
                <Border Style="{StaticResource CodeItemDropTargetBorder}"
                        Visibility="{Binding Path=NotHasLoopItem, Converter={StaticResource BoolToVisConv}, Mode=OneWay}">
                    <TextBlock Style="{StaticResource CodeItemDropTargetText}">
                        <Italic>Loop item</Italic>
                    </TextBlock>
                </Border>
                <ContentPresenter Content="{Binding Path=LoopItem, Mode=TwoWay}"
                                  x:Name="LoopItemPart" />
            </Grid>
        </StackPanel>
        <ToggleButton Style="{StaticResource DebugToggleButton}"
                      IsChecked="{Binding Path=IsBreakPoint}" />
    </Grid>
</self:CtrlEditorItem>
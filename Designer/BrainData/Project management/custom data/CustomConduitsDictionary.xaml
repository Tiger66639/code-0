<ResourceDictionary x:Class="JaStDev.HAB.Designer.CustomConduitsDictionary"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cc="clr-namespace:JaStDev.HAB.Designer.CustomConduitSupport;assembly=CustomConduitSupport">

    <DataTemplate DataType="{x:Type cc:CSVConduit}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ComboBox ItemsSource="{Binding Path=AvailableCultures}"
                      ToolTip="Select the culture that needs to be used for interpreting the data."
                      SelectedItem="{Binding Path=Culture}"
                      DisplayMemberPath="DisplayName" />
            <GroupBox Header="Parser"
                      Grid.Row="1"
                      Margin="0,8,0,8">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Field separator"
                              Grid.Column="0"
                              Grid.ColumnSpan="4"
                              Grid.Row="0"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Stretch"
                              Margin="4,0,4,8">

                        <Grid HorizontalAlignment="Stretch"
                              ToolTip="Specify the character used to seperate fields.">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <RadioButton IsChecked="{Binding Path=FieldSeparatorsIsTab}"
                                         Grid.Column="0">
                                Tab
                            </RadioButton>
                            <RadioButton Grid.Column="1"
                                         IsChecked="{Binding Path=FieldSeparatorsIsSemiColon}">
                                Semicolon
                            </RadioButton>
                            <RadioButton Grid.Column="2"
                                         IsChecked="{Binding Path=FieldSeparatorsIsComma}">
                                Comma
                            </RadioButton>
                            <RadioButton Grid.Column="3"
                                         IsChecked="{Binding Path=FieldSeparatorsIsSpace}">
                                Space
                            </RadioButton>
                            <RadioButton Grid.Column="4"
                                         IsChecked="{Binding Path=FieldSeparatorsIsPipe}">
                                Pipe
                            </RadioButton>
                        </Grid>
                    </GroupBox>


                    <CheckBox IsChecked="{Binding Path=FirstLineIsHeader}"
                              ToolTip="When checked, the first row is expected to contain the column names. This will be used to determin the nr of columns."
                              Grid.ColumnSpan="2"
                              Grid.Row="1">
                        First line is Header
                    </CheckBox>

                    <TextBlock Grid.Column="2"
                               Grid.Row="1"
                               VerticalAlignment="Center"
                               Margin="4,0,4,0"
                               HorizontalAlignment="Right">
                        comment sign:
                    </TextBlock>
                    <TextBox Text="{Binding Path=CommentSign, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Specify the character used to indicate the start of comment."
                             Grid.Column="3"
                             Grid.Row="1" />

                    <TextBlock Grid.Column="0"
                               Grid.Row="2"
                               VerticalAlignment="Center"
                               Margin="4,0,4,0"
                               HorizontalAlignment="Right">
                        Quotations:
                    </TextBlock>
                    <TextBox Text="{Binding Path=QuotationSign, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Specify the character used to encapsulate text."
                             Grid.Column="1"
                             Grid.Row="2" />

                    <TextBlock Grid.Column="2"
                               Grid.Row="2"
                               VerticalAlignment="Center"
                               Margin="4,0,4,0"
                               HorizontalAlignment="Right">
                        Escape quotes:
                    </TextBlock>
                    <TextBox Text="{Binding Path=EscapeSign, UpdateSourceTrigger=PropertyChanged}"
                             ToolTip="Specify the character used to escape quotes so that a quote can also be used in the text."
                             Grid.Column="3"
                             Grid.Row="2" />

                </Grid>
            </GroupBox>


            <DataGrid ItemsSource="{Binding Path=FieldValueMappings}"
                      AutoGenerateColumns="False"
                      Grid.Row="3"
                      Margin="0,8,0,0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Original" Binding="{Binding Path=Original}" />
                    <DataGridTextColumn Header="Replace with" Binding="{Binding Path=ReplaceWith}" />
                </DataGrid.Columns>
            </DataGrid>

        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type cc:XmlConduit}">
        <ComboBox ItemsSource="{Binding Path=AvailableCultures}"
                  ToolTip="Select the culture that needs to be used for interpreting the data."
                  SelectedItem="{Binding Path=Culture}"
                  DisplayMemberPath="DisplayName" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type cc:CsvRenderPipe}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <DockPanel>
                <Button DockPanel.Dock="Right"
                        Width="20"
                        Margin="1,0,0,0"
                        BorderThickness="0"
                        ToolTip="Show a file browser to select the destination file."
                        Tag="{Binding ElementName=TxtDest}"
                        Click="BtnMore_Click">
                    ...
                </Button>
                <TextBox Text="{Binding Path=FileName, UpdateSourceTrigger=PropertyChanged}"
                         Name="TxtDest"
                         ToolTip="Select the destination for rendering the output to." />
            </DockPanel>
            <ComboBox ItemsSource="{Binding Path=AvailableCultures}"
                      Grid.Row="1"
                      Margin="0,8,0,0"
                      ToolTip="Select the culture that needs to be used for interpreting the data."
                      SelectedItem="{Binding Path=Culture}"
                      DisplayMemberPath="DisplayName" />
            <GroupBox Header="Field separator"
                      Grid.Row="2"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Stretch"
                      Margin="0,8,0,0">

                <Grid HorizontalAlignment="Stretch"
                      ToolTip="Specify the character used to seperate fields.">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <RadioButton IsChecked="{Binding Path=FieldSeparatorsIsTab}"
                                 Grid.Column="0">
                        Tab
                    </RadioButton>
                    <!--this is the widest word, so it gets a fixed with and some margin.-->
                    <RadioButton Grid.Column="1"
                                 Margin="8,0,8,0"
                                 IsChecked="{Binding Path=FieldSeparatorsIsSemiColon}">
                        Semicolon
                    </RadioButton>
                    <RadioButton Grid.Column="2"
                                 IsChecked="{Binding Path=FieldSeparatorsIsComma}">
                        Comma
                    </RadioButton>
                    <RadioButton Grid.Column="3"
                                 IsChecked="{Binding Path=FieldSeparatorsIsSpace}">
                        Space
                    </RadioButton>
                    <RadioButton Grid.Column="4"
                                 IsChecked="{Binding Path=FieldSeparatorsIsPipe}">
                        Pipe
                    </RadioButton>
                </Grid>
            </GroupBox>
            <CheckBox IsChecked="{Binding Path=Append}"
                      Grid.Row="3"
                      Margin="0,8,0,0"
                      ToolTip="When Checked, data will be appended to the file, otherwise a new file will be created.">
                Append to file
            </CheckBox>
        </Grid>
    </DataTemplate>

</ResourceDictionary>
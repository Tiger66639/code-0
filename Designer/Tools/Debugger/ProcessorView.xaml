<UserControl x:Class="JaStDev.HAB.Designer.ProcessorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:self="clr-namespace:JaStDev.HAB.Designer"
             xmlns:cf="http://schemas.jastdev.ControlFramework/winfx/2007/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             IsEnabled="{Binding Path=Processor.IsRunning}"
             Loaded="UserControl_Loaded">
    <UserControl.InputBindings>
        <KeyBinding Key="F5" Command="self:App.ContinueDebugCmd" />
        <KeyBinding Key="F6" Command="self:App.StepNextDebugCmd" />
        <KeyBinding Key="F7" Command="self:App.InspectExpressionCmd" />
    </UserControl.InputBindings>
    <UserControl.CommandBindings>
        <CommandBinding Command="self:App.OpenDebuggerInEditorCmd" CanExecute="OpenDebuggerInEditor_CanExecute"
                        Executed="OpenDebuggerInEditor_Executed" />
    </UserControl.CommandBindings>
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="DebugItemControls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolToVisConv" />
            <Style x:Key="ProcessorViewListBox" TargetType="{x:Type ListBox}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </Style>


            <Style x:Key="ProcessorViewCodeItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="ClipToBounds" Value="False" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border Name="Bd"
                                    ClipToBounds="False"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsNextStatement}" Value="True">
                                    <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                                </DataTrigger>
                                <!--<Trigger Property="IsSelected" Value="true">
                           <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                           <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                           <MultiTrigger.Conditions>
                              <Condition Property="IsSelected" Value="true"/>
                              <Condition Property="Selector.IsSelectionActive" Value="false"/>
                           </MultiTrigger.Conditions>
                           <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                           <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>-->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Style for listbox items that contains debug neurons that need to be shown as selected.-->
            <Style x:Key="ProcessorViewListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=OneWay}" />
            </Style>

            <!--DataTemplate for a complete execution frame (all the code)-->
            <DataTemplate DataType="{x:Type self:ExecutionFrame}">
                <DockPanel>
                    <Border DockPanel.Dock="Bottom"
                            BorderThickness="0,1,0,0"
                            BorderBrush="Black">
                        <StackPanel>
                            <TextBlock>
                                <TextBlock.Text>
                                    <Binding Path="Item" StringFormat="Neuron: {0}" />
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock>
                                <TextBlock.Text>
                                    <Binding Path="CodeListType" StringFormat="code type: {0}" />
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock
                                Visibility="{Binding Path=HasConditionalType, Converter={StaticResource BoolToVisConv}}">
                                <TextBlock.Text>
                                    <Binding Path="ConditionalType.NeuronInfo.DisplayTitle"
                                             StringFormat="Loop type: {0}" />
                                </TextBlock.Text>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    <ListBox ItemsSource="{Binding Path=Code}"
                             Style="{StaticResource ProcessorViewListBox}"
                             ItemContainerStyle="{StaticResource ProcessorViewCodeItemStyle}" />
                </DockPanel>
            </DataTemplate>

            <!--Used to display the content of all the variables and globals (memory)-->
            <DataTemplate DataType="{x:Type self:VariableValue}">
                <Expander Header="{Binding Path=Variable}"
                          ToolTip="Expand to display the content of this variable/global">
                    <ItemsControl ItemsSource="{Binding Path=Values}" />
                </Expander>
            </DataTemplate>

            <DataTemplate DataType="{x:Type self:FunctionValue}">
                <Expander Header="{Binding Path=Index}"
                          ToolTip="Expand to display the content of this variable/global">
                    <ItemsControl ItemsSource="{Binding Path=Values}" />
                </Expander>
            </DataTemplate>

            <!--style for Tab item containing code-->
            <Style x:Key="FunctionTabItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=OneWay}" />
            </Style>

            <!--Header for tab items containing code.-->
            <DataTemplate x:Key="TabFunctionsHeader">
                <Border x:Name="bd"
                        MinWidth="140"
                        BorderBrush="Black"
                        BorderThickness="0">
                    <TextBlock Text="{Binding Path=NeuronInfo.DisplayTitle}"
                               HorizontalAlignment="Left" />
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                        <Setter TargetName="bd" Property="BorderThickness" Value="1" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>

    </UserControl.Resources>

    <TabControl TabStripPlacement="Bottom">
        <TabItem Header="Execution"
                 ToolTip="Displays the current and future content and location of the execution position that the processor is at.">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Path=StackWidth, Mode=TwoWay}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="{Binding Path=LinksToSolveWidth, Mode=TwoWay}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <DockPanel>
                    <GroupBox Header="Current"
                              ToolTip="The neuron that is currently being executed."
                              DockPanel.Dock="Top">
                        <ContentPresenter Content="{Binding Path=Processor.ExecutingNeuron}" />
                    </GroupBox>
                    <GroupBox Header="Stack content"
                              ToolTip="The content of the stack which contains the neurons that will be executed next.">
                        <ListBox x:Name="LstStack"
                                 Style="{StaticResource ProcessorViewListBox}"
                                 ItemContainerStyle="{StaticResource ProcessorViewListBoxItemStyle}"
                                 ItemsSource="{Binding Path=Processor.StackDisplay}" />
                    </GroupBox>
                </DockPanel>
                <GridSplitter Grid.Column="1"
                              Width="6"
                              ShowsPreview="True"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Stretch" />
                <GroupBox Header="Meanings to execute"
                          ToolTip="All the relationships of the execution neuron (displayed in current) which are being executed."
                          Grid.Column="2">
                    <ListBox x:Name="LstLinksToSolve"
                             ItemsSource="{Binding Path=Processor.MeaningsToExec}"
                             ItemContainerStyle="{StaticResource ProcessorViewListBoxItemStyle}"
                             Style="{StaticResource ProcessorViewListBox}" />
                </GroupBox>
                <GridSplitter Grid.Column="3"
                              Width="6"
                              ShowsPreview="True"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Stretch" />
                <GroupBox Grid.Column="4"
                          ToolTip="The code that is currently being executed."
                          Header="Execution frames">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.3*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <ListBox ItemsSource="{Binding Path=Processor.ExecutionFrames, Mode=OneWay}"
                                 ItemTemplate="{StaticResource TabFunctionsHeader}"
                                 Name="LstExecFrames"
                                 ItemContainerStyle="{StaticResource FunctionTabItemStyle}"
                                 Background="Transparent"
                                 BorderThickness="0" />

                        <GridSplitter Grid.Column="1"
                                      Width="6"
                                      ShowsPreview="True"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch" />
                        <ContentPresenter Content="{Binding ElementName=LstExecFrames, Path=SelectedItem}"
                                          Grid.Column="2" />
                    </Grid>
                    <!--<TabControl x:Name="TabFunctions"
                           ItemsSource="{Binding Path=Processor.ExecutionFrames, Mode=OneWay}"
                           ItemTemplate="{StaticResource TabFunctionsHeader}"
                           ItemContainerStyle="{StaticResource FunctionTabItemStyle}"
                           TabStripPlacement="Left"/>-->
                </GroupBox>

            </Grid>
        </TabItem>
        <TabItem Header="Memory"
                 ToolTip="Displays the current content and status of all the memory used by this processor">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Path=VariablesWidth, Mode=TwoWay}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="{Binding Path=GlobalsWidth, Mode=TwoWay}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="{Binding Path=ArgumentsWidth, Mode=TwoWay}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <GroupBox Header="Variables"
                          ToolTip="Displays the content of all the variables that currently have a value.">
                    <ListBox x:Name="Lstvariables"
                             Style="{StaticResource ProcessorViewListBox}"
                             ItemContainerStyle="{StaticResource ProcessorViewListBoxItemStyle}"
                             ItemsSource="{Binding Path=Processor.VariablesDisplay}" />
                </GroupBox>

                <GridSplitter Grid.Column="1"
                              Width="6"
                              ShowsPreview="True"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Stretch" />


                <GroupBox Header="Globals"
                          ToolTip="Displays the content of all the globals that currently have a value."
                          Grid.Column="2">
                    <ListBox x:Name="LstGlobals"
                             Style="{StaticResource ProcessorViewListBox}"
                             ItemContainerStyle="{StaticResource ProcessorViewListBoxItemStyle}"
                             ItemsSource="{Binding Path=Processor.GlobalsDisplay}" />
                </GroupBox>

                <GridSplitter Grid.Column="3"
                              Width="6"
                              ShowsPreview="True"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Stretch" />


                <GroupBox Grid.Column="4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <GroupBox Header="Arguments"
                                  ToolTip="Displays the content of all the arguments currently waiting to be consumed by a function.">
                            <ListBox x:Name="LstArguments"
                                     Style="{StaticResource ProcessorViewListBox}"
                                     ItemContainerStyle="{StaticResource ProcessorViewListBoxItemStyle}"
                                     ItemsSource="{Binding Path=Processor.ArgumentsDisplay}" />
                        </GroupBox>

                        <GridSplitter Grid.Row="1"
                                      Height="6"
                                      ShowsPreview="True"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Center" />

                        <GroupBox Header="Return values"
                                  Grid.Row="2"
                                  ToolTip="Displays the content of all the return values from function calls that have not yet been consumed.">
                            <ListBox x:Name="LstReturnValues"
                                     Style="{StaticResource ProcessorViewListBox}"
                                     ItemContainerStyle="{StaticResource ProcessorViewListBoxItemStyle}"
                                     ItemsSource="{Binding Path=Processor.ReturnValuesDisplay}" />
                        </GroupBox>
                    </Grid>
                </GroupBox>

                <GridSplitter Grid.Column="5"
                              Width="6"
                              ShowsPreview="True"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Stretch" />


                <GroupBox Header="Split info"
                          ToolTip="Displays the weight and split results assigned to this processor."
                          Grid.Column="6">
                    <StackPanel>
                        <TextBlock Text="{Binding Path=Processor.SplitWeight, StringFormat=Weight: {0}}" />
                        <ItemsControl ItemsSource="{Binding Path=Processor.SplitResults}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=Weight}"
                                                   Margin="4" />
                                        <ContentPresenter Content="{Binding Path=Item}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </GroupBox>
            </Grid>
        </TabItem>
    </TabControl>

</UserControl>
<UserControl x:Class="JaStDev.HAB.Designer.TimersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:jc="http://schemas.jastdev.ControlFramework/winfx/2007/xaml/presentation"
             xmlns:self="clr-namespace:JaStDev.HAB.Designer"
             xmlns:dd="clr-namespace:DnD"
             jc:Help.Topic="timermanager.html"
             x:Name="this">
    <UserControl.CommandBindings>
        <CommandBinding Command="Delete" CanExecute="DeleteNeuron_CanExecute" Executed="DeleteNeuron_Executed" />
    </UserControl.CommandBindings>
    <UserControl.Resources>

        <self:TimerDragAdvisor x:Key="TimerDragAdv" />


        <Style x:Key="TimerDataGridRow" TargetType="{x:Type DataGridRow}">
            <Setter Property="dd:DragDropManager.DragSource" Value="{StaticResource TimerDragAdv}" />
            <EventSetter Event="DataGridRow.PreviewMouseRightButtonDown" Handler="DGridRow_PreviewMouseRightButtonDown" />
            <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>-->
        </Style>

    </UserControl.Resources>
    <DockPanel>
        <Expander Style="{StaticResource SimpleExpandDownStyle}"
                  IsExpanded="{Binding Source={x:Static self:Properties.Settings.Default}, Path=ToolbarExpandedTimersView, Mode=TwoWay}"
                  Focusable="False"
                  DockPanel.Dock="Top">
            <ToolBar>
                <Button x:Name="BtnNewTimer"
                        ToolTip="Create a new timer."
                        Style="{StaticResource TlbButtonsStyle}"
                        Click="BtnNewTimer_Click">
                    <Image
                        Source="{Binding ElementName=BtnNewTimer, Path=IsEnabled, Converter={StaticResource BtnImgConv}, ConverterParameter=/Images/Expiration.png, Mode=OneWay}"
                        Style="{StaticResource TlbImageStyle}" />
                </Button>
                <Button x:Name="BtnRemoveTimer"
                        ToolTip="Delete the selected timer."
                        Style="{StaticResource TlbButtonsStyle}"
                        Command="Delete"
                        CommandTarget="{Binding ElementName=this}">
                    <Image
                        Source="{Binding ElementName=BtnRemoveTimer, Path=IsEnabled, Converter={StaticResource BtnImgConv}, ConverterParameter=/Images/delete.png, Mode=OneWay}"
                        Style="{StaticResource TlbImageStyle}" />
                </Button>
            </ToolBar>
        </Expander>

        <DataGrid x:Name="DataTimers"
                  AutoGenerateColumns="False"
                  SelectionChanged="DataTimers_SelectionChanged"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserResizeRows="False"
                  ItemsSource="{Binding Path=TimerList}"
                  SelectedItem="{Binding Path=SelectedItem, Mode=OneWay}"
                  IsSynchronizedWithCurrentItem="True"
                  ItemContainerStyle="{StaticResource TimerDataGridRow}">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="New"
                              ToolTip="Create a new timer."
                              Click="BtnNewTimer_Click" />

                    <Separator />
                    <MenuItem Header="Delete"
                              ToolTip="Remove the timer from the network."
                              Command="Delete"
                              CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.SelectedItem.Item}"
                              InputGestureText="Del" />
                    <Separator />
                    <MenuItem Header="View frames..." Command="self:GlobalCommands.ViewAttachedFramessCmd"
                              ToolTip="Show the object-frames editor for the selected item."
                              InputGestureText="Shift+F6"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.SelectedItem.Item}">
                        <MenuItem.Icon>
                            <Image Source="/Images/Frame/Object_Frames_Enabled.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="View asset..." Command="self:GlobalCommands.ViewAttachedAssetsCmd"
                              ToolTip="Show the asset editor for the selected item."
                              InputGestureText="Shift+F5"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.SelectedItem.Item}">
                        <MenuItem.Icon>
                            <Image Source="/Images/Asset/objectAsset_Enabled.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="View code..."
                              Command="self:GlobalCommands.ViewCodeCmd"
                              ToolTip="Open and show a code editor for the selected item."
                              InputGestureText="Shift+F4"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.SelectedItem.Item}">
                        <MenuItem.Icon>
                            <Image Source="/Images/ViewCode_Enabled.png"
                                   Style="{StaticResource TlbImageStyle}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.InputBindings>
                <!--CanUserDeleteRows = false, datagrid captures delete key itself to handle this, we need to delete differently -->
                <KeyBinding Command="Delete" Key="Del" />
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=NeuronInfo.DisplayTitle}"
                                    Width="150">
                    <DataGridTextColumn.Header>
                        <TextBlock ToolTip="The name of the timer">Name</TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridCheckBoxColumn
                    Binding="{Binding Path=IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.Header>
                        <TextBlock ToolTip="When checked, the timer is running, otherwise it is inactive">Active</TextBlock>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>
                <DataGridTextColumn Binding="{Binding Path=Interval}"
                                    Width="150">
                    <DataGridTextColumn.Header>
                        <TextBlock
                            ToolTip="Determins the time, expressed in milliseconds, between 2 code runs of the timer">
                            Interval
                        </TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>


        <!--<ListView ItemsSource="{Binding ElementName=this, Path=TimerList}"
                BorderThickness="0"
                ItemContainerStyle="{StaticResource ContainerStyle}">
         <ListView.View>
            <GridView>
               <GridView.Columns>
                  <GridViewColumn Header="Name"
                                  CellTemplate="{StaticResource NameTemplate}"/>
                  <GridViewColumn Header="Active"
                                  CellTemplate="{StaticResource IsActiveTemplate}"/>
                  <GridViewColumn Header="Interval"
                                  CellTemplate="{StaticResource IntervalTemplate}"/>
               </GridView.Columns>
            </GridView>
         </ListView.View>
      </ListView>-->
    </DockPanel>
</UserControl>
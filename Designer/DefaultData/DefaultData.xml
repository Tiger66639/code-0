<?xml version="1.0"?>

<dictionary>
  <item>
    <key>
      <unsignedLong>250</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>250</ID>
        <Title>-</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Performs the arithmetic 'Minus' operator on a series or either IntNeurons, DoubleNeurons or time clusters</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron, DoubleNeuron or Time cluster</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron, DoubleNeuron or Time cluster, depending on the type of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>58</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>58</ID>
        <Title>!=</Title>
        <Category>Operators</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">The 'is different' operator.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>269</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>269</ID>
        <Title>!Contains</Title>
        <Category>Operators</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">The 'does not contain item' operator. It checks if the left side doesn't contain any item from the right side.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>249</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>249</ID>
        <Title>%</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Performs the arithmetic 'Modulus' operator on a series or either IntNeurons or DoubleNeurons</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron or DoubleNeuron</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron or DoubleNeuron, depending on the type of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>119</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>119</ID>
        <Title>&amp;&amp;</Title>
        <Category>Operators</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            Stands for the logical And operator '&amp;&amp;' used by
            <Run xml:space="preserve"> Bool</Run>Expression
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>248</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>248</ID>
        <Title>*</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Performs the arithmetic 'Multiply' operator on a series or either IntNeurons or DoubleNeurons.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron or DoubleNeuron</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron or DoubleNeuron, depending on the type of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>251</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>251</ID>
        <Title>/</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Performs the arithmetic 'Divide' operator on a series or either IntNeurons or DoubleNeurons</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron or DoubleNeuron</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron or DoubleNeuron, depending on the type of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>120</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>120</ID>
        <Title>||</Title>
        <Category>Operators</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            Stands for the logical Or operator '||' used by
            <Run xml:space="preserve"> Bool</Run>Expression
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>363</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>363</ID>
        <Title>|&lt;</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an input pattern to itself, to indicate that the pattern can only produce a valid match if the first word of the input is matched by the pattern (so the pattern needs to be at the start of the input).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>252</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>252</ID>
        <Title>+</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Performs the arithmetic 'Add' operator on a series or either IntNeurons, DoubleNeurons or time clusters</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron, DoubleNeuron or Time cluster</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron, DoubleNeuron or Time cluster, depending on the type of the arguments.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>54</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>54</ID>
        <Title>&lt;</Title>
        <Category>Operators</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">The 'is smaller then' operator.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>56</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>56</ID>
        <Title>&lt;=</Title>
        <Category>Operators</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">The 'is smaller or equal then' operator.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>53</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>53</ID>
        <Title>==</Title>
        <Category>Operators</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">The 'is equal to' operator.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>55</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>55</ID>
        <Title>&gt;</Title>
        <Category>Operators</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">The 'is bigger then' operator.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>364</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>364</ID>
        <Title>&gt;|</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an input pattern to itself, to indicate that the pattern can only produce a valid match if the last word of the input is matched by the pattern (so the pattern needs to be at the end of the input).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>57</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>57</ID>
        <Title>&gt;=</Title>
        <Category>Operators</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">The 'is bigger or equal then' operator.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>46</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>46</ID>
        <Title>Actions</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link between a neuron and a cluster containing expressions that will be executed when all the links of the neuron (except this one) have been solved.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>112</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>112</ID>
        <Title>ActionsForInput</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link between a sin and a Cluster.  The sin will link this cluster to each neuron it generates for input, with as meaning: Actions. This means that the cluster will be executed each time an input neuron from this sin has been solved.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>418</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>418</ID>
        <Title>Add</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Adds the list of arguments (minus the first one), to the first argument, which must be a variable.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Argumnets:</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">1: a variable (usually provided through a byRef)</Run>
            <LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">2 the first item that needs to be added to the variable.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>6</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>6</ID>
        <Title>Add Child</Title>
        <Category>Add</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Adds 1 or more neurons to a cluster.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>-1</Run>
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. The cluster to add an item to.
            <LineBreak />2. The first item to add to the cluster.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>5</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>5</ID>
        <Title>Add Info</Title>
        <Category>Add</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Searches for the link defined by the first 3 arguments and adds the next arguments to that link's info section if found (otherwise an error is logged).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>-1</Run>
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of link
            <LineBreak />2. To part of link<LineBreak />3. meaning part of link<LineBreak />4. the first neuron to add to info section.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>4</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>4</ID>
        <Title>Add Link</Title>
        <Category>Add</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Creates a link between 3 neurons.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of link
            <LineBreak />2. To part of link<LineBreak />3. meaning part of link
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>184</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>184</ID>
        <Title>Add split result</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Adds the specified neurons to the list of result values for a possible split with the current processor.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1: a list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>417</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>417</ID>
        <Title>AddAssignDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">performs a += on the 2 arguments.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Arguments:</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">1: the first double, which wil be incremented with the second arg.</Run>
            <LineBreak /><Run FontFamily="Segoe UI" FontSize="12">2: the amount to add to the first arg.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>416</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>416</ID>
        <Title>AddAssignInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>performs a += on the 2 arguments.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the first int, which wil be incremented with the second arg.
            <LineBreak />2: the amount to add to the first arg.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>430</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>430</ID>
        <Title>AddDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 + arg 2. Both have to be doubles</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first double<LineBreak />2: the second double</Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>429</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>429</ID>
        <Title>AddInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 + arg 2. Both have to be ints</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first int<LineBreak />2: the second int</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>414</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>414</ID>
        <Title>AddStoreDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Adds 2 doubles and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the double that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>399</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>399</ID>
        <Title>AddStoreInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Adds 2 ints and stores the result value in the first argumetn.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Arguments:</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">1: the int that will store the result</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">2: the first int to add</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">3: the second int to add</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>84</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>84</ID>
        <Title>Adjective</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a adjective.  </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>85</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>85</ID>
        <Title>Adverb</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a adverb.  </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>468</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>468</ID>
        <Title>AllLowerCase</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>357</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>357</ID>
        <Title>AllUppercase</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>This neuron is used to let a textsin know that the next word it receives should be capitalized completely.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>311</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>311</ID>
        <Title>Amount</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph xml:space="preserve">Used as the meaning for a  link from an asset item to an intNeuron or DoubleNeuron, to indicate the amount or nr of times that the asset item represents (as concrete knoweldge).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>436</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>436</ID>
        <Title>ApplyWeight</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Applies the current weight of the processor to all the neurons currently added as results for the processor.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0: none.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>123</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>123</ID>
        <Title>Argument</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Courier New" FontSize="13.3333333333333"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a 'ByRefExpression to the expression it needs to return a reference for.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>63</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>63</ID>
        <Title>Arguments</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Georgia" FontSize="16"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a Statement or ResultStatement to a NeuronCluster containing expressions that represent the argument values for the instruction that it will call.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>133</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>133</ID>
        <Title>ArgumentsList</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a a NeuronCluster that contains all the arguments for a statement or ResultStatement.  This cluster is similar to a code cluster and can therefor be executed.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>172</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>172</ID>
        <Title>Article</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run NumberSubstitution.CultureSource="User" xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is an atricle (the/a).  </Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>309</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>309</ID>
        <Title>Asset</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>344</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>344</ID>
        <Title>AssignAdd</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Represents the += symbol. For the asset/thesarurus do-patterns, this is used as an 'add' instruction.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>372</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>372</ID>
        <Title>AssignAddNot</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Represents the  !+=  symbol.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>98</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>98</ID>
        <Title>Assignment</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the Assignment type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>345</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>345</ID>
        <Title>AssignRemove</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Represents the -= symbol. For the asset/thesarurus do-patterns, this is used as an 'remove' instruction.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>310</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>310</ID>
        <Title>Attribute</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a  link from an asset item to an object, to indicate the type of attribute that the asset item represents (as concrete knoweldge).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>384</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>384</ID>
        <Title>AudioSin</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>296</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>296</ID>
        <Title>Avg</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Calculates the average on a series or either IntNeurons, DoubleNeurons or time clusters</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron, DoubleNeuron or Time cluster</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron, DoubleNeuron or Time cluster, depending on the type of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>115</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>115</ID>
        <Title>Awake</Title>
        <Category>Processor</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Awakes a sleeping processor so that it can continue processing. This is done by removing a neuron that represents the sleeping processor (previously returned by a Suspend instruction) from a cluster, this is why the arguments are the same as the RemoveChild instruction.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">This is an atomic operation.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster to remove an item from.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The item to remove from the cluster. This represents the processor that needs to be woken up.  Once the processor is awake, the neuron no longer represents the processor.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>154</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>154</ID>
        <Title>BeginTextBlock</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Send this neuron to the TextSin to indicate that a new textblock should be started.  If there was a previous textblock active, this is closed first and the event is triggered.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">For as long as there is a textblock active, all neurons sent to the textsin are accumulated into a string, only when either the 'EndTextBlock' or the 'BeginTextBlock' is sent, is the event for the string raised.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>445</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>445</ID>
        <Title>BlockedCall</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Executes the content of a cluster on a  new processor. The current processor waits until the call is done.<LineBreak />Any values that were placed on the values stack of the calling processor, are passed over to the newly created processor before it is started. When the blocked processor is done, any possible return values are copied to the calling processor.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">The cluster that contains the code which needs to be executed.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>142</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>142</ID>
        <Title>BlockedSolve</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Tries to solve one or more neurons neuron on a  new processor. The current processor waits until the neuron has been solved before it continues.<LineBreak />Any values that were placed on the values stack of the calling processor, are passed over to the newly created processor before it is started. When the blocked processor is done, any possible return values are copied to the calling processor.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                         NumberSubstitution.CultureSource="User">
                The first neuron that needs to be solved (will become the top of the stack, so executed first).
              </Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>39</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>39</ID>
        <Title>Blue</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meanig for a link from a solvable neuron to a Neuron to indicate the color value of blue found in the pixel (as build by a ImageSin for input).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>159</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>159</ID>
        <Title>BodyOfMember</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph xml:space="preserve">Used by the ReflectionSin as the meaning for a link from an output neuron to a cluster containing the body of the member (assembly/type/function).  </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>91</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>91</ID>
        <Title>BoolExpression</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the BoolExpression type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>219</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>219</ID>
        <Title>Break</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Stops executing the current conditional and continues with the next statement (if any).</Run>
          </Paragraph>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Argument count: </Run>
            <Run NumberSubstitution.CultureSource="User">0</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>43</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>43</ID>
        <Title>ByRefExpression</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Identifies the 'ByRefExpression' neuron type (used in the 'New' instruction for instance).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>361</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>361</ID>
        <Title>Calculate</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a rule to a do-patterns cluster. These do patterns will be executed when the rule is activated, before any of the conditions on the output are executed.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>223</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>223</ID>
        <Title>Call</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Executes the content of a cluster.  </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A cluster containging expressions.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>314</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>314</ID>
        <Title>CallSave</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Executes the content of a cluster while preserving the values of all the variables.  During the call, all variable values will be reset, except those specified in the arguments. After the call, all variable values are restored to their previous state.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 1)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A cluster containing expressions.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A reference to the first variable, whose values should be preserved. This is usually declared using a 'byref' to a variable.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>68</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>68</ID>
        <Title>Case</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Identifies the 'Case' conditional statement style where each conditional part is compared with the value of a 'case item' variable untill one is found that evaluates to true. This one's code will be executed.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>66</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>66</ID>
        <Title>CaseItem</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a conditional statement to a variable that is to be used as the item that contains the current value that needs to be compared to the conditional parts like a case statement.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>70</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>70</ID>
        <Title>CaseLooped</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the 'Looped' conditional statement style where the block of conditional parts is continuasly reevaluated for as long as 1 evaluates to true in the same manner as the 'Case' style is evaluated.  This one's code will be executed on each pass.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>176</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>176</ID>
        <Title>CcToS</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts a cluster containing TextNeurons (where each item represents a single character) into a single TextNeuron.  It is possible to convert multiple items at once.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more clusters containing only TextNeurons.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more TextNeurons: for each input item 1 output value.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>305</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>305</ID>
        <Title>Change child</Title>
        <Category>Change</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Changes the child of a cluster to a new child.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>5
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            1. parent to change children for<LineBreak />2. old child
            <LineBreak />3. new child
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>304</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>304</ID>
        <Title>Change info</Title>
        <Category>Change</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Changes an item on the info list of a link. When the replace failed because the old item wasn't found, false is returned. When the operation succeeds, true is returned.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>5
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            1. From part of link<LineBreak />2. To part of link
            <LineBreak />3. meaning part of link<LineBreak />4. old item on the info list (needs to be replaced)
            <LineBreak />5. new item on the info list (will replace the old).
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>29</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>29</ID>
        <Title>Change link From</Title>
        <Category>Change</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Changes a link so that it starts from a new neuron ('From' part).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of link
            <LineBreak />2. To part of link<LineBreak />3. meaning part of link<LineBreak />4. new From part of link.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>30</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>30</ID>
        <Title>Change link meaning</Title>
        <Category>Change</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Changes a link so that it has a new meaning ('Meaning' part).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of link
            <LineBreak />2. To part of link<LineBreak />3. meaning part of link<LineBreak />4. new meaning part for link.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>28</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>28</ID>
        <Title>Change link To</Title>
        <Category>Change</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Changes a link so that it points to a new neuron ('To' part).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>From part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>meaning part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>new To part of link.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>306</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>306</ID>
        <Title>Change parent</Title>
        <Category>Change</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Changes the parent of an item to a new parent. When the replace failed because the old item wasn't found, false is returned. When the operation succeeds, true is returned.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>5
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            1. child to change parents for<LineBreak />2. old parent
            <LineBreak />3. new parent
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>240</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>240</ID>
        <Title>Child count</Title>
        <Category>Count</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the the number of children in a cluster.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster for which to return the number of children.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User" />
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>77</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>77</ID>
        <Title>Children</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Identifies that the 'Children' list of a cluster should be used in a 'Contains' check done by a BoolExpression.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>175</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>175</ID>
        <Title>CiToS</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Converts a cluster containing int neurons into a string, where each int neuron represents the ascii value of a character. It is possible to convert multiple items at once.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more clusters containing only int neurons.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more TextNeurons: for each input item 1 output value.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>224</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>224</ID>
        <Title>Clear</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Removes the content of a variable</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">The variable(s) to reset.  This should be passed along using a ByRef expression or as the content of another variable.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>150</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>150</ID>
        <Title>Clear children</Title>
        <Category>Clear</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Removes all the children from a cluster.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster for which to remove all the children.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>151</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>151</ID>
        <Title>Clear info</Title>
        <Category>Clear</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Removes all the info neurons that are attached to a link.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>3</Run>
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>From part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Meaning part of the link.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>152</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>152</ID>
        <Title>Clear links in</Title>
        <Category>Clear</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Removes all the incomming links from a neuron.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron for which to remove the links.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>153</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>153</ID>
        <Title>Clear links out</Title>
        <Category>Clear</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Removes all the outgoing links from a neuron.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron for which to remove the links.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>186</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>186</ID>
        <Title>Clear split results</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Removes all the neurons from the list of result values for a possible split with the current processor.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1: a list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>241</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>241</ID>
        <Title>Cluster count</Title>
        <Category>Count</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the the number of clusters that own the argument as a child.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron for which to return the number of clusters to which it is a child.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>121</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>121</ID>
        <Title>Clusters</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Identifies that the 'ClusteredBy' list of a neuron should be used in a 'Contains' check done by a BoolExpression.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>48</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>48</ID>
        <Title>Code</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a neurron cluster that contains Expressions and which can be executed.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>366</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>366</ID>
        <Title>CollectSpaces</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as a link from a parsed variable to itself, to indicate that the variable should also collect all the spaces between the words that it collects.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>274</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>274</ID>
        <Title>Complement</Title>
        <Category>Set operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Returns the complement on the content of the 2 variables that were passed along as arguments.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A varaible, usually passed along using a 'ByRef' that represents the universe (the complete set of items).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A varaible, usually passed along using a 'ByRef' which represents the complemented set.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>All the items in var 1  that aren't in var 2.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>174</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>174</ID>
        <Title>Complementizer </Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run NumberSubstitution.CultureSource="User" xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a complementizer (in dutch: dat/of).  </Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>11</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>11</ID>
        <Title>Complete sequence</Title>
        <Category>Arithmetic</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Renders new numbers based on the specified input sequence.  This is a difference engine.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. First number, can be a doubleNeuron or an IntNeuron, determins which type the 2 other numbers must be.
            <LineBreak />2. Second number<LineBreak />3. Third number.<LineBreak />4. Number of items that need to be generated.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>the list of generated numbers.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>137</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>137</ID>
        <Title>CompoundWord</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Courier New" FontSize="13.3333333333333"
                     NumberSubstitution.CultureSource="User">
            <Span xml:space="preserve">used as the linkmeaning for cluster that contains </Span>
            <Run Foreground="#FF808080">TextNeuron</Run>s to build a compound word (a word that actually exists out of combining several words) ex: doppler effect, piano grande,...
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>47</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>47</ID>
        <Title>Condition</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a conditional part to it's condition or for a link from a conditional statement and the cluster containing all of it's conditional parts.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>92</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>92</ID>
        <Title>ConditionalPart</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the ConditionalPart type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>93</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>93</ID>
        <Title>ConditionalStatement</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the ConditionalStatement type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>107</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>107</ID>
        <Title>Conjunction</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a conjunction.  </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>59</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>59</ID>
        <Title>Contains</Title>
        <Category>Operators</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve"><Span>The 'Contains' operator used by </Span>BoolExpression. It checks if the left side contains the right side. </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User" />
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>270</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>270</ID>
        <Title>Contains all children</Title>
        <Category>Contains</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns true if the first argument (which must be a cluster), contains all the following arguments.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>one or more neurons that should be clustered by argument 1. When non are specified, false is returned.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>290</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>290</ID>
        <Title>Contains links in</Title>
        <Category>Contains</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns true if the first argument, contains any incoming links with the specified neurons as meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron to check the incoming links for.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>one or more meaning id's that needs to be found.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>291</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>291</ID>
        <Title>Contains links out</Title>
        <Category>Contains</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns true if the first argument, contains any outgoing links with the specified neurons as meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron to check the outgoing links for.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>one or more meaning id's that needs to be found.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>379</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>379</ID>
        <Title>ContainsChildren</Title>
        <Category>Contains</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns true if the first argument (which must be a cluster), contains any of the following arguments.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>one or more neurons that should be clustered by argument 1. When non are specified, false is returned.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>35</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>35</ID>
        <Title>ContainsDouble</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Georgia" FontSize="16"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meanig for a link from a solvable neuron to a DoubleNeuron to indicate the presence of double value (as build by a TextSin for input).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>36</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>36</ID>
        <Title>ContainsInt</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Georgia" FontSize="16"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meanig for a link from a solvable neuron to an IntNeuron to indicate the presence of an integer value (as build by a TextSin for input).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>33</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>33</ID>
        <Title>ContainsWord(in)</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Georgia" FontSize="16"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meanig for a link from a solvable neuron to a TextNeuron to indicate the presence of a word that was found in the dictionary (as build by a TextSin for input).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>362</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>362</ID>
        <Title>Context</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a link from a bot to an outputs cluster (no code, no conditions), to indicate how to calculate the context values for callbacks like 'Attribute'. </Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>218</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>218</ID>
        <Title>Continue</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Stops solving the current call frame (conditional branch, call, link) and continues with the previous one, if any.  This is primarely used to continue a loop.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>346</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>346</ID>
        <Title>ConversationLogHistory</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>337</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>337</ID>
        <Title>ConversationStarts</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">This neuronCluster contains all the output statements which should be used as openings to start the conversation with.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>196</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>196</ID>
        <Title>Copy</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>This neuron can be attached to a global (with the 'SplitReaction' neuron as meaning) to indicate that the contents of the global should be copied when the processor performs a split.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>14</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>14</ID>
        <Title>Copy children</Title>
        <Category>Copy/move</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Copies the children of a cluster over to another cluster.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>5
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. The neuron cluster to copy to.
            <LineBreak />2. The index (IntNeuron) at which to start copying to.<LineBreak />3. The neuron cluster to copy from.
            <LineBreak />4. The index (IntNeuron) to start copying from, use the 'Empty' neuron neuron to indicate 0
            <LineBreak />5. The last index (IntNeuron) to copy over, use the 'Empty' neuron (99) to indicate Children.Count.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>15</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>15</ID>
        <Title>Copy info</Title>
        <Category>Copy/move</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Copies info data from one link to another.  Links are defined using From/To/Meaning.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>9
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">1. Target from<LineBreak />2. Target  to<LineBreak />3. Target meaning<LineBreak />4. index (IntNeuron) to start inserting at target.  use the 'Empty' neuron to indicate to add at the end.<LineBreak />5. Source from<LineBreak />6. Source to<LineBreak />7. Source meaning<LineBreak />8. The index (IntNeuron) to start copying from, use the 'Empty' neuron to indicate 0<LineBreak />9.  The last index (IntNeuron) to copy over, use the 'Empty' neuron (99) to indicate Children.Count.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>10</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>10</ID>
        <Title>Count</Title>
        <Category>var operations</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the number of items (as an IntNeuron) that were specified as arguments. This is useful to find out how many items a var stores.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve"><Run FontWeight="Bold">Argument count: </Run>-1 (at least 1, more allowed). </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Arguments: </Run>any type of neuron is allowed.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>100</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>100</ID>
        <Title>CurrentFrom</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">This variable provides access to the current from part of the link that is being executed (if any).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>103</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>103</ID>
        <Title>CurrentInfo</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">This variable provides access to the current Info part of the link that is being executed (if any).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>102</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>102</ID>
        <Title>CurrentMeaning</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">This variable provides access to the current meaning part of the link that is being executed (if any).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>114</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>114</ID>
        <Title>CurrentSin</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">This variable provides access to the sin that triggered the activity in the current context (if any).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>101</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>101</ID>
        <Title>CurrentTo</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">This variable provides access to the current To part of the link that is being executed (if any).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>146</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>146</ID>
        <Title>DecreaseWeight</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Decreases the weight of the processor with the specified amount.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A DoubleNeuron that defines how much the weight should be changed.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>453</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>453</ID>
        <Title>DecreaseWeightOf</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Decreases the weight of a single neuron in the context of a processor with the specified amount.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A DoubleNeuron that defines how much the weight should be changed.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>410</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>410</ID>
        <Title>Decrement</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Decrements the value of every int or double in the argument list</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Arguments: 1 or more ints or doubles (can be mixed)</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>365</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>365</ID>
        <Title>Delay</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a parsed-do pattern to itself. It indicates that the execution of the do pattern should be delayed untill everything else has been processed.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>16</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>16</ID>
        <Title>Delete</Title>
        <Category>Neurons</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Permanently removes the neurons.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve"><Run FontWeight="Bold">Argument count: </Run>-1 </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Arguments: </Run>any type of neuron is allowed.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>434</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>434</ID>
        <Title>DeleteFrozen</Title>
        <Category>Neurons</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Deletes all the currently frozen neurons. This doesn't have to be called, it is done automatically when the process is done, but it can be useful to perform this manually to release presure on memory usage.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>173</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>173</ID>
        <Title>Determiner</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run NumberSubstitution.CultureSource="User" xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a determiner  (in dutch: elke/deze/welke).  </Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>261</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>261</ID>
        <Title>Distinct</Title>
        <Category>Set operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Returns a list of unique neurons, rendered from the input list, so all the duplicates are dropped.</Paragraph>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User">Argument count: -1</Run>
          </Paragraph>
          <Paragraph><Run FontWeight="Bold">Returns:</Run> A subset of the input list, where each neuron is only present 1 time.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>424</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>424</ID>
        <Title>DivDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 / arg 2. Both have to be doubles</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first double<LineBreak />2: the second double</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>423</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>423</ID>
        <Title>DivInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 / arg 2. Both have to be ints</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first int<LineBreak />2: the second int</Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>463</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>463</ID>
        <Title>DivStoreDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>divides 2 doubles and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the double that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>461</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>461</ID>
        <Title>DivStoreInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>divides 2 ints and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the int that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>350</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>350</ID>
        <Title>DoAfterStatement</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">A cluster that contains do patterns that should be executed after each input/output processing.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>359</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>359</ID>
        <Title>DoOnStartup</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>This cluster contains the statements that should be executed when the network is started.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>340</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>340</ID>
        <Title>DoPatterns</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster that contains the action-patterns of an output section.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Also used as the meaning for a link from an output section and the cluster with this meaning.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>88</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>88</ID>
        <Title>DoubleNeuron</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the DoubleNeuron type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>177</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>177</ID>
        <Title>DToI</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts a DoubleNeuron into an IntNeuron.  It is possible to convert multiple items at once.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more DoubleNeurons.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more IntNeurons: for each input item 1 output value.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>178</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>178</ID>
        <Title>DToS</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts a DoubleNeuron into an TextNeuron.  It is possible to convert multiple items at once.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more DoubleNeurons.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more TextNeurons: for each input item 1 output value.</Run>
          </Paragraph>
          <Paragraph />
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>195</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>195</ID>
        <Title>Duplicate</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">This neuron can be attached to a global (with the 'SplitReaction' neuron as meaning) to indicate that the contents of the global should be duplicated when the processor performs a split.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>17</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>17</ID>
        <Title>Duplicate</Title>
        <Category>Neurons</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Creates a duplicate (copy) of the neuron but with a unique id.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">1. The neuron to duplicate.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, of the same type as the input value, with the same links, children and/or value but with a new ID.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>99</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>99</ID>
        <Title>Empty</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Represents the 'Empty' state. This neuron is returned by some instructions to indicate an error state or some other kind invalid state.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>376</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>376</ID>
        <Title>EndsWith</Title>
        <Category>strings</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Returns true if the textvalue of the first argument (which must be a textneuron), ends with the second arg (which also must be textneuron), otherwise, false is returned. When no items are specified, false is returned.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>a texneuron who's end needs to be checked</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>a textneuron that defines which end should be found.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>155</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>155</ID>
        <Title>EndTextBlock</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Send this neuron to the TextSin to indicate that an existing textblock should be closed.  This will trigger the event.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">For as long as there is a textblock active, all neurons sent to the textsin are accumulated into a string, only when either the 'EndTextBlock' or the 'BeginTextBlock' is sent, is the event for the string raised.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>31</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>31</ID>
        <Title>EntryPoints</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            Used as the meaning for the link between a sin and it's entrypoint neurons (a cluster containing neurons which serve as starting values, like the audio frequencies of an audio sin).
            <LineBreak />When executed, it will look for an 'input actions' cluster attached to the sin and execute this code.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>32</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>32</ID>
        <Title>EntryPointsCreated</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meanig for a link between a sin and a cluster that will be executed whenever the entrypoints have been recreated so that the network can build further links based on these entry points.  For instance, a Bitmap Sin can build a matrix of entry points representing pixels.  The cluster to which the link with this meaning points to, might build connections between these 'pixel' neurons and visual data stored in the network.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>118</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>118</ID>
        <Title>Error</Title>
        <Category>Processor</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Adds a error entry to the brain's log.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>Optionally the first neuron to send to the log, followed by any others.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>389</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>389</ID>
        <Title>Evaluate</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a rule to a code cluster used for evaluating the rule's possibility.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>170</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>170</ID>
        <Title>Exclude</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Frame elements link to this neuron to indicate they are of 'thematic' importance: rare?</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>122</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>122</ID>
        <Title>Execute</Title>
        <Category>Processor</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Executes an expression.  When a variable contains a reference to another expression, you can 'call' that expression through this instruction.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An expression that needs to be executed (passed along by passing a var, or a reference to an expression).</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User" />
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>148</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>148</ID>
        <Title>Exit Neuron</Title>
        <Category>Processor</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Stops solving the current neuron and continues with the next one on the stack of there is any.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>131</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>131</ID>
        <Title>ExitLink</Title>
        <Category>Processor</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Stops solving this link and continues with the next link on the same neuron if there is any.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>149</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>149</ID>
        <Title>ExitSolve</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Stops the current translation process completly.  If the processor was part of a split, it's splitresults will be added to the final split result.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>113</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>113</ID>
        <Title>ExpressionsBlock</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the ExpressionsBlock type.  Used by the 'New' instruction.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>61</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>61</ID>
        <Title>False</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Represents the boolean 'False' value as used by the BoolExpression.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>280</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>280</ID>
        <Title>Filter</Title>
        <Category>Set operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Runs every argument (after the filter), through a filter, to determin if it can be included in the result list or not.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A reference to the variable to use in the filter condition (this is usually a ByRef or another var containing a variable)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The filter condition (this is usually a ByRef or variable containing a BoolExpression). It should return True or False.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The first item that needs to be filtered.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>The var of argument 1 can be used in the condition (argument 2) to check each item.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A sub list of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>216</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>216</ID>
        <Title>First</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the first item of the argument list. This is useful to retrieve the first item of a variable.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Arguments: </Run>any type of neuron is allowed.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single Neuron or nothing when there are no items in the argument list.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>356</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>356</ID>
        <Title>FirstUppercase</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>This neuron is used to let a textsin know that the next word it receives should have it's first letter capitalized.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>293</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>293</ID>
        <Title>FloatingFlowKeepsData</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from from a flow to 'true' or 'false' to indicate that the floating flow should retain the data in the result set. Normally, the result of a floating flow is dropped from the final result. Use a link with this meaning to override this default behaviour.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>239</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>239</ID>
        <Title>FloatingFlowSplits</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for al ink from a looped flow item-conditional to '</Run>
            <Run FontFamily="Segoe UI" FontStyle="Italic" FontSize="12">True</Run>
            <Run FontFamily="Segoe UI" FontSize="12">' (or '</Run>
            <Run FontFamily="Segoe UI" FontStyle="Italic" FontSize="12">False</Run>
            <Run FontFamily="Segoe UI" FontSize="12">') to indicate that the loop stops collecting conditional parts if a floating flow is encountered.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>188</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>188</ID>
        <Title>Flow</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a NeuronCluster that represents a flow.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>222</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>222</ID>
        <Title>FlowIsFloating</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used as the 'to' part for a link with meaning 'flowtype', from a flow, to indicate that the flow is floating and destructive: it can appear anywhere in a stream, but other flows and conditional parts will be broken up (end) when this type of floating flow is found (to prevent this, use 'FlowIsNonDesctructiveFloating'.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>292</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>292</ID>
        <Title>FlowIsNonDestructiveFloating</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the 'to' part for a link with meaning 'flowtype', from a flow, to indicate that the flow is floating and non destructive: this type of flow won't break the middle of a conditional part, so 2 statics in sequence may have a floating flow in between. </Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Condiionals can determine themsevles how they handle the presence of a float, but when this value is set, it overrules that of the conditional: the flow result will be dropped, so the conditional can't see a floating flow.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>189</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>189</ID>
        <Title>FlowItemConditional</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a  neuron-cluster that represents a loop or option in a flow.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>190</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>190</ID>
        <Title>FlowItemConditionalPart</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph xml:space="preserve">Used as the meaning for a  neuron-cluster that represents a  part of loop or option in a flow.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>191</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>191</ID>
        <Title>FlowItemIsLoop</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a FlowItemConditional (NeuronCluster) to 'True' or 'False' indicating that the conditional is a loop (true) or an option (false).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>192</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>192</ID>
        <Title>FlowItemRequiresSelection</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph xml:space="preserve">Used as the meaning for a link from a FlowItemConditional (NeuronCluster) to 'True' or 'False' indicating that a selection between one of the parts is required, the conditional can't be skipped.  This reference is only useful if there are multiple conditional parts.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>294</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>294</ID>
        <Title>FlowType</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a flow to 'FlowIsFloating' or 'FlowIsNonDestructiveFloating' to indicate the type of floating flow it is. When this link is present, the flow is always floating.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>71</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>71</ID>
        <Title>ForEach</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the 'Looped' conditional statement style where only 1 conditional part is allowed for which the condition is a cluster.  The code of the part will be executed for each child in the cluster.  On each run, the variable found through the 'LoopItem' link will contain the child to use on the iteration.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>162</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>162</ID>
        <Title>Frame</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster that contains frame elements, which identify the parts that need to be present in the frame. A frame defines all the required required parts of an information block.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>78</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>78</ID>
        <Title>FrameElementAllowMulti</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a frame element to 'true' or 'false' (== no link) to indicate that the frame element can have multiple result items in the flow.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>166</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>166</ID>
        <Title>FrameElementId</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph Margin="0,0,0,0" FontFamily="Courier New" FontSize="13.3333333333333">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an 'object' cluster to an int indicating the Id of the frame element that corresponds to the object.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>289</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>289</ID>
        <Title>FrameElementResultType</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning fro a link from a frame element to a neuron, to indicate that which neuron should be used as cluster-meaning for the result of the frame element.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>167</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>167</ID>
        <Title>FrameImportance</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" FontFamily="Courier New" FontSize="13.3333333333333">
            <Run FontFamily="Segoe UI" FontSize="12">used as the meaning for a link from an 'object' cluster to either 'Frame_Core', 'Frame_peripheral' or 'Frame_extra_thematic' to indicate the importance of a frame element within the set of elements for the frame.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>312</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>312</ID>
        <Title>Frames</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an object to a cluster that contains frames. also used as the meaning for the cluster that contains those frames.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>165</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>165</ID>
        <Title>FrameSequence</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run>Used as the meaning for a cluster that represents a single 'known' sequence for a Frame cluster.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>233</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>233</ID>
        <Title>FrameSequenceItemValue</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a frame sequence item to the value it represents (the frame element, or a general purpose item).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>164</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>164</ID>
        <Title>FrameSequences</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" FontFamily="Courier New" FontSize="13.3333333333333">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster (and as the meaning for the link between a frame and this cluster) that</Run>
          </Paragraph>
          <Paragraph Margin="0,0,0,0" FontFamily="Courier New" FontSize="13.3333333333333">
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">contains clusters which represent 'known sequences'.  Each cluster in this list should have a meaning of 'FrameSequence'.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>229</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>229</ID>
        <Title>Freeze</Title>
        <Category>Neurons</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Attaches the specified neurons to the currently running processor so that, when the processor dies out (after all sub splits have been solved), the frozen neurons will be deleted when they haven't changed since they were last frozen.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>the first item to be frozen.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run><Run>nothing</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>370</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>370</ID>
        <Title>Get all incomming</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns all the 'from' neurons of the links </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The to part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
          <Paragraph />
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>371</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>371</ID>
        <Title>Get all outgoing</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns all the 'to' neurons of the links </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The from part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>283</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>283</ID>
        <Title>Get at</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the item at the specified index of an argument list. The index starts at 1 since the first element is the int neuron.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>an IntNeuron that defines the index of the item that needs to be returned (starts at 1).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The first item of the list.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>256</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>256</ID>
        <Title>Get child at</Title>
        <Category>Get at</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the child at the specified index of a neuron cluster.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The index of the item to return.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>124</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>124</ID>
        <Title>Get children</Title>
        <Category>Get</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns all the children of a NeuronCluster.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A NeuronCluster for which to return all the children.</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A list of neurons which are all children of the neuron cluster.  They are returned in the order as they are stored in the cluster. If there are no children, an empty list is returned (so no 'empty' neuron)</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>228</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>228</ID>
        <Title>Get children filtered</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns all the children of a cluster that meat the specified filter condition. </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster for which to return the children.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A reference to the variable to use in the filter condition (this is usually a ByRef or another var containing a variable)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The filter condition (this is usually a ByRef or variable containing a BoolExpression). It should return True or False.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>Each possible child is first assigned to the variable (arg 2) before calling the filter condition (arg 3) which should return true if the child should be included in the result or false otherwise.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of Neurons(can have 0 elements).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>128</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>128</ID>
        <Title>Get children of Type X</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns all the children of a specified type in a NeuronCluster.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster for which to return the children.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The type that all returned children must have.</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Possible values for the children are:</Paragraph>
          <List MarkerStyle="Disc" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>Neuron (86)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>NeuronCluster (87)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>DoubleNeuron (88)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>IntNeuron (89)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>TextNeuron (90)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>BoolExpression (91)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ConditionalPart (92)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ConditionalStatement (93)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ResultStatement (95)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>SearchExpression (99)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Statement (94)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Variable (97)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Global (196)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Assignment (98)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ExpressionsBlock (113)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ByRefExpression (43)</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons (can have 0 elements).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>318</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>318</ID>
        <Title>Get children range</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns a range of children of a cluster. </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster for which to return the children.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>An IntNeuron representing the lower boundery of the range.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>An IntNeuron representing the nr of items in the range.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of Neurons(can have 0 elements).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>254</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>254</ID>
        <Title>Get cluster at</Title>
        <Category>Get at</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the parent cluster at the specified index of a neuron's parents list.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The index of the item to return.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>129</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>129</ID>
        <Title>Get cluster meaning</Title>
        <Category>Get</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Returns the meaning of a NeuronCluster. </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A NeuronCluster for which to return the meaning</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>126</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>126</ID>
        <Title>Get clusters</Title>
        <Category>Get</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns all the clusters to which a neuron belongs.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron for which all the clusters will be returned to which it belongs.</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons who all contain the argument as a child.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>227</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>227</ID>
        <Title>Get clusters filtered</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns all the clusters that meat the specified filter condition and own the specified neuron. </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron for which to return the clusters that own it.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A reference to the variable to use in the filter condition (this is usually a ByRef or another var containing a variable)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The filter condition (this is usually a ByRef or variable containing a BoolExpression). It should return True or False.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>Each possible cluster is first assigned to the variable (arg 2) before calling the filter condition (arg 3) which should return true if the cluster should be included in the result or false otherwise.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of Clusters(can have 0 elements).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>193</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>193</ID>
        <Title>Get clusters with meaning X</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns all the clusters with a specified meaning that own a specified neuron.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron for which to return the clusters that own it.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The type that all returned clusters must have.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of Clusters(can have 0 elements).
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>444</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>444</ID>
        <Title>Get Common In</Title>
        <Category>Get common</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Returns all the neurons that have outgoing links, point to the specified neurons. Each neuron that is returned must link to all the arguments (order is free).</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The first neuron for which to return the neurons it has links from (incomming links).</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>443</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>443</ID>
        <Title>Get Common Out</Title>
        <Category>Get common</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Returns all the neurons that have incomming links from the specified neurons. Each neuron that is returned must link to all the arguments (order is free).</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The first neuron for which to return the neurons it points to (outgoing links).</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>316</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>316</ID>
        <Title>Get common parents</Title>
        <Category>Get common</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Returns all the clusters that own the specified neurons. Each cluster that is returned must own all the arguments as children (order is free).</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The first neuron for which to return the owning clusters.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neuronclusters.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>315</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>315</ID>
        <Title>Get common parents filtered</Title>
        <Category>Get common</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Returns all the clusters taht own the specified neuron, filtered using the specified filter code. Each cluster that is returned must own al the arguments as children (order is free, but can further be specified in the filter part).</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A reference to the variable to use in the filter condition (this is usually a ByRef or another var containing a variable)A reference to the variable to use in the filter condition (this is usually a ByRef or another var containing a variable)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The filter condition (this is usually a ByRef or variable containing a BoolExpression). It should return True or False.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The first neuron for which to return the common parents.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>Each possible cluster is first assigned to the variable (arg 1) before calling the filter condition (arg 2) which should return true if the cluster should be included in the result or false otherwise.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of Clusters(can have 0 elements).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>317</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>317</ID>
        <Title>Get common parents with meaning</Title>
        <Category>Get common</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run NumberSubstitution.CultureSource="Text">Returns all the clusters that own the specified neurons, where all the clusters have the specified meaning. Each cluster that is returned must own all the arguments as children (order is free).</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The meaning that the clusters must have.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The first neuron for which to return the common parents from.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of Clusters(can have 0 elements).
          </Paragraph>
          <Paragraph /><Paragraph /><Paragraph />
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>200</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>200</ID>
        <Title>Get first child</Title>
        <Category>Get first</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the first child of a neuron cluster.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>1</Run>
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron cluster.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>127</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>127</ID>
        <Title>Get first cluster</Title>
        <Category>Get first</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the first NeuronCluster that owns the specified neuron and has the speciried meaning.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron that should be a child of the cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning of the cluster.</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single NeuronCluster or nothing when not found.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>198</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>198</ID>
        <Title>Get first in</Title>
        <Category>Get first</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of the first link found in the incomming list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>To part of link (or the neuron who's incomming links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>199</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>199</ID>
        <Title>Get first info</Title>
        <Category>Get first</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the first neuron found on the link defined by the following arguments.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">From part of link </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>104</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>104</ID>
        <Title>Get first out</Title>
        <Category>Get first</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the neuron on the other end of the first link found in the outgoing list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>From part of link (or the neuron who's outgoing links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>253</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>253</ID>
        <Title>Get in at</Title>
        <Category>Get at</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the incomming link at the specified index of a neuron's incomming links list.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The index of the item to return.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>264</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>264</ID>
        <Title>Get incomming</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns all the 'from' neurons of the links that end in the specified neuron, and have a specified meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The to part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>262</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>262</ID>
        <Title>Get info</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns all the neurons that are attached as 'info' to a link.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The from part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The To part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>255</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>255</ID>
        <Title>Get info at</Title>
        <Category>Get at</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the outgoing link at the specified index of a neuron's outgoing links list.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The index of the item to return.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>268</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>268</ID>
        <Title>Get info filtered</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns all the neurons that are attached as 'info' to a link and which meat the specified filter condition. </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>5</Run>
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The from part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The To part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A reference to the variable to use in the filter condition (this is usually a ByRef or another var containing a variable)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The filter condition (this is usually a ByRef or variable containing a BoolExpression). It should return True or False.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>217</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>217</ID>
        <Title>Get Last</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the last item of the argument list. This is useful to retrieve the last item of a variable.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Arguments: </Run>any type of neuron is allowed.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single Neuron or nothing when there are no items in the argument list.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>201</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>201</ID>
        <Title>Get last child</Title>
        <Category>Get last</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the last child of a neuron cluster.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron cluster.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>202</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>202</ID>
        <Title>Get last cluster</Title>
        <Category>Get last</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the last NeuronCluster that owns the specified neuron and has the speciried meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron that should be a child of the cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning of the cluster.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single NeuronCluster or nothing when not found.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>204</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>204</ID>
        <Title>Get last in</Title>
        <Category>Get last</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of the last link found in the incomming list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>To part of link (or the neuron who's incomming links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>203</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>203</ID>
        <Title>Get last info</Title>
        <Category>Get last</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the last neuron found on the link defined by the following arguments.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">From part of link </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph />
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>205</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>205</ID>
        <Title>Get last out</Title>
        <Category>Get last</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of the last link found in the outgoing list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>From part of link (or the neuron who's outgoing links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>369</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>369</ID>
        <Title>Get link meaning</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns all the 'meaning' neurons of the links that meat the specified filter condition. </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The from part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The to part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>206</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>206</ID>
        <Title>Get next child</Title>
        <Category>Get next</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns the next child of a neuron cluster. </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The previous item. Note that the first encounter of this item in the list will be used. </Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>207</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>207</ID>
        <Title>Get next cluster</Title>
        <Category>Get next</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the next NeuronCluster that owns the specified neuron and has the speciried meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron that should be a child of the cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning of the cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The cluster that should be just in front of the result. Note that the first encounter of this item in the list will be used.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single NeuronCluster or nothing when not found.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>209</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>209</ID>
        <Title>Get next in</Title>
        <Category>Get next</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of the next link found in the incomming list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>To part of link (or the neuron who's incomming links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>From part of previous link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>208</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>208</ID>
        <Title>Get next info</Title>
        <Category>Get next</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the next neuron found on the link defined by the following arguments.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">From part of link </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The previous item. Note that the first encounter of this item in the list will be used.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph />
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>210</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>210</ID>
        <Title>Get next out</Title>
        <Category>Get next</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of the next link found in the outgoing list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>From part of link (or the neuron who's outgoing links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of previous link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>257</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>257</ID>
        <Title>Get out at</Title>
        <Category>Get at</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the outgoing link at the specified index of a neuron's outgoing links list.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The index of the item to return.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>263</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>263</ID>
        <Title>Get outgoing</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns all the 'to' neurons of the links that meat the specified filter condition. </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2+
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The from part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The first meaning of the link. Can be followed by other possible meanings</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>211</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>211</ID>
        <Title>Get prev child</Title>
        <Category>Get prev</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the prev child of a neuron cluster.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The next item</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>215</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>215</ID>
        <Title>Get prev cluster</Title>
        <Category>Get prev</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the prev NeuronCluster that owns the specified neuron and has the speciried meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron that should be a child of the cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning of the cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The cluster that should be just behind the result.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single NeuronCluster or nothing when not found.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>213</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>213</ID>
        <Title>Get prev in</Title>
        <Category>Get prev</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of the prev link found in the incomming list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>To part of link (or the neuron who's incomming links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>From part of next link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>212</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>212</ID>
        <Title>Get prev info</Title>
        <Category>Get prev</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the prev neuron found on the link defined by the following arguments.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">From part of link </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The next item.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>214</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>214</ID>
        <Title>Get prev out</Title>
        <Category>Get prev</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of the prev link found in the outgoing list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>From part of link (or the neuron who's outgoing links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of next link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>334</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>334</ID>
        <Title>Get random</Title>
        <Category>var operations</Category>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>333</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>333</ID>
        <Title>Get random child</Title>
        <Category>Get Random</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns a random child of a neuron cluster.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron cluster.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>330</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>330</ID>
        <Title>Get random clustered-by</Title>
        <Category>Get Random</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns a random NeuronCluster that owns the specified neuron and has the specified meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron that should be a child of the cluster.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning of the cluster.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single NeuronCluster or nothing when not found.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>332</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>332</ID>
        <Title>Get random incomming</Title>
        <Category>Get Random</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of a random link found in the incomming list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>To part of link (or the neuron who's incomming links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>329</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>329</ID>
        <Title>Get random info</Title>
        <Category>Get Random</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns a random neuron found on the link defined by the following arguments.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">From part of link </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>331</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>331</ID>
        <Title>Get random outgoing</Title>
        <Category>Get Random</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the neuron on the other end of a random link found in the outgoing list of the first argument with the specified meaning or nothing.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>From part of link (or the neuron who's outgoing links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Returns: </Run>A single neuron or nothing when not found. </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>433</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>433</ID>
        <Title>Get range</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns a range of value for a variable. </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An int representing the lower boundery of the range.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>An int representing the nr of items in the range.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the first item of the range (can be a variable).</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of Neurons(can have 0 elements).
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>320</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>320</ID>
        <Title>Get split count</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Gets the number of processors involved in the current split.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>187</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>187</ID>
        <Title>Get Split results</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns all the neurons that are currently selected as being the result for a split with this processor, sorted on their weight, with the heaviest neuron at the front.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User" xml:space="preserve">a list of Neurons, can be  empty.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>456</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>456</ID>
        <Title>GetCharAr</Title>
        <Category>strings</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>gets the character at the specified position.</Paragraph><Paragraph>input:</Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph>a string</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>an integer that specifies the index of the character to retrieve.<LineBreak /></Paragraph>
            </ListItem>
          </List>
          <Paragraph>return: a string that represents the character.</Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>267</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>267</ID>
        <Title>GetInFiltered</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns all the 'from' neurons of the links that end in the specified neuron, and have a specified meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The to part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A reference to the variable which will hold the meaning of the link to evaluate (this is usually provided through a ByRef or another var containing a variable).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A reference to the variable which will hold the 'from' part of the link to evaluate (this is usually provided through a ByRef or another var containing a variable).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The filter condition (this is usually provided through a ByRef or variable containing a BoolExpression). It should return True or False.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>145</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>145</ID>
        <Title>GetMaxWeight</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Returns the neuron(s) with the biggest weight assigned to the processor.  When there are multiple neurons with the same biggest value, all of them are returned.  When the list is empty, an empty list is returned (so no 'empty neuron').</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>0 none</Run>
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>266</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>266</ID>
        <Title>GetOutFiltered</Title>
        <Category>Get</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Returns all the 'to' neurons of the links that start from a specified neuron, and have a specified meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The from part of the link.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A reference to the variable which will hold the meaning of the link to evaluate (this is usually provided through a ByRef or another var containing a variable).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A reference to the variable which will hold the 'to' part of the link to evaluate (this is usually provided through a ByRef or another var containing a variable).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The filter condition (this is usually provided through a ByRef or variable containing a BoolExpression). It should return True or False.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>481</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>481</ID>
        <Title>GetTimerInterval</Title>
        <Category>Timer</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">
            Returns the the
            <Run xml:lang="nl-be">interval used by the specified timer.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>
                <Run xml:lang="nl-be">A timer neuron</Run>
              </Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single <Run xml:lang="nl-be">Double</Run>
            Neuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>144</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>144</ID>
        <Title>GetWeight</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the weight value that is currently assigned to the processor.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0 none
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single DoubleNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>473</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>473</ID>
        <Title>GetWeightOf</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the weight value assigned to the specified neuron in the context of the current processor.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve"><Run FontWeight="Bold">Argument count: </Run>1 </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">a neuron to get the weight for</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single DoubleNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>197</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>197</ID>
        <Title>Global</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">This neuron represents the 'Global' type this can be used by the 'New', </Run>
            <Run NumberSubstitution.CultureSource="User">'TypeOF', 'GetChildren of TypeX',...</Run>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve"> instruction to declare which type of neuron it should create.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>40</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>40</ID>
        <Title>Gray</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meanig for a link from a solvable neuron to a Neuron to indicate the gray scale value of the pixel (as build by a ImageSin for input).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>38</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>38</ID>
        <Title>Green</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meanig for a link from a solvable neuron to a Neuron to indicate the color value of green found in the pixel (as build by a ImageSin for input).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>472</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>472</ID>
        <Title>GridSin</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Identifies a GridSin</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>386</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>386</ID>
        <Title>GuiSin</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>360</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>360</ID>
        <Title>HasReferences</Title>
        <Category>Neurons</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Returns true if any of the neurons in the arguremnt list has any references (incomming, outgoing links or parents).</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>one or more neurons.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">A single neuron, either True(60), or False(61).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>42</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>42</ID>
        <Title>Height</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link to indicate the height of something.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>67</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>67</ID>
        <Title>If</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Identifies the 'If' conditional statement style where each conditional part is evaluated untill one is found that evaluates to true. This one's code will be executed.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>387</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>387</ID>
        <Title>ImageSin</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>307</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>307</ID>
        <Title>ImportanceLevel</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an object or posgroup to an intNeuron, to indicate the offset that should be applied to the processor's weight, when processing the object.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>79</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>79</ID>
        <Title>In</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            This neuron lets the SearchExpression know that it needs to search the incomming links list of the neuron that needs to be searched.
            <LineBreak />Also used as the meaning for a knowledge cluster that represents an incomming statement.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>147</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>147</ID>
        <Title>IncreaseWeight</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Increases the weight of the processor with the spedified amount.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A DoubleNeuron that defines how much the weight should be changed.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>452</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>452</ID>
        <Title>IncreaseWeightOf</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Increases the weight of a single neuron in the context of a processor with the spedified amount.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A DoubleNeuron that defines how much the weight should be changed.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>411</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>411</ID>
        <Title>Increment</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Increments the value of every int or double in the argument list</Paragraph>
          <Paragraph>Arguments: 1 or more ints or doubles (can be mixed)</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>354</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>354</ID>
        <Title>Index</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster found in asset/thesaurus paths to indicate that the item at the specified index should be used. The index itself can be a variable reference.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>7</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>7</ID>
        <Title>IndexOf child</Title>
        <Category>Index of</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the index number (as an IntNeuron) of the first occurance of a neuron in a NeuronCluster.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. The cluster that contains the items
            <LineBreak />2. The item from which we want to know the index number.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>393</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>393</ID>
        <Title>IndexOf cluster</Title>
        <Category>Index of</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the index number (as an IntNeuron) for the first occurance of a neuron's parent cluster.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            1. The neuron that is clustered by the next argument
            <LineBreak />2. a cluster that contains the previous argument.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron, representing the index of the cluster in the list of parents of the neuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>8</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>8</ID>
        <Title>IndexOf info</Title>
        <Category>Index of</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the index number (as an IntNeuron) of the first occurance of a neuron in an Info list of a Link.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of the link
            <LineBreak />2. To part of the link<LineBreak />3. Meaning part of the link<LineBreak />4. Neuron to search for.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>9</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>9</ID>
        <Title>IndexOf link</Title>
        <Category>Index of</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the index number (as an IntNeuron) of the first occurance of a Link as it is stored on one side of the link (either the to or from part).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of the link
            <LineBreak />2. To part of the link<LineBreak />3. Meaning part of the link<LineBreak />4. From or To part to indicate the side of the link to use.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>244</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>244</ID>
        <Title>Info count</Title>
        <Category>Count</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the the number of neurons are attached as info to a link.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The From part of the link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The To part of the link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The Meaning of the link</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>81</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>81</ID>
        <Title>InfoToSearchFor</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a SearchExpression to the neuron that defines which info (in the info list of the links) needs to be searched for.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>351</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>351</ID>
        <Title>InputPatternPartialMode</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an input pattern to 'PartialInputPattern' or 'PartialInputPatterFallback' to indicate that it is a partial pattern + which type of partial.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>470</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>470</ID>
        <Title>Insert</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Inserts the list of arguments (minus the first 2 arguments), to the first argument, which must be a variable, starting at the index position specified in the second argument.</Paragraph>
          <Paragraph>Argumnets:</Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph>a variable (usually provided through a byRef)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the index position where the first item will be inserted.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the first item that needs to be added to the variable. any items that follow this one will be inserted in the same order.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>24</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>24</ID>
        <Title>Insert Child</Title>
        <Category>Insert</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Inserts a neuron to a cluster at the specified position.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. The cluster to insert an item to.
            <LineBreak />2. The item to insert to the cluster.<LineBreak />3. The index (IntNeuron) at which to perform the insert.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>26</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>26</ID>
        <Title>Insert info</Title>
        <Category>Insert</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Searches for the link defined by the first 3 arguments and inserts the 4th argument to that link's info section if found (otherwise an error is logged).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of link
            <LineBreak />2. To part of link<LineBreak />3. meaning part of link<LineBreak />4. neuron value to insert to info section.
            <LineBreak />5. The index (IntNeuron) at which the insert should be performed.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>25</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>25</ID>
        <Title>Insert Link</Title>
        <Category>Insert</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Creates a new link between 3 neurons and performs an insert at the specfiied positions when the link is added to the 'From' and/or 'To' part of the link.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">1. From part of link<LineBreak />2.  Index at which the link should be inserted on the from side (use 'Empty' (99) to indicate an add).<LineBreak />3. To part of link<LineBreak />4. Index at which the link should be inserted on the To side (use 'Empty' (99) to indicate and add).<LineBreak />5. meaning part of link</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>62</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>62</ID>
        <Title>Instruction</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            Used as the meaning for a link from a Statement or ResultStatement to the instruction that it will call.
            <LineBreak />Also used to identify instruction neurons in the 'typeof' operator.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>108</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>108</ID>
        <Title>Interjection</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a interjection.  </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>140</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>140</ID>
        <Title>Interleaf</Title>
        <Category>Set operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Interleafs the children of the first cluster/var with the children of the second.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            Ex: If clusterA contains: aaa
            <LineBreak />and ClusterB contains: bb<LineBreak />then result = abbabba
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Notice that we put the intire content of cluster 2 in between 2 children of cluster 1, but not in front or at the end.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">NeuronCluster or variable  1</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>NeuronCluster or variable 2</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User" />
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>139</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>139</ID>
        <Title>Intersect</Title>
        <Category>Set operations</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Performs an intersection on the children of the specified clusters and returns the result as a list of neurons (so doesn't create a new cluster).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2 clusters required)
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>395</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>395</ID>
        <Title>IntersectVar</Title>
        <Category>Set operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Performs an intersection on the content of the specified variables and returns the result as a list of neurons which contains all the items of var 1 that are not in var 2.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2 variables required)
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>110</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>110</ID>
        <Title>Interval</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a TimerNeuron to a DoubleNeuron to indicate the time that should pass between 2 processing ticks.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>89</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>89</ID>
        <Title>IntNeuron</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the IntNeuron type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>385</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>385</ID>
        <Title>IntSin</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>324</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>324</ID>
        <Title>InvalidResponsesForPattern</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a text neuron to a cluster (which also has this neuron as meaning), to indicate the outputs that should be used if there was no valid response given to the output value found in 'to'.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>401</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>401</ID>
        <Title>InvertSign</Title>
        <Category>Unary</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Inverts the sign of an int or double</Run>
          </Paragraph>
          <Paragraph>Arguments:</Paragraph><Paragraph>1: an int or a double</Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>402</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>402</ID>
        <Title>InvertSignDouble</Title>
        <Category>Unary</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Inverts the sign of a double</Paragraph><Paragraph>Arguments:</Paragraph>
          <Paragraph>1: a double</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>405</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>405</ID>
        <Title>InvertSignDoubleList</Title>
        <Category>Unary</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Inverts the sign of a list of double</Paragraph><Paragraph>Arguments:</Paragraph>
          <Paragraph>1: the first double<LineBreak />2:...</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>403</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>403</ID>
        <Title>InvertSignInt</Title>
        <Category>Unary</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Inverts the sign of an int</Paragraph><Paragraph>Arguments:</Paragraph>
          <Paragraph>1: an int</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>404</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>404</ID>
        <Title>InvertSignIntList</Title>
        <Category>Unary</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Inverts the sign of a list of ints</Paragraph><Paragraph>Arguments:</Paragraph>
          <Paragraph>1: the first int<LineBreak />2:...</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>308</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>308</ID>
        <Title>Is clustered by</Title>
        <Category>Contains</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns true if the first argument is clustered by any of the following arguments, which should all be clusters. Otherwise, false is returned</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>one or more clusters that should contain argument 1.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>271</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>271</ID>
        <Title>Is clustered by all</Title>
        <Category>Contains</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns true if the first argument is clustered by all the following arguments, which should all be clusters. Otherwise, false is returned</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A neuron.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>one or more clusters that should contain argument 1.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>111</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>111</ID>
        <Title>IsActive</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link between a TimerNeuron and either 'True' (60) or 'False' (61) to indicate that the timer is active (60) or not active (61).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>163</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>163</ID>
        <Title>IsFrameEvoker</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph Margin="0,0,0,0" FontFamily="Courier New" FontSize="13.3333333333333">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a frame element to a frame, to indicate that the element evokes the frame. This allows us to search fraster in the set of frames by only looking at those that have been evoked. Note that the element should be a child of the frame to which it points.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>245</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>245</ID>
        <Title>IsInitialized</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Returns true if al the variables in the argument list have/had a value assigned in the processor. False when the var/global has not yet been accessed by the processor in the correct context of the global/var.  For variables this is the link execution, for globals, this is the whole duration of the processor. You can manually clear vars/globals with the clear instruction. After a clear, this instruction will also return false.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Arguments: </Run>a list of variables and or globals, usually passed along with a 'Byref' statement.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single Neuron: true or false.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>259</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>259</ID>
        <Title>IsRecursive</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a neuron that represents a wordnet relationship (like hypernym), to 'True' or 'False' to indicate that the relationship is recursive or not. Only recusive relationships can have roots.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>477</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>477</ID>
        <Title>IsTimerActive</Title>
        <Category>Timer</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">
            Returns true if the
            <Run xml:lang="nl-be">argument (which must be a timer) is active or not.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A <Run xml:lang="nl-be">Timer neuron</Run>.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>179</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>179</ID>
        <Title>IToD</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts an IntNeuron into an DoubleNeuron.  It is possible to convert multiple items at once.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more IntNeurons.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more DoubleNeurons: for each input item 1 output value.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>378</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>378</ID>
        <Title>IToDateTime</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Converts a list of IntNeurons into a DateTimeCluster. This can only convert 1 cluster at a time.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>maximum 6, minimum 1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The year</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the month</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the day</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the hour</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the minutes</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the seconds</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">Resturns a single DateTime cluster.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>180</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>180</ID>
        <Title>IToS</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts an IntNeuron into an TextNeuron.  It is possible to convert multiple items at once.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more IntNeurons.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more TextNeurons: for each input item 1 output value.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>440</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>440</ID>
        <Title>JmpIf</Title>
        <Category>Processor</Category>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>51</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>51</ID>
        <Title>LeftPart</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a boolExpression to the left part of the expression.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>171</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>171</ID>
        <Title>LemmaId</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" FontFamily="Courier New" FontSize="13.3333333333333">
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a link from an 'object' cluster to an int indicating the 'lemma' id of the object as it is defined in framenet.  a lemma is similar as a synset in wordnet. </Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>432</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>432</ID>
        <Title>Length</Title>
        <Category>strings</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>gets the length of a string.(only 1).</Paragraph>
          <Paragraph>return: an intneuron containing the length of the string.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>109</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>109</ID>
        <Title>Letter</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a neuron (generated by a textsin as input data) to another IntNeuron, to indicate the presence of a letter, expressed as an integer (ASCII). </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>34</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>34</ID>
        <Title>LetterSequence</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Courier New" FontSize="13.3333333333333"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meanig for a link from a solvable neuron to a cluster containing letters (where the letter is expressed as an IntNeuron), as build by a TextSin for input to indicate the presence of a word that could not be found in the dictionary.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>272</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>272</ID>
        <Title>Link exists</Title>
        <Category>Contains</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Returns true if the link exists, otherwise false.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The from part of the link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The to part of the link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the meaning of the link</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, either True(60), or False(61).
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>242</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>242</ID>
        <Title>Link in count</Title>
        <Category>Count</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the the number of incomming links there are on a neuron.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron for which to return the number of incomming links.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>243</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>243</ID>
        <Title>Link out count</Title>
        <Category>Count</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the the number of outgoing links there are on a neuron.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The neuron for which to return the number of outgoing links.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single IntNeuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>286</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>286</ID>
        <Title>LinksToLock</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            This neuron is used as the meaning for a link from a LockExpression to a NeuronCluster that contains expressions for retrieving the
            <Run FontStyle="Italic">from</Run> and <Run FontStyle="Italic">to</Run> part of the links that need to be locked.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>375</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>375</ID>
        <Title>list</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a  cluster to indicate that the cluster contains a list of items. This is used to collect input data like: a, b, c, d</Run>
            <LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">Also used to indicate that the ;= operator should be executed in do patterns that assign to assets.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>75</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>75</ID>
        <Title>ListToSearch</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a parsed thesaurus variable to another neuron, to indicate which final value that the path should search on the result. This is used to indicate that the thes path should get the 'opposite', 'superlative',... of something.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>390</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>390</ID>
        <Title>LoadAssetItem</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a parsed thes path to a value to indicate that it should be loaded into an asset (the previously used one, from the same processor if posible) and also make certain that the thesaurus relationship exists.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>391</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>391</ID>
        <Title>LoadThesItem</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used as the meaning for a link from a parsed thes path to a value to indicate that it should be loaded into the thesaurus.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>406</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>406</ID>
        <Title>Local</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run NumberSubstitution.CultureSource="User" xml:space="preserve">Identifies the Local type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>284</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>284</ID>
        <Title>LockExpression</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run NumberSubstitution.CultureSource="User" xml:space="preserve">Identifies the LockExpression type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>69</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>69</ID>
        <Title>Looped</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the 'Looped' conditional statement style where the block of conditional parts is continuasly reevaluated for as long as 1 evaluates to true in the same manner as the 'if' style is evaluated.  This one's code will be executed on each pass.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>65</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>65</ID>
        <Title>LoopItem</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a conditional statement to a variable that is to be used as the item that contains the current value in a foreach loop.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>64</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>64</ID>
        <Title>LoopStyle</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link between a conditional statement and the neuron that identifies the type of condition to use.  This must be one of the following values:</Paragraph>
          <List MarkerStyle="Disc" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>If (67)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Case (68)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>loop (a loop that will be executed for as long as 1 of the conditions is true and who's code will be executed)(69)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Case loop (a loop that will check use a case item to check the conditions against, it will loop for as long as a condition evaluates to true) (70)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>For each (neuron in a cluster or variable) (71)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Loop until (loop with the check at the end) (72).</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>27</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>27</ID>
        <Title>Make cluster</Title>
        <Category>Neurons</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Creates a cluster of the neurons specified in the argument list.  </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve"><Run FontWeight="Bold">Argument count: </Run>-1 (at least 1, more allowed). </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Arguments: </Run>any type of neuron is allowed.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. The meaning that will be assigned to the cluster
            <LineBreak />2. The options first child of the cluster, followed by any others.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single NeuronCluster.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>297</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>297</ID>
        <Title>Max</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Calculates the maximum on a series or either IntNeurons, DoubleNeurons or time clusters</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron, DoubleNeuron or Time cluster</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron, DoubleNeuron or Time cluster, depending on the type of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>161</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>161</ID>
        <Title>MemberType</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used by the ReflectionSin as the meaning for a link from an output neuron to a member.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>298</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>298</ID>
        <Title>Min</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Calculates the minimum on a series or either IntNeurons, DoubleNeurons or time clusters</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron, DoubleNeuron or Time cluster</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron, DoubleNeuron or Time cluster, depending on the type of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>419</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>419</ID>
        <Title>MinusAssignDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>performs a -= on the 2 arguments.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the first double, which wil be decremented with the second arg.
            <LineBreak />2: the amount to remove from the first arg.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>420</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>420</ID>
        <Title>MinusAssignInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>performs a -= on the 2 arguments.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the first int, which wil be decremented with the second arg.
            <LineBreak />2: the amount to remove from the first arg.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>428</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>428</ID>
        <Title>MinusDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph xml:space="preserve">returns arg 1 -  arg 2. Both have to be doubles</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first double<LineBreak />2: the second double</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>427</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>427</ID>
        <Title>MinusInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 - arg 2. Both have to be ints</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first int<LineBreak />2: the second int</Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>464</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>464</ID>
        <Title>MinusStoreDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>subtracts 2 doubles and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the double that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>460</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>460</ID>
        <Title>MinusStoreInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>subtracts 2 ints and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the int that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>422</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>422</ID>
        <Title>ModDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 % arg 2. Both have to be doubles</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first double<LineBreak />2: the second double</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>421</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>421</ID>
        <Title>ModInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 % arg 2. Both have to be ints</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first int<LineBreak />2: the second int</Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>465</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>465</ID>
        <Title>ModStoreDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>takes the modulus of 2 doubles and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the double that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>462</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>462</ID>
        <Title>ModStoreInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>takes the modulus of 2 ints and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the int that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>247</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>247</ID>
        <Title>MorphOf</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning of a link from a textneuron to a posgroup, indicating that the text is a morphed representation of the posgroup. For instance, 'bought' is the morphed form of the verb 'buy'.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>18</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>18</ID>
        <Title>Move children</Title>
        <Category>Copy/move</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Same as CopyChildren (14), but this instruction removes the children after the copy.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>19</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>19</ID>
        <Title>Move info</Title>
        <Category>Copy/move</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Same as CopyInfo (15) but items are removed when the operation is done.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>426</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>426</ID>
        <Title>MultiplyDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 * arg 2. Both have to be doubles</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first double<LineBreak />2: the second double</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>425</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>425</ID>
        <Title>MultiplyInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>returns arg 1 * arg 2. Both have to be ints</Paragraph>
          <Paragraph>Arguments:<LineBreak />1: the first int<LineBreak />2: the second int</Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>466</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>466</ID>
        <Title>MultiplyStoreDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>multiplies 2 doubles and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the double that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>459</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>459</ID>
        <Title>MultiplyStoreInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>multiplies 2 ints and stores the result value in the first argumetn.</Paragraph>
          <Paragraph>
            Arguments:<LineBreak />1: the int that will store the result<LineBreak />2: the first double/int to add
            <LineBreak />3: the second double/int to add
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>158</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>158</ID>
        <Title>NameOfMember</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph xml:space="preserve">Used by the ReflectionSin as the meaning for a link from an output neuron to the name of a memeber (function/field/property) to call/render.  When this is used to call a function, this function must first have been loaded so that the sin knows about it.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>86</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>86</ID>
        <Title>Neuron</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the neuron type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>87</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>87</ID>
        <Title>NeuronCluster</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the NeuronCluster type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>285</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>285</ID>
        <Title>NeuronsToLock</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">This neuron is used as the meaning for a link from a LockExpression to a NeuronCluster that contains expressions for retrieving the neurons that need to be locked.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>12</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>12</ID>
        <Title>New</Title>
        <Category>Neurons</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Creates a new neuron.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">The type of neuron that should be created.  This should be one of the following fixed values:     <LineBreak />- Neuron (86)<LineBreak />- NeuronCluster (87)<LineBreak />- DoubleNeuron (88)<LineBreak />- IntNeuron (89)<LineBreak />- TextNeuron (90)<LineBreak />- BoolExpression (91)<LineBreak />- ConditionalPart (92)<LineBreak />- ConditionalStatement (93)<LineBreak />- ResultStatement (95)<LineBreak />- SearchExpression (99)<LineBreak />- Statement (94)<LineBreak />- Variable (97)<LineBreak />- Global (196)<LineBreak />- Assignment (98)<LineBreak />- ExpressionsBlock (113)<LineBreak />- ByRefExpression (43)</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron, of the same type as specified by the input value.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>400</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>400</ID>
        <Title>Not</Title>
        <Category>Unary</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Gets the boolean inverse of the argument.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Arguments:</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">1: a boolean value.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>83</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>83</ID>
        <Title>Noun</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a noun.  </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>373</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>373</ID>
        <Title>Number</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used by parsedThesaurus clusters, to indicate that any type of number is allowed.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>134</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>134</ID>
        <Title>Object</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Courier New" FontSize="13.3333333333333"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a NeuronCluster that represents an object, which is a single point of 'knoledge'.  This cluster contains neurons that all refer to the same thing, but from a differnt aspect.  For instance, the cluster can have a TextNeuron that represents it's textual value, a neuron used an input link and one as an output link.  All 3 represent the same thing, but froma different aspect: text, input, output.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>302</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>302</ID>
        <Title>OnShutDown</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>This is an event cluster and it is called when the network is stopped/unloaded.</Paragraph>
          <Paragraph xml:space="preserve"><Run FontWeight="Bold">Note:</Run> this is not done when the designer is running normally.  When the designer is in sandbox mode, all events are called.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>303</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>303</ID>
        <Title>OnSinActivity</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>This is an event cluster and it is called when there is activity on a sensory interface in the network.</Paragraph>
          <Paragraph xml:space="preserve"><Run FontWeight="Bold">Note:</Run> this is not done when the designer is running normally.  When the designer is in sandbox mode, all events are called.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>380</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>380</ID>
        <Title>OnSinCreated</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Called when a sin gets created. CurrentSin has a ref to the sin being created.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>381</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>381</ID>
        <Title>OnSinDestroyed</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Called when a sin gets destroyed. CurrentSin has a ref to the sin being destroyed.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>301</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>301</ID>
        <Title>OnStarted</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">This is an event cluster and it is called when the network is started.</Run>
          </Paragraph>
          <Paragraph xml:space="preserve"><Run FontWeight="Bold">Note:</Run> this is not done when the designer is running normally.  When the designer is in sandbox mode, all events are called.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>342</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>342</ID>
        <Title>Operand</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning of a link between a conditional pattern and a cluster. The content of the cluster is used to calculate the value that needs to be compared for the conditional. The conditional pattern also has an extra link that contains the boolean expression that will calculate the actual result of the conditional, after all the operands where calculated.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>50</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>50</ID>
        <Title>Operator</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a BoolExpression to the neuron that represents the operrator to use.  This is usually either: '=='53, '&lt;'54, '&gt;'55, '&lt;='56, '&gt;='57, '!='58 or 'contains'59.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>169</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>169</ID>
        <Title>Optional</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Frame elements link to this neuron to indicate they are of 'peripheral' importance: not required, optional.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>80</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>80</ID>
        <Title>Out</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Georgia" FontSize="16"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">This neuron lets the SearchExpression know that it needs to search the outgoing links list of the neuron that needs to be searched.</Run>
          </Paragraph>
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Georgia" FontSize="16"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">Also used as the meaning for a knowledge cluster that represents an outgoing statement.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>374</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>374</ID>
        <Title>Outlink</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">used as the meaning for a cluster to indicate that a direct outlink should be taken in a thesaurus or var path.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>13</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>13</ID>
        <Title>Output</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Sends one or more neurons to a Sin for output.  This is done directly (so without first solving them) and in a synchronous manner: when the next expression executes, the neurons have been processed by the sin.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2 required)
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">The sin to send the values to.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">The first neuron to send to the sin.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">optional list of other neurons that need to be sent to the sin.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>347</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>347</ID>
        <Title>OutputListTraversalMode</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Determins how an output is picked from it's list: random or in sequence. Used as the meaning for a link from an output cluster.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>323</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>323</ID>
        <Title>OutputPatterns</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster and a link from an patternRule to a cluster with this meaning, to indicate that the patternRule should use the specified outputs.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>439</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>439</ID>
        <Title>ParamStackcount</Title>
        <Category>Processor stack</Category>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>341</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>341</ID>
        <Title>ParsedAssetVariable</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used as the meaning for a cluster that represents the parsed form of an asset varaible.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>343</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>343</ID>
        <Title>ParsedDoPattern</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a do-pattern (textNeuron) to a neuron to indicate which action needs to be performed.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>328</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>328</ID>
        <Title>ParsedPatternOutput</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an OutputPattern item to a cluster (with the same meaning), to indicate how the output pattern should be rendered to the output.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>327</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>327</ID>
        <Title>ParsedPatternPart</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a Inputpattern itme (single text neuron), to al the neurons (excpet the start) that make up the parsed pattern tree. This allows us to retrieve all the nodes that need to be removed for a single pattern item, in case it gets recompiled.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>326</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>326</ID>
        <Title>ParsedPatternStart</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a textneuron (single text pattern item) to another textneuron, which is the start of the parse tree for the pattern item. This allows us to find the start of a parse for removing it.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>339</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>339</ID>
        <Title>ParsedThesVariable</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used as the meaning for a cluster that represents the parsed form of a thesaurus varaible.</Paragraph>
          <Paragraph>Also used to store all the thesaurus variables that are the start of a pattern. This is used so we can find which variables need to be used as starts.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>338</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>338</ID>
        <Title>ParsedVariable</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster that represents the parsed form of a regular varaible.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Also used to store all the regular variables that are the start of a pattern. This is used so we can find which variables need to be used as starts.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>352</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>352</ID>
        <Title>PartialInputPattern</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the to part for a link from an inputpattern with meaning 'InputPatterPartialMode', to indicate that the pattern can be declared mulitple times. The context will be determined by the pattern editor (or topic) that contains it (only 1 editor may contain the same input pattern). The pattern that belongs to the last topic, gets activated.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>353</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>353</ID>
        <Title>PartialInputPatternFallback</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used as the to part for a link from an inputpattern with meaning 'InputPatterPartialMode', to indicate that the pattern can be declared mulitple times. The context will be determined by the pattern editor (or topic) that contains it (only 1 editor may contain the same input pattern). If there is no context found (no topic already encountered), use the pattern with this value. Only 1 allowed per duplication set.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>474</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>474</ID>
        <Title>PassFrozenToCaller</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">when the current processor was created through a 'BlockedSolve'  or 'BlockedCall' instruction, all the neurons that are frozen for the current processor will also be frozen for the calling processor (the one that is blocked). This is used to pass values back to the caller that are frozen. If you don't call this function, all the frozen neurons will be deleted by the time that they get to the caller.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>335</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>335</ID>
        <Title>Pattern Fallback values</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Contains all the output statements that can be used when there is no valid pattern match found.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>20</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>20</ID>
        <Title>Peek</Title>
        <Category>Processor stack</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the top neuron on the processor's 'ToSolve' stack. If the stack is empty, the 'Empty' neuron is returned (99).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single neuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>397</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>397</ID>
        <Title>Perform</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Executes an intsruction.  When a variable contains a reference to an instruction, you can 'call' it through this instruction.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An instruction that needs to be executed (passed along by passing a var).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The parameters that need to be passed to the instruction.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>output: none</Paragraph><Paragraph NumberSubstitution.CultureSource="User" />
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>396</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>396</ID>
        <Title>PerformResult</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Executes an intsruction and returns it's result.  When a variable contains a reference to an instruction, you can 'call' it through this instruction.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An instruction that needs to be executed (passed along by passing a var).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The parameters that need to be passed to the instruction.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>output: the result of the instruction.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>2</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>2</ID>
        <Title>Pop</Title>
        <Category>Processor stack</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Removes the last neuron on the processor's 'ToSolve' stack.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>409</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>409</ID>
        <Title>PopValue</Title>
        <Category>Processor stack</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Gets a list of neurons from the value stack, for passing along arguments to a function call.</Paragraph>
          <Paragraph>Arguments: none</Paragraph><Paragraph>Returns: a list of neurons.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>135</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>135</ID>
        <Title>POS</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">The 'Part of speech' neuron which is used as the meaning for a link from an object (cluster) to a neuron that identifies it's part of speech.  This can be:</Paragraph>
          <List MarkerStyle="Disc" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>Verb (82)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Noun (83)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Adjective (84)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Adverb (85)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Preposition (106)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Conjunction (107)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Intersection (108)</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>246</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>246</ID>
        <Title>POSGroup</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a cluster that contains object clusters that share the same TextNeuron and POS (part of speach) value. This allows for faster parsing since only  1 split is performed per pos type.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>437</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>437</ID>
        <Title>PrepareLocal</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">prepares local variables so that any previous value is correctly restored after the block that contains the prepareLocal instruction, is finished.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Input: 1 or more locals.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>106</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>106</ID>
        <Title>Preposition</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a preposition.  </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>260</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>260</ID>
        <Title>Pronoun</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Represents the pronoun part of speech (I, you, me, yours,....)</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>3</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>3</ID>
        <Title>Push</Title>
        <Category>Processor stack</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Adds the specified neuron to the end of  the processor's 'ToSolve' stack.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve"><Run FontWeight="Bold">Argument count: </Run>-1 (at least 1, more allowed). </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Arguments: </Run>any type of neuron is allowed.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>408</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>408</ID>
        <Title>PushValue</Title>
        <Category>Processor stack</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Puts the arguments on the value stack, for passing along as arguments to a function call.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Arguments: a list of neurons.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>442</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>442</ID>
        <Title>QueryLoop</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used to indicate the special query/select loop style for looping over query data.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>449</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>449</ID>
        <Title>QueryLoopChildren</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used to indicate the special query/select loop style for looping over the children of a cluster (best for really long lists).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>450</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>450</ID>
        <Title>QueryLoopClusters</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used to indicate the special query/select loop style for looping over the parent clusters of a neuron (best for really long lists).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>447</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>447</ID>
        <Title>QueryLoopIn</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used to indicate the special query/select loop style for looping over the incomming links (from, meaning) of a neuron.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>448</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>448</ID>
        <Title>QueryLoopOut</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used to indicate the special query/select loop style for looping over the outgoing links (to, meaning) of a neuron.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>156</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>156</ID>
        <Title>Questions</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a topic cluster (pattern editor) to a cluster containing outputclusters, similar to the conditionals attached to rules.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>348</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>348</ID>
        <Title>Random</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as a value (to part of a link) for the OutpuListTraverselMode. It indcates that random items should be picked from the list.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>37</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>37</ID>
        <Title>Red</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meanig for a link from a solvable neuron to a Neuron to indicate the color value of red found in the pixel  (as build by a ImageSin for input).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>388</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>388</ID>
        <Title>ReflectionSin</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>157</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>157</ID>
        <Title>ReflectionSinCall</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used by the ReflectionSin as a possible state to indicate that it will try to call a function when output is sent to it.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>288</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>288</ID>
        <Title>ReflectionSinException</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a neuron to a TextNeuron, to indicate that the function call (defined by the 'from' neuron), caused an exception of the specified type-name (the 'to' part).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>143</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>143</ID>
        <Title>Relationships</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">This cluster contains all the relationships that are currently known by the WordNetSin.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>458</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>458</ID>
        <Title>Remove</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">removes the items from the variable's content.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2 or more.
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The variable for which to change the content.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the first item to remove from the lsit.</Paragraph><Paragraph />
            </ListItem>
          </List>
          <Paragraph />
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>398</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>398</ID>
        <Title>Remove at</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">removes the item at the position specified in the second arg for the variable specified in the first arg.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The variable for which to change the content. This should be passed along through another variable (or result statement) or a byref expression.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>an int-neuron representing the index (0 based) of the item to replace</Paragraph><Paragraph />
            </ListItem>
          </List>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>21</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>21</ID>
        <Title>Remove child</Title>
        <Category>Remove</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Removes 1 or more neurons from a cluster.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>-1</Run>
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster to remove an item from.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The first item to remove from the cluster.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>275</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>275</ID>
        <Title>Remove child at</Title>
        <Category>Remove</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Removes teh neuron at the specified index from a cluster.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster to remove an item from.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The index of the item to remove.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>23</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>23</ID>
        <Title>Remove info</Title>
        <Category>Remove</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Searches for the link defined by the first 3 arguments and removes the next arguments from that link's info section if found (otherwise an error is logged).</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>-1</Run>
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of link
            <LineBreak />2. To part of link<LineBreak />3. meaning part of link<LineBreak />4. the first neuron to remove from info section.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>276</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>276</ID>
        <Title>Remove info at</Title>
        <Category>Remove</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Searches for the link defined by the first 3 arguments and removes the neuron on the specified index from that link's info section if found (otherwise an error is logged).</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>4
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            1. From part of link<LineBreak />2. To part of link
            <LineBreak />3. meaning part of link<LineBreak />4. the index of the item to remove.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>22</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>22</ID>
        <Title>Remove link</Title>
        <Category>Remove</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Removes a link between 3 neurons.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            1. From part of link
            <LineBreak />2. To part of link<LineBreak />3. meaning part of link
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>277</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>277</ID>
        <Title>Remove link in at</Title>
        <Category>Remove</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Removes the incomming link at the specified index from the specified neuron.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">To part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">index of the link to remove</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>278</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>278</ID>
        <Title>Remove link out at</Title>
        <Category>Remove</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Removes the outgoing link at the specified index from the specified neuron.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">From part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">index of the link to remove</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>282</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>282</ID>
        <Title>Remove links in</Title>
        <Category>Remove</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Removes all the incomming links to a specified neuron with the specified meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">To part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">the meaning of the links.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>281</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>281</ID>
        <Title>Remove links out</Title>
        <Category>Remove</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Removes all the outgoing links from the specified neuron with the specified meaning.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">From part of link</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">the meaning of the links.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>185</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>185</ID>
        <Title>Remove split result</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Removes the specified neurons from the list of result values for a possible split with the current processor.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1: a list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>355</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>355</ID>
        <Title>RepeatPatterns</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>469</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>469</ID>
        <Title>Replace</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Replaces all the occurences of the second arg with the third argument, in the content of the varaible found in the first argument.</Paragraph>
          <Paragraph>Argumnets:</Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph TextAlignment="Justify" xml:space="preserve">a variable </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph TextAlignment="Justify">the item to replace</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph TextAlignment="Justify">the item that will replace the second argument.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>168</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>168</ID>
        <Title>Required</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Frame elements link to this neuron to indicate they are required to be present.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>238</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>238</ID>
        <Title>RequiresFloatingSeparator</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">This neuron is used as the meaning for a link from a looped flow conditional to '</Run>
            <Run FontFamily="Segoe UI" FontStyle="Italic" FontSize="12">True</Run>
            <Run FontFamily="Segoe UI" FontSize="12">' or '</Run>
            <Run FontFamily="Segoe UI" FontStyle="Italic" FontSize="12">False</Run>
            <Run FontFamily="Segoe UI" FontSize="12">' to indicate that 2 consecutive conditional parts of the loop need to havea floating flow in between them (as in: there needs to be a space between an integer, float and word.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>392</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>392</ID>
        <Title>RequiresResponse</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an invalidResponseFor pattern to itself, to indicate that the bot still requires a valid response after the InvalidResponsefor value has been rendered (otherwise, the system no longer requires a response after an invalid response is rendered).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>183</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>183</ID>
        <Title>ResetWeight</Title>
        <Category>Processor weight</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Removes the current weight of the processor.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>0: none.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>325</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>325</ID>
        <Title>ResponseForOutputs</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a textneuron (patten-output) to a cluster containing textneurons, to indicate all the valid questions for which this is a valid response.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>273</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>273</ID>
        <Title>RestrictionDefinesFullContent</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for link between a frame element restriction or a restriction group and 'true'/'false' to indicate wether the restricion(group) defines every neuron that should be included in the result, or if the result is allowed to have more items, that aren't defined in the restriction.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>237</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>237</ID>
        <Title>RestrictionModifierExclude</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            This neuron is attached to a frame element restriction (using
            <Run FontStyle="Italic">VerbNetRestrictionsModifier</Run> as meaning) to indicate that all the items that comply to the restriction should be excluded from the result.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>236</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>236</ID>
        <Title>RestrictionModifierInclude</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">This neuron is attached to a frame element restriction (using </Run>
            <Run FontFamily="Segoe UI" FontStyle="Italic" FontSize="12">VerbNetRestrictionsModifier</Run>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve"> as meaning) to indicate that all the items that comply to the restrictio should be included in the result.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>95</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>95</ID>
        <Title>ResultStatement</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the ResultStatement type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>438</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>438</ID>
        <Title>return</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Exits a function call without returning any values.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>407</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>407</ID>
        <Title>Return value</Title>
        <Category>Global values</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Gets and removes the last return value that was rendered by a function (cluster) call.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>412</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>412</ID>
        <Title>ReturnValue</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Uses the arguments as a return value for a function call and exits the current function call. When there are no values specified, an empty result is returned.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Arguments: a list of neurons.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>441</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>441</ID>
        <Title>ReturnValueIf</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">A specialized version of ReturnValue.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Stops the current function and returns a possible result (including an empty result if no value was specified). This will only be done if the condition is met.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">arguments:</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">1: an expression that evaluates to true or false.</Run>
            <LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">2: any possible results that need to be returned.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>220</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>220</ID>
        <Title>Reverse</Title>
        <Category>Set operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Reverses the order of the arguments</Paragraph>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User">Argument count: -1</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontWeight="Bold" FontSize="12">Returns:</Run>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve"> The same arguments, in reversed sequence.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>52</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>52</ID>
        <Title>RightPart</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a boolExpression to the right part of the expression.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>322</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>322</ID>
        <Title>Rule</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster that represents a single text pattern definition.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>45</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>45</ID>
        <Title>Rules</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link between a neuron and a cluster containing expressions that will be executed when the link is being solved.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>96</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>96</ID>
        <Title>SearchExpression</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the SearchExpression type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>74</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>74</ID>
        <Title>SearchFor</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a SearchExpression to the value(s) that it needs to search for.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>349</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>349</ID>
        <Title>Sequence</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used as a value (to part of a link) for the OutpuListTraverselMode. It indcates that items should be picked in sequence from the list.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>394</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>394</ID>
        <Title>Set at</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">stores the last arg at the position specified in the second arg for the variable specified in the first arg.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The variable for which to change the content. This should be passed along through another variable or a byref expression.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>an int-neuron representing the index (0 based) of the item to replace</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The new value</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>475</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>475</ID>
        <Title>SetChildAt</Title>
        <Category>Set</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">
            stores the last arg at the position specified in the second arg for the
            <Run xml:lang="nl-be">cluster</Run> specified in the first arg.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>3
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">The <Run xml:lang="nl-be">cluster</Run> for which to change the content. </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>an int-neuron representing the index (0 based) of the item to replace</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The new value</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>130</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>130</ID>
        <Title>SetClusterMeaning</Title>
        <Category>Set</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Assigns a new meaning to a NeuronCluster</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A NeuronCluster who's meaning should be changed.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>A neuron that will become the new meaning of the cluster.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>105</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>105</ID>
        <Title>SetFirstOut</Title>
        <Category>Set</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Sets the neuron on the other end of the first link found in the outgoing list of the first argument with the specified meaning to the new value.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>3</Run>
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>From part of link (or the neuron who's outgoing links list must be searched)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>To part of the link (this is the new value).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The meaning part of the link.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>467</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>467</ID>
        <Title>SetString</Title>
        <Category>strings</Category>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>480</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>480</ID>
        <Title>SetTimerInterval</Title>
        <Category>Timer</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run xml:lang="nl-be">Assigns a new interval to the timer.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run xml:lang="nl-be">2</Run>
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>
                <Run xml:lang="nl-be">A timer neuron</Run>
              </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>
                <Run xml:lang="nl-be">A double neuron that represents the new interval.</Run>
              </Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run><Run xml:lang="nl-be">none</Run>.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>457</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>457</ID>
        <Title>Shared</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Attaches to variables to indicate that the content of the variable is shared across processors.  This is used to minimize memory usage.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Warning: Making a variable shared, removes the thread savety features. You should not change the content of shared variables.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>141</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>141</ID>
        <Title>Solve</Title>
        <Category>Processor</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Tries to solve one or more neurons on a  new processor (the same type as that of the calling processor). The current processor continues immediately after the instruction has been called, so it doesn't wait until it  is finished.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">The neuron that needs to be solved (will become the top of the stack, so executed first).</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>446</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>446</ID>
        <Title>Sort</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Sorts the values of the first argument, which must be a variable. The second argument can possibly (not required) be a cluster that serves as a callback. This cluster should return an int to determin bigger, smaller or equal value. The 2 values to be compared, are passed in as function arguments. Note that it is not allowed to perform a split in this callback.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">The variable who's content needs to be sorted (doesn't need to be passed along as byref, a regular var is ok, if you need to have the content of a var, use the 'execute' instruction.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph NumberSubstitution.CultureSource="User">Optionally a callback cluster to determin the order.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User"><Run FontWeight="Bold">returns</Run>: none</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>132</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>132</ID>
        <Title>Split</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Splits up the processor into identical sub processors which will all continue processing from the expression following the split. When all the processors of the split are solved, the result is combined back into the a single processor and all results can be evaluated.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">When the split is finished, all results are combined. If multiple processors have the same result, that result will only be included 1 time and receive the maximum weight that it had accross all processors.  Whe a split is done while there is already a previous result added to the processor, all sub processors will inherit the same result.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 3)
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A NeuronCluster that will be called (executed) when the split is ready to be joined again.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The variable that will contain the neuron that was assigned to the sub processor.  This variable can be used to retrieve the 'current' splitvalue in code.  When passing on this variable, take note that it should be passed using a 'ByRef' expression or as the content of another variable cause otherwise the var will be executed and not passed along.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The first neuron for which to split on, followed by optional other neurons.  For each of these items, a new sub processor will be created and the variable declared in arg 3 will contain the neuron from this list for which the split occurred in that context.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>377</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>377</ID>
        <Title>Split string</Title>
        <Category>strings</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">
            Returns the content of the argument (a textneuron) split into all the words, numbers, signs that are found in the text.
            <LineBreak />Spaces are included in the result.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph xml:space="preserve">A textneuron who's text value needs to be split. </Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of textneurons, IntNeurons and doubleNeurons.
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>451</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>451</ID>
        <Title>SplitAccum</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">Splits up the processor into identical sub processors which will all continue processing from the expression following the split. When all the processors of the split are solved, the result is combined back into the a single processor and all results can be evaluated.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">When the split is finished, all results are added together. If multiple processors have the same result, it's weight will be added together (accumulus). When a processor splits, non of it's results are compied over to the sub processors, they start with a clean slate.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 3)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A NeuronCluster that will be called (executed) when the split is ready to be joined again.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The variable that will contain the neuron that was assigned to the sub processor.  This variable can be used to retrieve the 'current' splitvalue in code.  When passing on this variable, take note that it should be passed using a 'ByRef' expression or as the content of another variable cause otherwise the var will be executed and not passed along.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The first neuron for which to split on, followed by optional other neurons.  For each of these items, a new sub processor will be created and the variable declared in arg 3 will contain the neuron from this list for which the split occurred in that context.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>476</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>476</ID>
        <Title>SplitFixed</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">
            Splits up the processor into identical sub processors which will all continue processing from the expression following the split. When the current link is solved, all splits combine back into the original processor and all results can be evaluated.
            <LineBreak />
            <Run xml:lang="nl-be">The amount of sub processors that gets created is specified as an argument for the instruction. The data to split on is evenly divided over the sub processors.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">When the split is finished, all results are combined. If multiple processors have the same result, that result will only be included 1 time and receive the maximum weight that it had accross all processors.  Whe a split is done while there is already a previous result added to the processor, all sub processors will inherit the same result.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 4)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A NeuronCluster that will be called (executed) when the split is ready to be joined again.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">An integer: the <Run xml:lang="nl-be">nr of sub processors to create</Run>.  </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The variable that will contain the neuron<Run xml:lang="nl-be">(s)</Run> that was<Run
                                                                                                                                 xml:lang="nl-be">/were</Run> assigned to the sub processor.  This variable can be used to retrieve the 'current' splitvalue in code.  When passing on this variable, take note that it should be passed using a 'ByRef' expression or as the content of another variable cause otherwise the var will be executed and not passed along.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>
                The first neuron for which to split on, followed by optional other neurons
                <Run xml:lang="nl-be">. These items are evenly distributed across all the sub processors.</Run>
              </Paragraph>
            </ListItem>
          </List>
          <Paragraph />
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>194</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>194</ID>
        <Title>SplitReaction</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a global variable to 'Duplicate', 'Copy' or 'Empty' to indicate the action to undertake with respect to the global by the processor when it performs a split.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>287</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>287</ID>
        <Title>SplitWeighted</Title>
        <Category>Processor split</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User">
            Splits up the processor into identical sub processors which will all continue processing from the expression following the split. When the current link is solved, all splits combine back into the original processor and all results can be evaluated.
            <LineBreak />Each processor gets a weight assigned, equal to the accumulus mutliplied by the index of the variable that is assigned to the processor.
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">When the split is finished, all results are combined. If multiple processors have the same result, that result will only be included 1 time and receive the maximum weight that it had accross all processors.  Whe a split is done while there is already a previous result added to the processor, all sub processors will inherit the same result.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 4)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>A NeuronCluster that will be called (executed) when the split is ready to be joined again.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">An integer: the accumulus value.  The first processor always gets a weight of 0. When the accumulis is 1, the second proc gets a weight of 1, the next one 2, then 3,... </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The variable that will contain the neuron that was assigned to the sub processor.  This variable can be used to retrieve the 'current' splitvalue in code.  When passing on this variable, take note that it should be passed using a 'ByRef' expression or as the content of another variable cause otherwise the var will be executed and not passed along.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The first neuron for which to split on, followed by optional other neurons.  For each of these items, a new sub processor will be created and the variable declared in arg 3 will contain the neuron from this list for which the split occurred in that context.</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>221</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>221</ID>
        <Title>Stack count</Title>
        <Category>Processor stack</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Returns the number of neurons currently on the processor's 'ToSolve' stack, excluding the neuron being solved.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>0
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A single Int Neuron.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>478</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>478</ID>
        <Title>StartTimer</Title>
        <Category>Timer</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run xml:lang="nl-be">Starts the timer.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>
                <Run xml:lang="nl-be">A timer neuron</Run>
              </Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run><Run xml:lang="nl-be">none</Run>.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>94</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>94</ID>
        <Title>Statement</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the Statement type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>49</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>49</ID>
        <Title>Statements</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a code block or conditional part to a cluster containing expressions (with as meaning 'Code' = 48).</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>299</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>299</ID>
        <Title>StDev</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>Calculates the standard deviation on a series or either IntNeurons, DoubleNeurons or time clusters</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1 (at least 2)
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An IntNeuron, DoubleNeuron or Time cluster</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>The same type of neuron as the first argument.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>An IntNeuron, DoubleNeuron or Time cluster, depending on the type of the arguments.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>181</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>181</ID>
        <Title>SToCc</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts a TextNeuron into a cluster containing TextNeurons (where each item represents a single character).   It is possible to convert multiple items at once.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run><Run>-1</Run>
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more TextNeurons</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more NeuronClusters containing TextNeurons: for each input item 1 output value.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>182</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>182</ID>
        <Title>SToCi</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts a TextNeuron into a cluster containing IntNeurons (where each item represents the ascii value of a single character).  It is possible to convert multiple items at once.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more TextNeurons</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more NeuronClusters containing IntNeurons: for each input item 1 output value.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>225</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>225</ID>
        <Title>SToD</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts a TextNeuron into a DoubleNeuron.  It is possible to convert multiple items at once. When one of them can not be converted into a DoubleNeuron, the entire conversion fails and no results are returned.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more TextNeurons</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more DoubleNeurons, each one representing the double value as represented by the text.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>226</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>226</ID>
        <Title>SToI</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User" xml:space="preserve">Converts a TextNeuron into an IntNeuron.  It is possible to convert multiple items at once. When one of them can not be converted into an IntNeuron, the entire conversion fails and no results are returned.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>One or more TextNeurons</Paragraph>
            </ListItem>
          </List>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User" xml:space="preserve">Returns: </Run>
            <Run NumberSubstitution.CultureSource="User">One or more IntNeurons, each one representing the integer value as represented by the text.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>454</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>454</ID>
        <Title>StoLi</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Converts a string to a list of integers. Multiple strings are allowed, the result will be concatenated.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">input: 1 or more strings.</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">output: 1 or more integers</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>479</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>479</ID>
        <Title>StopTimer</Title>
        <Category>Timer</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run xml:lang="nl-be">Stops the timer.</Run>
          </Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>
                <Run xml:lang="nl-be">A timer neuron</Run>
              </Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run><Run xml:lang="nl-be">none</Run>.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>415</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>415</ID>
        <Title>StoreDouble</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Stores the double value found in arg 2 in argument 1.</Paragraph>
          <Paragraph xml:space="preserve">Arguments: <LineBreak />1: the double to assign the value to<LineBreak />2: the double value to assign</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>413</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>413</ID>
        <Title>StoreInt</Title>
        <Category>Arithmetic</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Stores the int value found in arg 2 in argument 1.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Arguments: </Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">1: the int to assign the value to</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">2: the int value to assign</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>265</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>265</ID>
        <Title>SubFrame</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a frame element to a frame or cluster containing frames, to indicate that the result of the element should match one of the frames.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>368</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>368</ID>
        <Title>SubRules</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a pattern to parts that represent sub rules. Also the start neuron for patterns that start with sub rules.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>279</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>279</ID>
        <Title>Substract</Title>
        <Category>var operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Removes the arguments from the first argument which must be a variable (or global), usually passed along with a byref.</Paragraph>
          <Paragraph>
            <Run FontWeight="Bold" NumberSubstitution.CultureSource="User">Argument count: -1</Run>
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>a reference to a var/global (usually passed along wth a byref or as the content of another var).</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>the first item that needs to be removed from the arg 1.</Paragraph>
            </ListItem>
          </List>
          <Paragraph><Run FontWeight="Bold">Returns:</Run> The content of the var - the other arguments.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>455</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>455</ID>
        <Title>SubString</Title>
        <Category>strings</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Retursn a substring of a string</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Inputs:</Run>
          </Paragraph>
          <List MarkerStyle="Decimal">
            <ListItem>
              <Paragraph>
                <Run FontFamily="Segoe UI" FontSize="12">a string to get a substring from</Run>
              </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>
                <Run FontFamily="Segoe UI" FontSize="12">an int, which is the starting pos of the sub string.</Run>
              </Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>
                <Run FontFamily="Segoe UI" FontSize="12">optionally an int that specifies the length of the substring. when not specified, the substring will go to the end of the original string.</Run>
              </Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>367</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>367</ID>
        <Title>SubTopics</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a pattern to parts that represent sub topics. Also the start neuron for patterns that start with sub topics.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>116</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>116</ID>
        <Title>Suspend</Title>
        <Category>Processor</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Puts the current processor (thread) to sleep and performs a similar operation as AddChild to the arguments: the second is added to the first as a child. This is an atomic operation. After this, the second argument (the child) represents the processor that was put to sleep.  This can be used by the Awake instruction to restart the processor. Which cluster you use doesn't matter.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>2
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>The cluster to add an item to.</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph xml:space="preserve">The item to add  to the cluster. After the operation, this represents the processor that needs to be woken up.  </Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>136</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>136</ID>
        <Title>SynSetID</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Courier New" FontSize="13.3333333333333"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an object to an IntNeuron in order to indicate the info was loaded from WordNet + it identifies from where exactly it was loaded.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>90</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>90</ID>
        <Title>TextNeuron</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Georgia" FontSize="16"
                     NumberSubstitution.CultureSource="User">
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Identifies the TextNeuron type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>382</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>382</ID>
        <Title>TextSin</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>295</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>295</ID>
        <Title>Time</Title>
        <Category>Global values</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">This system variable returns the current system time in the form of a cluster (with meaning 'Time'), containing an int neuron for: year, month, day, hour, minute, second. In that order.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>383</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>383</ID>
        <Title>TimerNeuron</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>300</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>300</ID>
        <Title>TimeSpan</Title>
        <Category />
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>321</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>321</ID>
        <Title>Topic</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster that groups a set of text pattern definitions together. Also used as the meaning for a link from the final neuron in the parsed pattern, to the pattern group that it belongs to , so we can find the outputs for a certain pattern.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>471</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>471</ID>
        <Title>topicFilters</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Ussd as the meaning for a link between a topic cluster and a cluster containing topic filtes. Also used as the meaning for that topic filters clusters.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>431</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>431</ID>
        <Title>ToS</Title>
        <Category>Convert</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">converts the arguments (except the first one) to a textneuron. the first arg determins if the textneuron is indexed or not.</Run>
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Arguments:</Run><LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">1. a bool (true = make index, false = generate temp neuron)</Run>
            <LineBreak />
            <Run FontFamily="Segoe UI" FontSize="12">2. start of list of neurons that needs to be converted into a single textneuron. items can be textneurons, doubles and ints.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>76</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>76</ID>
        <Title>ToSearch</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link from a SearchExpression to the neuron that should be searched.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>60</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>60</ID>
        <Title>True</Title>
        <Category>Global values</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Represents the boolean 'True' value as used by the BoolExpression.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>125</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>125</ID>
        <Title>TypeOf</Title>
        <Category>Neurons</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Returns the exact type (as a neuron) of one or more neurons.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>An optional neuron who's type will be returned, followed by optional other neurons who's type will also be returned.</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons which represent the types of the neurons that were passed as arguments, in the same order (so for each argument, there is a result at the same location).
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Possible results are:</Paragraph>
          <List MarkerStyle="Disc" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>Neuron (86)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>NeuronCluster (87)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>DoubleNeuron (88)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>IntNeuron (89)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>TextNeuron (90)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>BoolExpression (91)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ConditionalPart (92)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ConditionalStatement (93)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ResultStatement (95)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>SearchExpression (99)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Statement (94)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Variable (97)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Global (196)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>Assignment (98)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ExpressionsBlock (113)</Paragraph>
            </ListItem>
            <ListItem>
              <Paragraph>ByRefExpression (43)</Paragraph>
            </ListItem>
          </List>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User" />
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>160</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>160</ID>
        <Title>TypeOfMember</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>Used by the ReflectionSin as the meaning for a link from an output neuron to a TextNeuron that contains the fully qualified name of the type.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>435</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>435</ID>
        <Title>UnFreeze</Title>
        <Category>Neurons</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph NumberSubstitution.CultureSource="User">Makes certain that the specified neurons are no longer frozen.</Paragraph>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>the first item to be frozen.</Paragraph>
            </ListItem>
          </List>
          <Paragraph NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>nothing
          </Paragraph>
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve" />
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>138</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>138</ID>
        <Title>Union</Title>
        <Category>Set operations</Category>
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Combines the the agruments and returns them as a single list (not a new cluster).  This is useful to combine a number of neurons into a single variable.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1.
          </Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Returns: </Run>A list of neurons.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>72</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>72</ID>
        <Title>Until</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Identifies the 'Until' conditional statement style where only 1 conditional part is allowed which will first be executed and only than evaluated. When the evaluation fails, the loop stops.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>358</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>358</ID>
        <Title>UppercaseMap</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster that defines a map to capitalize the letters ina word. The map contains integers which represent the locations of every capitalized letter, so it can be recreated. The TextSins use this to convert the next word that is received.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>336</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>336</ID>
        <Title>UsedResponses</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from an 'OutputPatterns' cluster to another cluster, which has this neuron as meaning. The cluster stores all the responses that have already been used and should therefor not be used again until all others have been used.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>73</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>73</ID>
        <Title>Value</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            Used as the meaning for a link from a variable to a neuron that will be the initial value for the neuron if it hasn't been used yet in the current context.
            <LineBreak />Also used as the meaning from an asset item to it's value.
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>313</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>313</ID>
        <Title>ValueToInspect</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a frame element restriction to a neuron to indicate which part of the 'result' should be interpreted. This is used by the object frames to define which 'semantic' value to compare.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>97</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>97</ID>
        <Title>Variable</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Identifies the Variable type.  Used by the 'New', 'TypeOF', 'GetChildren of TypeX',... instructions.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>82</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>82</ID>
        <Title>Verb</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">Used as the meaning for a link from a neuron to another neuron to indicate that it is a verb.  </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>232</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>232</ID>
        <Title>VerbNetLogicValue</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Identifies the neuron used as the meaning for a link from a verbnet-restrictions cluster to Or/And in order to indicate the logic value of the record (is it optional, required, not specified).</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>234</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>234</ID>
        <Title>VerbNetRestriction</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link between a Frame element-restriction (usually imported from a verbnet role element-selectional restriction) and the restriction object.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>235</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>235</ID>
        <Title>VerbNetRestrictionModifier</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a link from a frame element restriction item and </Run>
            <Run FontFamily="Segoe UI" FontStyle="Italic" FontSize="12">RestrictionModifierInclude</Run>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve"> or </Run>
            <Run FontFamily="Segoe UI" FontStyle="Italic" FontSize="12">RestrictionModifierExclude</Run>
            <Run FontFamily="Segoe UI" FontSize="12">.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>231</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>231</ID>
        <Title>VerbNetRestrictions</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12" xml:space="preserve">Used as the meaning for a link between a frame element (that originated through an import from a verbnet role element) and the restriction object.  It is also used as the meaning for the cluster that contains all the restrictions for a role.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>258</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>258</ID>
        <Title>VerbNetRestrictionSearchDirection</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link from a frame element restriction item to another neuron (usually one from the list of default meanings), to indicate which link path to search on (as defined in the thesaurus), when checking if an item is allowed according to the filter.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>230</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>230</ID>
        <Title>VerbNetRole</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a link between a frame element (that originated from an import of a verbnet role element) and the role object.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>319</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>319</ID>
        <Title>VisualFrame</Title>
        <Category />
        <FlowDocument PagePadding="5,0,5,0" AllowDrop="True"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph>
            <Run FontFamily="Segoe UI" FontSize="12">Used as the meaning for a cluster that represents a visual frame filter.</Run>
          </Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>117</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>117</ID>
        <Title>Warning</Title>
        <Category>Processor</Category>
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Adds a warning entry to the brain's log.</Paragraph>
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">
            <Run FontWeight="Bold" xml:space="preserve">Argument count: </Run>-1
          </Paragraph>
          <List MarkerStyle="Decimal" TextAlignment="Left" FontFamily="Segoe UI" FontSize="12"
                NumberSubstitution.CultureSource="User">
            <ListItem>
              <Paragraph>Optionally the first neuron to send to the log, followed by any others.</Paragraph>
            </ListItem>
          </List>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>41</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>41</ID>
        <Title>Width</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User">Used as the meaning for a link to indicate the width of something.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
  <item>
    <key>
      <unsignedLong>44</unsignedLong>
    </key>
    <value>
      <NeuronData>
        <ID>44</ID>
        <Title>WordNet</Title>
        <Category />
        <FlowDocument xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
          <Paragraph TextAlignment="Left" FontFamily="Segoe UI" FontSize="12" NumberSubstitution.CultureSource="User"
                     xml:space="preserve">The sensory interface that provides access to the wordnet database.  To build all the information for a word, simply send it (the textneuron) as an output to the sin.</Paragraph>
        </FlowDocument>
      </NeuronData>
    </value>
  </item>
</dictionary>
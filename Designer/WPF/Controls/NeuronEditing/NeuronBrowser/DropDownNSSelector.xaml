<UserControl x:Class="JaStDev.HAB.Designer.WPF.Controls.DropDownNSSelector"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:self="clr-namespace:JaStDev.HAB.Designer"
             xmlns:Ctrls="clr-namespace:JaStDev.HAB.Designer.WPF.Controls"
             xmlns:kb="http://kent.boogaart/controls"
             xmlns:prop="clr-namespace:JaStDev.HAB.Designer.Properties"
             Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
             BorderThickness="1"
             ScrollViewer.HorizontalScrollBarVisibility="Auto"
             ScrollViewer.VerticalScrollBarVisibility="Auto"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             x:Name="This"
             Background="Transparent"
             Focusable="True"
             KeyDown="This_KeyDown">
    <UserControl.CommandBindings>
        <CommandBinding Command="self:App.SyncCmd" CanExecute="Sync_CanExecute" Executed="Sync_Executed" />
        <CommandBinding Command="Copy" CanExecute="Copy_CanExecute" Executed="Copy_Executed" />
        <CommandBinding Command="Cut" CanExecute="Cut_CanExecute" Executed="Cut_Executed" />
        <CommandBinding Command="Paste" CanExecute="Paste_CanExecute" Executed="Paste_Executed" />
    </UserControl.CommandBindings>
    <UserControl.InputBindings>
        <KeyBinding Key="F4"
                    Command="self:App.SyncCmd" />
    </UserControl.InputBindings>
    <Grid Name="MainGrid"
          SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                              Width="0" />
        </Grid.ColumnDefinitions>
        <Ctrls:NDBrowserDetatcher IsOpen="{Binding ElementName=This, Path=IsDropDownOpen}"
                                  PlacementTarget="{Binding ElementName=MainGrid}"
                                  Grid.ColumnSpan="2">
            <Popup Name="ThePopup"
                   AllowsTransparency="true"
                   KeyboardNavigation.ControlTabNavigation="Contained"
                   StaysOpen="False"
                   Placement="Bottom"
                   Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Opened="Popup_Opened"
                   Closed="Popup_Closed"
                   IsKeyboardFocusWithinChanged="ThePopup_IsKeyboardFocusWithinChanged">
                <kb:Resizer
                    Height="{Binding Source={x:Static prop:Settings.Default}, Path=NDBBrowserHeight, Mode=TwoWay}"
                    Width="{Binding Source={x:Static prop:Settings.Default}, Path=NDBBrowserWidth, Mode=TwoWay}">
                    <Ctrls:NeuronDataBrowser x:Name="ItemBrowser"
                                             SelectionChanged="ItemBrowser_SelectionChanged"
                                             SelectionCanceled="ItemBrowser_SelectionCanceled" />
                </kb:Resizer>
            </Popup>
        </Ctrls:NDBrowserDetatcher>
        <ToggleButton Grid.ColumnSpan="3"
                      Grid.Column="0"
                      BorderBrush="#FF707070"
                      IsChecked="{Binding ElementName=This, Path=IsDropDownOpen,Mode=TwoWay}"
                      x:Name="BtnToggle">
            <ToggleButton.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#F3F3F3" Offset="0" />
                        <GradientStop Color="#EBEBEB" Offset="0.5" />
                        <GradientStop Color="#DDDDDD" Offset="0.5" />
                        <GradientStop Color="#CDCDCD" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </ToggleButton.Background>
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="OverridesDefaultStyle" Value="true" />
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Focusable" Value="false" />
                    <Setter Property="ClickMode" Value="Press" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <theme:ButtonChrome Name="Chrome"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                    RenderPressed="{TemplateBinding IsChecked}"
                                                    SnapsToDevicePixels="true">
                                    <Grid
                                        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                        HorizontalAlignment="Right">
                                        <Path Name="Arrow"
                                              Margin="3,1,0,0"
                                              Fill="Black"
                                              Data="M 0 0 L 3.5 4 L 7 0 Z"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                                    </Grid>
                                </theme:ButtonChrome>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="true">
                                        <Setter TargetName="Chrome" Property="RenderPressed" Value="true" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <ContentPresenter
            Grid.Column="1"
            Focusable="True"
            IsHitTestVisible="{Binding ElementName=This, Path=ContentFocusable}"
            x:Name="ThePresenter"
            Content="{Binding ElementName=This, Path=SelectionBoxItem}"
            ContentTemplate="{Binding ElementName=This, Path=SelectedNeuronTemplate}"
            VerticalAlignment="{Binding ElementName=This, Path=VerticalContentAlignment}"
            HorizontalAlignment="{Binding ElementName=This, Path=HorizontalContentAlignment}"
            SnapsToDevicePixels="{Binding ElementName=This, Path=SnapsToDevicePixels}" /> <!--Margin="0,3"-->
        <Button Grid.Column="0"
                Width="8"
                Height="8"
                Margin="2,2,0,0"
                Padding="0"
                VerticalAlignment="Top"
                ToolTip="Reset or remove the value."
                x:Name="BtnReset"
                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                Click="BtnReset_Click">
            <Image Source="\Images\Edit\DeleteVerySmall_Enabled.png" />
        </Button>
    </Grid>
</UserControl>